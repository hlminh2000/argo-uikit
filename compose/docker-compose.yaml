version: '3'

volumes:
  clinical_mongodb_data:
    driver: local
  lectern_mongodb_data:
    driver: local

services:
  #####################################################
  # Ego
  #####################################################
  ego-db:
    image: '${POSTGRES_IMAGE}'
    environment:
      PGPORT: 5432
      POSTGRES_DB: ego
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - 18888:5432
  ego-api:
    image: '${EGO_IMAGE}'
    depends_on:
      - ego-db
    volumes:
      - ./ego_bootstrap:/ego_boostrap
    environment:
      SERVER_PORT: 8088
      SERVER_MANAGEMENT_PORT: 8089
      SPRING_PROFILES_ACTIVE: 'auth'
      SPRING_DATASOURCE_URL: 'jdbc:postgresql://ego-db:5432/ego?stringtype=unspecified'
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_FLYWAY_ENABLED: 'true'
      SERVER_SERVLET_CONTEXT_PATH: '/api'
      SPRING_FLYWAY_LOCATIONS: 'classpath:flyway/sql,classpath:db/migration,filesystem:/ego_boostrap'
      GOOGLE_CLIENT_CLIENTID: '${GOOGLE_CLIENT_CLIENTID}'
      GOOGLE_CLIENT_CLIENTSECRET: '${GOOGLE_CLIENT_CLIENTSECRET}'
    ports:
      - 8088:8088
      - 50052:50051
  ego-ui:
    image: '${EGO_UI_IMAGE}'
    depends_on:
      - ego-api
    environment:
      REACT_APP_API: 'http://localhost:8088/api'
    ports:
      - 3501:80

  #####################################################
  # Program Service
  #####################################################
  program-db:
    image: '${POSTGRES_IMAGE}'
    environment:
      PGPORT: 5432
      POSTGRES_DB: program-db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - 18889:5432
  program-service:
    image: '${PROGRAM_SERVICE_IMAGE}'
    restart: always
    depends_on:
      - ego-api
      - ego-ui
      - program-db
    environment:
      SPRING_PROFILES_ACTIVE: 'auth'
      SPRING_DATASOURCE_URL: 'jdbc:postgresql://program-db:5432/program-db?stringtype=unspecified'
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_FLYWAY_ENABLED: 'true'
      APP_EGO_URL: 'http://ego-api:8088/api'
      APP_EGO_CLIENT_ID: 'program'
      APP_EGO_CLIENT_SECRET: 'programsecret'
      APP_MAIL_ENABLED: 'false'
      APP_DCC_ADMIN_PERMISSION: 'PROGRAMSERVICE.WRITE'
    ports:
      - 9082:8082
      - 50051:50051

  #####################################################
  # Argo Clinical
  #####################################################
  clinicalDb:
    image: 'bitnami/mongodb:4.0'
    ports:
      - '27027:27017'
    volumes:
      - 'clinical_mongodb_data:/bitnami'
    environment:
      MONGODB_USERNAME: admin
      MONGODB_PASSWORD: password
      MONGODB_DATABASE: clinical
      MONGODB_ROOT_PASSWORD: password123

  argo-clinical:
    image: '${CLINICAL_IMAGE}'
    depends_on:
      - clinicalDb
    environment:
      LOG_LEVEL: 'debug'
      PORT: '5050'
      CLINICAL_DB_URL: 'mongodb://localhost:27017/clinical'
      CLINICAL_DB_USERNAME: 'admin'
      CLINICAL_DB_PASSWORD: 'password'
      JWT_TOKEN_PUBLIC_KEY_URL: 'http://ego-api:8088/api/oauth/token/public_key'
      LECTERN_URL: 'http://lectern:3000/api'
      INITIAL_SCHEMA_VERSION: '4.1'
      SCHEMA_NAME: 'ICGC-ARGO Data Dictionary'
      VAULT_ENABLED: 'false'
    ports:
      - 5050:5050

  #####################################################
  # Lectern
  #####################################################
  lecternDb:
    image: 'bitnami/mongodb:4.0'
    command: mongod --port 27018
    ports:
      - '27018:27018'
    volumes:
      - 'lectern_mongodb_data:/bitnami'
    environment:
      MONGODB_USERNAME: admin
      MONGODB_PASSWORD: password
      MONGODB_DATABASE: lectern
      MONGODB_ROOT_PASSWORD: password123

  lectern:
    image: overture/lectern:edge
    depends_on:
      - lecternDb
    environment:
      PORT: 3000
      MONGO_USER: admin
      MONGO_PASS: password
      MONGO_URL: mongodb://localhost:27018/lectern
      AUTH_ENABLED: 'false'
      VAULT_ENABLED: 'false'
    ports:
      - 3000:3000

  #####################################################
  # ARGO Platform - GraphQL API Gateway
  #####################################################
  gateway:
    image: '${GATEWAY_IMAGE}'
    depends_on:
      - ego-api
      - program-service
    environment:
      EGO_APPLICATION_ID: platform
      EGO_APPLICATION_SECRET: platformsecret
      EGO_ROOT_GRPC: ego-api:50052
      PROGRAM_SERVICE_ROOT: program-service:50051
      CLINICAL_SERVICE_ROOT: http://argo-clinical:5050
    ports:
      - 9000:9000

  #####################################################
  # ARGO Platform - Platform UI
  #####################################################
  platform:
    image: '${PLATFORM_UI_IMAGE}'
    depends_on:
      - gateway
    environment:
      GATEWAY_API_ROOT: http://localhost:9000
      EGO_API_ROOT: http://localhost:8088
      EGO_CLIENT_ID: platform
      NODE_ENV: production
    ports:
      - 8080:8080
