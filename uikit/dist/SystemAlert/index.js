'use strict';

var _interopRequireDefault = require('@babel/runtime/helpers/interopRequireDefault');

Object.defineProperty(exports, '__esModule', {
  value: true,
});
exports['default'] = void 0;

var _core = require('@emotion/core');

var _react = _interopRequireDefault(require('react'));

var _Typography = _interopRequireDefault(require('../Typography'));

var _Icon = _interopRequireDefault(require('../Icon'));

var _ThemeProvider = require('../ThemeProvider');

var _Link = _interopRequireDefault(require('../Link'));

var __jsx = _react['default'].createElement;

function _EMOTION_STRINGIFIED_CSS_ERROR__() {
  return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).";
}

var ALERT_VARIANTS = {
  error: {
    color: 'error',
    icon: 'warning_transparent',
    fill: 'white',
  },
  warning: {
    color: 'warning_1',
    icon: 'warning_transparent',
    fill: 'primary_dark',
  },
  info: {
    color: 'secondary',
    icon: 'info_transparent',
    fill: 'white',
  },
};
/**
 * Find markdown style links in the alert message and render them as Link
 * @param message
 * @param linkColor
 * @returns
 */

var parseMessage = function parseMessage(message, linkColor) {
  // Split message into text and links
  var messageParts = message.split(/(\[.+\]\(.*\))/);
  return messageParts.map(function (part) {
    var matches = part.match(/\[(.*)\]\((.*)\)/); // matches will either be null (not a markdown link) or an array with the content like:
    // matches[0]: provided text
    // matches[1]: first group match (Link Display Text)
    // matches[2]: second group match (Link href)
    // matches... more stuff we dont care about

    if (matches) {
      return (0, _core.jsx)(
        _Link['default'],
        {
          href: matches[2],
          style: {
            color: linkColor,
          },
          target: '_blank',
        },
        matches[1],
      );
    } else {
      return part;
    }
  });
};

var _ref =
  process.env.NODE_ENV === 'production'
    ? {
        name: '13q6u93-Uikit-SystemAlert',
        styles: 'display:flex;;label:Uikit-SystemAlert;',
      }
    : {
        name: '13q6u93-Uikit-SystemAlert',
        styles: 'display:flex;;label:Uikit-SystemAlert;',
        map: '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE0RG9CIiwiZmlsZSI6ImluZGV4LmpzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9jb3JlJztcbmltcG9ydCBUeXBvZ3JhcGh5IGZyb20gJ3Vpa2l0L1R5cG9ncmFwaHknO1xuaW1wb3J0IEljb24gZnJvbSAndWlraXQvSWNvbic7XG5pbXBvcnQgeyB1c2VUaGVtZSB9IGZyb20gJ3Vpa2l0L1RoZW1lUHJvdmlkZXInO1xuaW1wb3J0IExpbmsgZnJvbSAndWlraXQvTGluayc7XG5jb25zdCBBTEVSVF9WQVJJQU5UUyA9IHtcbiAgICBlcnJvcjoge1xuICAgICAgICBjb2xvcjogJ2Vycm9yJyxcbiAgICAgICAgaWNvbjogJ3dhcm5pbmdfdHJhbnNwYXJlbnQnLFxuICAgICAgICBmaWxsOiAnd2hpdGUnLFxuICAgIH0sXG4gICAgd2FybmluZzoge1xuICAgICAgICBjb2xvcjogJ3dhcm5pbmdfMScsXG4gICAgICAgIGljb246ICd3YXJuaW5nX3RyYW5zcGFyZW50JyxcbiAgICAgICAgZmlsbDogJ3ByaW1hcnlfZGFyaycsXG4gICAgfSxcbiAgICBpbmZvOiB7XG4gICAgICAgIGNvbG9yOiAnc2Vjb25kYXJ5JyxcbiAgICAgICAgaWNvbjogJ2luZm9fdHJhbnNwYXJlbnQnLFxuICAgICAgICBmaWxsOiAnd2hpdGUnLFxuICAgIH0sXG59O1xuLyoqXG4gKiBGaW5kIG1hcmtkb3duIHN0eWxlIGxpbmtzIGluIHRoZSBhbGVydCBtZXNzYWdlIGFuZCByZW5kZXIgdGhlbSBhcyBMaW5rXG4gKiBAcGFyYW0gbWVzc2FnZVxuICogQHBhcmFtIGxpbmtDb2xvclxuICogQHJldHVybnNcbiAqL1xuY29uc3QgcGFyc2VNZXNzYWdlID0gKG1lc3NhZ2UsIGxpbmtDb2xvcikgPT4ge1xuICAgIC8vIFNwbGl0IG1lc3NhZ2UgaW50byB0ZXh0IGFuZCBsaW5rc1xuICAgIGNvbnN0IG1lc3NhZ2VQYXJ0cyA9IG1lc3NhZ2Uuc3BsaXQoLyhcXFsuK1xcXVxcKC4qXFwpKS8pO1xuICAgIHJldHVybiBtZXNzYWdlUGFydHMubWFwKChwYXJ0KSA9PiB7XG4gICAgICAgIGNvbnN0IG1hdGNoZXMgPSBwYXJ0Lm1hdGNoKC9cXFsoLiopXFxdXFwoKC4qKVxcKS8pO1xuICAgICAgICAvLyBtYXRjaGVzIHdpbGwgZWl0aGVyIGJlIG51bGwgKG5vdCBhIG1hcmtkb3duIGxpbmspIG9yIGFuIGFycmF5IHdpdGggdGhlIGNvbnRlbnQgbGlrZTpcbiAgICAgICAgLy8gbWF0Y2hlc1swXTogcHJvdmlkZWQgdGV4dFxuICAgICAgICAvLyBtYXRjaGVzWzFdOiBmaXJzdCBncm91cCBtYXRjaCAoTGluayBEaXNwbGF5IFRleHQpXG4gICAgICAgIC8vIG1hdGNoZXNbMl06IHNlY29uZCBncm91cCBtYXRjaCAoTGluayBocmVmKVxuICAgICAgICAvLyBtYXRjaGVzLi4uIG1vcmUgc3R1ZmYgd2UgZG9udCBjYXJlIGFib3V0XG4gICAgICAgIGlmIChtYXRjaGVzKSB7XG4gICAgICAgICAgICByZXR1cm4gKDxMaW5rIGhyZWY9e21hdGNoZXNbMl19IHN0eWxlPXt7IGNvbG9yOiBsaW5rQ29sb3IgfX0gdGFyZ2V0PVwiX2JsYW5rXCI+XG4gICAgICAgICAge21hdGNoZXNbMV19XG4gICAgICAgIDwvTGluaz4pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIHBhcnQ7XG4gICAgICAgIH1cbiAgICB9KTtcbn07XG5jb25zdCBTeXN0ZW1BbGVydCA9ICh7IGFsZXJ0LCBvbkNsb3NlIH0pID0+IHtcbiAgICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gICAgY29uc3QgaWNvbiA9IEFMRVJUX1ZBUklBTlRTW2FsZXJ0LmxldmVsXS5pY29uO1xuICAgIGNvbnN0IGZpbGwgPSBBTEVSVF9WQVJJQU5UU1thbGVydC5sZXZlbF0uZmlsbDtcbiAgICByZXR1cm4gKDxkaXYgY3NzPXtjc3MgYFxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke3RoZW1lLmNvbG9yc1tBTEVSVF9WQVJJQU5UU1thbGVydC5sZXZlbF0uY29sb3JdfTtcbiAgICAgICAgcGFkZGluZzogMTJweDtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgICAgIGB9PlxuICAgICAgPGRpdiBjc3M9e2NzcyBgXG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYH0+XG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgPEljb24gbmFtZT17aWNvbn0gZmlsbD17ZmlsbH0gd2lkdGg9XCIzMHB4XCIgaGVpZ2h0PVwiMzBweFwiIGNzcz17Y3NzIGBcbiAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAxNXB4O1xuICAgICAgICAgICAgYH0vPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdj5cbiAgICAgICAgICA8VHlwb2dyYXBoeSBjc3M9e2NzcyBgXG4gICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICAgICAgICAgICAgY29sb3I6ICR7dGhlbWUuY29sb3JzW0FMRVJUX1ZBUklBTlRTW2FsZXJ0LmxldmVsXS5maWxsXX07XG4gICAgICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgICAgIGB9PlxuICAgICAgICAgICAge2FsZXJ0LnRpdGxlfVxuICAgICAgICAgIDwvVHlwb2dyYXBoeT5cbiAgICAgICAgICB7YWxlcnQubWVzc2FnZSAmJiAoPFR5cG9ncmFwaHkgY3NzPXtjc3MgYFxuICAgICAgICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgICAgICAgICBjb2xvcjogJHt0aGVtZS5jb2xvcnNbQUxFUlRfVkFSSUFOVFNbYWxlcnQubGV2ZWxdLmZpbGxdfTtcbiAgICAgICAgICAgICAgICBmb250LXdlaWdodDogMzAwO1xuICAgICAgICAgICAgICBgfT5cbiAgICAgICAgICAgICAge3BhcnNlTWVzc2FnZShhbGVydC5tZXNzYWdlLCB0aGVtZS5jb2xvcnNbQUxFUlRfVkFSSUFOVFNbYWxlcnQubGV2ZWxdLmZpbGxdKX1cbiAgICAgICAgICAgIDwvVHlwb2dyYXBoeT4pfVxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuXG4gICAgICA8ZGl2PlxuICAgICAgICB7YWxlcnQuZGlzbWlzc2FibGUgPyAoPEljb24gbmFtZT1cInRpbWVzXCIgd2lkdGg9XCIxNXB4XCIgaGVpZ2h0PVwiMTVweFwiIGZpbGw9e3RoZW1lLmNvbG9yc1tBTEVSVF9WQVJJQU5UU1thbGVydC5sZXZlbF0uZmlsbF19IG9uQ2xpY2s9e29uQ2xvc2V9IHRpdGxlPVwiQ2xvc2VcIiBjc3M9e2NzcyBgXG4gICAgICAgICAgICAgIHBhZGRpbmctbGVmdDogNXB4O1xuICAgICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAxOHB4O1xuICAgICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgICAgICBgfS8+KSA6IG51bGx9XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj4pO1xufTtcbmV4cG9ydCBkZWZhdWx0IFN5c3RlbUFsZXJ0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanN4Lm1hcCJdfQ== */',
        toString: _EMOTION_STRINGIFIED_CSS_ERROR__,
      };

var _ref2 =
  process.env.NODE_ENV === 'production'
    ? {
        name: 'ucccdk-Uikit-SystemAlert',
        styles: 'margin-right:15px;;label:Uikit-SystemAlert;',
      }
    : {
        name: 'ucccdk-Uikit-SystemAlert',
        styles: 'margin-right:15px;;label:Uikit-SystemAlert;',
        map: '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFnRTRFIiwiZmlsZSI6ImluZGV4LmpzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9jb3JlJztcbmltcG9ydCBUeXBvZ3JhcGh5IGZyb20gJ3Vpa2l0L1R5cG9ncmFwaHknO1xuaW1wb3J0IEljb24gZnJvbSAndWlraXQvSWNvbic7XG5pbXBvcnQgeyB1c2VUaGVtZSB9IGZyb20gJ3Vpa2l0L1RoZW1lUHJvdmlkZXInO1xuaW1wb3J0IExpbmsgZnJvbSAndWlraXQvTGluayc7XG5jb25zdCBBTEVSVF9WQVJJQU5UUyA9IHtcbiAgICBlcnJvcjoge1xuICAgICAgICBjb2xvcjogJ2Vycm9yJyxcbiAgICAgICAgaWNvbjogJ3dhcm5pbmdfdHJhbnNwYXJlbnQnLFxuICAgICAgICBmaWxsOiAnd2hpdGUnLFxuICAgIH0sXG4gICAgd2FybmluZzoge1xuICAgICAgICBjb2xvcjogJ3dhcm5pbmdfMScsXG4gICAgICAgIGljb246ICd3YXJuaW5nX3RyYW5zcGFyZW50JyxcbiAgICAgICAgZmlsbDogJ3ByaW1hcnlfZGFyaycsXG4gICAgfSxcbiAgICBpbmZvOiB7XG4gICAgICAgIGNvbG9yOiAnc2Vjb25kYXJ5JyxcbiAgICAgICAgaWNvbjogJ2luZm9fdHJhbnNwYXJlbnQnLFxuICAgICAgICBmaWxsOiAnd2hpdGUnLFxuICAgIH0sXG59O1xuLyoqXG4gKiBGaW5kIG1hcmtkb3duIHN0eWxlIGxpbmtzIGluIHRoZSBhbGVydCBtZXNzYWdlIGFuZCByZW5kZXIgdGhlbSBhcyBMaW5rXG4gKiBAcGFyYW0gbWVzc2FnZVxuICogQHBhcmFtIGxpbmtDb2xvclxuICogQHJldHVybnNcbiAqL1xuY29uc3QgcGFyc2VNZXNzYWdlID0gKG1lc3NhZ2UsIGxpbmtDb2xvcikgPT4ge1xuICAgIC8vIFNwbGl0IG1lc3NhZ2UgaW50byB0ZXh0IGFuZCBsaW5rc1xuICAgIGNvbnN0IG1lc3NhZ2VQYXJ0cyA9IG1lc3NhZ2Uuc3BsaXQoLyhcXFsuK1xcXVxcKC4qXFwpKS8pO1xuICAgIHJldHVybiBtZXNzYWdlUGFydHMubWFwKChwYXJ0KSA9PiB7XG4gICAgICAgIGNvbnN0IG1hdGNoZXMgPSBwYXJ0Lm1hdGNoKC9cXFsoLiopXFxdXFwoKC4qKVxcKS8pO1xuICAgICAgICAvLyBtYXRjaGVzIHdpbGwgZWl0aGVyIGJlIG51bGwgKG5vdCBhIG1hcmtkb3duIGxpbmspIG9yIGFuIGFycmF5IHdpdGggdGhlIGNvbnRlbnQgbGlrZTpcbiAgICAgICAgLy8gbWF0Y2hlc1swXTogcHJvdmlkZWQgdGV4dFxuICAgICAgICAvLyBtYXRjaGVzWzFdOiBmaXJzdCBncm91cCBtYXRjaCAoTGluayBEaXNwbGF5IFRleHQpXG4gICAgICAgIC8vIG1hdGNoZXNbMl06IHNlY29uZCBncm91cCBtYXRjaCAoTGluayBocmVmKVxuICAgICAgICAvLyBtYXRjaGVzLi4uIG1vcmUgc3R1ZmYgd2UgZG9udCBjYXJlIGFib3V0XG4gICAgICAgIGlmIChtYXRjaGVzKSB7XG4gICAgICAgICAgICByZXR1cm4gKDxMaW5rIGhyZWY9e21hdGNoZXNbMl19IHN0eWxlPXt7IGNvbG9yOiBsaW5rQ29sb3IgfX0gdGFyZ2V0PVwiX2JsYW5rXCI+XG4gICAgICAgICAge21hdGNoZXNbMV19XG4gICAgICAgIDwvTGluaz4pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIHBhcnQ7XG4gICAgICAgIH1cbiAgICB9KTtcbn07XG5jb25zdCBTeXN0ZW1BbGVydCA9ICh7IGFsZXJ0LCBvbkNsb3NlIH0pID0+IHtcbiAgICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gICAgY29uc3QgaWNvbiA9IEFMRVJUX1ZBUklBTlRTW2FsZXJ0LmxldmVsXS5pY29uO1xuICAgIGNvbnN0IGZpbGwgPSBBTEVSVF9WQVJJQU5UU1thbGVydC5sZXZlbF0uZmlsbDtcbiAgICByZXR1cm4gKDxkaXYgY3NzPXtjc3MgYFxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke3RoZW1lLmNvbG9yc1tBTEVSVF9WQVJJQU5UU1thbGVydC5sZXZlbF0uY29sb3JdfTtcbiAgICAgICAgcGFkZGluZzogMTJweDtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgICAgIGB9PlxuICAgICAgPGRpdiBjc3M9e2NzcyBgXG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYH0+XG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgPEljb24gbmFtZT17aWNvbn0gZmlsbD17ZmlsbH0gd2lkdGg9XCIzMHB4XCIgaGVpZ2h0PVwiMzBweFwiIGNzcz17Y3NzIGBcbiAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAxNXB4O1xuICAgICAgICAgICAgYH0vPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdj5cbiAgICAgICAgICA8VHlwb2dyYXBoeSBjc3M9e2NzcyBgXG4gICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICAgICAgICAgICAgY29sb3I6ICR7dGhlbWUuY29sb3JzW0FMRVJUX1ZBUklBTlRTW2FsZXJ0LmxldmVsXS5maWxsXX07XG4gICAgICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgICAgIGB9PlxuICAgICAgICAgICAge2FsZXJ0LnRpdGxlfVxuICAgICAgICAgIDwvVHlwb2dyYXBoeT5cbiAgICAgICAgICB7YWxlcnQubWVzc2FnZSAmJiAoPFR5cG9ncmFwaHkgY3NzPXtjc3MgYFxuICAgICAgICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgICAgICAgICBjb2xvcjogJHt0aGVtZS5jb2xvcnNbQUxFUlRfVkFSSUFOVFNbYWxlcnQubGV2ZWxdLmZpbGxdfTtcbiAgICAgICAgICAgICAgICBmb250LXdlaWdodDogMzAwO1xuICAgICAgICAgICAgICBgfT5cbiAgICAgICAgICAgICAge3BhcnNlTWVzc2FnZShhbGVydC5tZXNzYWdlLCB0aGVtZS5jb2xvcnNbQUxFUlRfVkFSSUFOVFNbYWxlcnQubGV2ZWxdLmZpbGxdKX1cbiAgICAgICAgICAgIDwvVHlwb2dyYXBoeT4pfVxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuXG4gICAgICA8ZGl2PlxuICAgICAgICB7YWxlcnQuZGlzbWlzc2FibGUgPyAoPEljb24gbmFtZT1cInRpbWVzXCIgd2lkdGg9XCIxNXB4XCIgaGVpZ2h0PVwiMTVweFwiIGZpbGw9e3RoZW1lLmNvbG9yc1tBTEVSVF9WQVJJQU5UU1thbGVydC5sZXZlbF0uZmlsbF19IG9uQ2xpY2s9e29uQ2xvc2V9IHRpdGxlPVwiQ2xvc2VcIiBjc3M9e2NzcyBgXG4gICAgICAgICAgICAgIHBhZGRpbmctbGVmdDogNXB4O1xuICAgICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAxOHB4O1xuICAgICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgICAgICBgfS8+KSA6IG51bGx9XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj4pO1xufTtcbmV4cG9ydCBkZWZhdWx0IFN5c3RlbUFsZXJ0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanN4Lm1hcCJdfQ== */',
        toString: _EMOTION_STRINGIFIED_CSS_ERROR__,
      };

var _ref3 =
  process.env.NODE_ENV === 'production'
    ? {
        name: 'cl97hn-Uikit-SystemAlert',
        styles: 'padding-left:5px;padding-right:18px;cursor:pointer;;label:Uikit-SystemAlert;',
      }
    : {
        name: 'cl97hn-Uikit-SystemAlert',
        styles: 'padding-left:5px;padding-right:18px;cursor:pointer;;label:Uikit-SystemAlert;',
        map: '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF3RjJLIiwiZmlsZSI6ImluZGV4LmpzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9jb3JlJztcbmltcG9ydCBUeXBvZ3JhcGh5IGZyb20gJ3Vpa2l0L1R5cG9ncmFwaHknO1xuaW1wb3J0IEljb24gZnJvbSAndWlraXQvSWNvbic7XG5pbXBvcnQgeyB1c2VUaGVtZSB9IGZyb20gJ3Vpa2l0L1RoZW1lUHJvdmlkZXInO1xuaW1wb3J0IExpbmsgZnJvbSAndWlraXQvTGluayc7XG5jb25zdCBBTEVSVF9WQVJJQU5UUyA9IHtcbiAgICBlcnJvcjoge1xuICAgICAgICBjb2xvcjogJ2Vycm9yJyxcbiAgICAgICAgaWNvbjogJ3dhcm5pbmdfdHJhbnNwYXJlbnQnLFxuICAgICAgICBmaWxsOiAnd2hpdGUnLFxuICAgIH0sXG4gICAgd2FybmluZzoge1xuICAgICAgICBjb2xvcjogJ3dhcm5pbmdfMScsXG4gICAgICAgIGljb246ICd3YXJuaW5nX3RyYW5zcGFyZW50JyxcbiAgICAgICAgZmlsbDogJ3ByaW1hcnlfZGFyaycsXG4gICAgfSxcbiAgICBpbmZvOiB7XG4gICAgICAgIGNvbG9yOiAnc2Vjb25kYXJ5JyxcbiAgICAgICAgaWNvbjogJ2luZm9fdHJhbnNwYXJlbnQnLFxuICAgICAgICBmaWxsOiAnd2hpdGUnLFxuICAgIH0sXG59O1xuLyoqXG4gKiBGaW5kIG1hcmtkb3duIHN0eWxlIGxpbmtzIGluIHRoZSBhbGVydCBtZXNzYWdlIGFuZCByZW5kZXIgdGhlbSBhcyBMaW5rXG4gKiBAcGFyYW0gbWVzc2FnZVxuICogQHBhcmFtIGxpbmtDb2xvclxuICogQHJldHVybnNcbiAqL1xuY29uc3QgcGFyc2VNZXNzYWdlID0gKG1lc3NhZ2UsIGxpbmtDb2xvcikgPT4ge1xuICAgIC8vIFNwbGl0IG1lc3NhZ2UgaW50byB0ZXh0IGFuZCBsaW5rc1xuICAgIGNvbnN0IG1lc3NhZ2VQYXJ0cyA9IG1lc3NhZ2Uuc3BsaXQoLyhcXFsuK1xcXVxcKC4qXFwpKS8pO1xuICAgIHJldHVybiBtZXNzYWdlUGFydHMubWFwKChwYXJ0KSA9PiB7XG4gICAgICAgIGNvbnN0IG1hdGNoZXMgPSBwYXJ0Lm1hdGNoKC9cXFsoLiopXFxdXFwoKC4qKVxcKS8pO1xuICAgICAgICAvLyBtYXRjaGVzIHdpbGwgZWl0aGVyIGJlIG51bGwgKG5vdCBhIG1hcmtkb3duIGxpbmspIG9yIGFuIGFycmF5IHdpdGggdGhlIGNvbnRlbnQgbGlrZTpcbiAgICAgICAgLy8gbWF0Y2hlc1swXTogcHJvdmlkZWQgdGV4dFxuICAgICAgICAvLyBtYXRjaGVzWzFdOiBmaXJzdCBncm91cCBtYXRjaCAoTGluayBEaXNwbGF5IFRleHQpXG4gICAgICAgIC8vIG1hdGNoZXNbMl06IHNlY29uZCBncm91cCBtYXRjaCAoTGluayBocmVmKVxuICAgICAgICAvLyBtYXRjaGVzLi4uIG1vcmUgc3R1ZmYgd2UgZG9udCBjYXJlIGFib3V0XG4gICAgICAgIGlmIChtYXRjaGVzKSB7XG4gICAgICAgICAgICByZXR1cm4gKDxMaW5rIGhyZWY9e21hdGNoZXNbMl19IHN0eWxlPXt7IGNvbG9yOiBsaW5rQ29sb3IgfX0gdGFyZ2V0PVwiX2JsYW5rXCI+XG4gICAgICAgICAge21hdGNoZXNbMV19XG4gICAgICAgIDwvTGluaz4pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIHBhcnQ7XG4gICAgICAgIH1cbiAgICB9KTtcbn07XG5jb25zdCBTeXN0ZW1BbGVydCA9ICh7IGFsZXJ0LCBvbkNsb3NlIH0pID0+IHtcbiAgICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gICAgY29uc3QgaWNvbiA9IEFMRVJUX1ZBUklBTlRTW2FsZXJ0LmxldmVsXS5pY29uO1xuICAgIGNvbnN0IGZpbGwgPSBBTEVSVF9WQVJJQU5UU1thbGVydC5sZXZlbF0uZmlsbDtcbiAgICByZXR1cm4gKDxkaXYgY3NzPXtjc3MgYFxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke3RoZW1lLmNvbG9yc1tBTEVSVF9WQVJJQU5UU1thbGVydC5sZXZlbF0uY29sb3JdfTtcbiAgICAgICAgcGFkZGluZzogMTJweDtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgICAgIGB9PlxuICAgICAgPGRpdiBjc3M9e2NzcyBgXG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYH0+XG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgPEljb24gbmFtZT17aWNvbn0gZmlsbD17ZmlsbH0gd2lkdGg9XCIzMHB4XCIgaGVpZ2h0PVwiMzBweFwiIGNzcz17Y3NzIGBcbiAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAxNXB4O1xuICAgICAgICAgICAgYH0vPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdj5cbiAgICAgICAgICA8VHlwb2dyYXBoeSBjc3M9e2NzcyBgXG4gICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICAgICAgICAgICAgY29sb3I6ICR7dGhlbWUuY29sb3JzW0FMRVJUX1ZBUklBTlRTW2FsZXJ0LmxldmVsXS5maWxsXX07XG4gICAgICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgICAgIGB9PlxuICAgICAgICAgICAge2FsZXJ0LnRpdGxlfVxuICAgICAgICAgIDwvVHlwb2dyYXBoeT5cbiAgICAgICAgICB7YWxlcnQubWVzc2FnZSAmJiAoPFR5cG9ncmFwaHkgY3NzPXtjc3MgYFxuICAgICAgICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgICAgICAgICBjb2xvcjogJHt0aGVtZS5jb2xvcnNbQUxFUlRfVkFSSUFOVFNbYWxlcnQubGV2ZWxdLmZpbGxdfTtcbiAgICAgICAgICAgICAgICBmb250LXdlaWdodDogMzAwO1xuICAgICAgICAgICAgICBgfT5cbiAgICAgICAgICAgICAge3BhcnNlTWVzc2FnZShhbGVydC5tZXNzYWdlLCB0aGVtZS5jb2xvcnNbQUxFUlRfVkFSSUFOVFNbYWxlcnQubGV2ZWxdLmZpbGxdKX1cbiAgICAgICAgICAgIDwvVHlwb2dyYXBoeT4pfVxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuXG4gICAgICA8ZGl2PlxuICAgICAgICB7YWxlcnQuZGlzbWlzc2FibGUgPyAoPEljb24gbmFtZT1cInRpbWVzXCIgd2lkdGg9XCIxNXB4XCIgaGVpZ2h0PVwiMTVweFwiIGZpbGw9e3RoZW1lLmNvbG9yc1tBTEVSVF9WQVJJQU5UU1thbGVydC5sZXZlbF0uZmlsbF19IG9uQ2xpY2s9e29uQ2xvc2V9IHRpdGxlPVwiQ2xvc2VcIiBjc3M9e2NzcyBgXG4gICAgICAgICAgICAgIHBhZGRpbmctbGVmdDogNXB4O1xuICAgICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAxOHB4O1xuICAgICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgICAgICBgfS8+KSA6IG51bGx9XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj4pO1xufTtcbmV4cG9ydCBkZWZhdWx0IFN5c3RlbUFsZXJ0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanN4Lm1hcCJdfQ== */',
        toString: _EMOTION_STRINGIFIED_CSS_ERROR__,
      };

var SystemAlert = function SystemAlert(_ref4) {
  var alert = _ref4.alert,
    onClose = _ref4.onClose;
  var theme = (0, _ThemeProvider.useTheme)();
  var icon = ALERT_VARIANTS[alert.level].icon;
  var fill = ALERT_VARIANTS[alert.level].fill;
  return (0, _core.jsx)(
    'div',
    {
      css: /*#__PURE__*/ (0, _core.css)(
        'background-color:',
        theme.colors[ALERT_VARIANTS[alert.level].color],
        ';padding:12px;display:flex;justify-content:space-between;align-items:flex-start;;label:Uikit-SystemAlert;' +
          (process.env.NODE_ENV === 'production'
            ? ''
            : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFxRDBCIiwiZmlsZSI6ImluZGV4LmpzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9jb3JlJztcbmltcG9ydCBUeXBvZ3JhcGh5IGZyb20gJ3Vpa2l0L1R5cG9ncmFwaHknO1xuaW1wb3J0IEljb24gZnJvbSAndWlraXQvSWNvbic7XG5pbXBvcnQgeyB1c2VUaGVtZSB9IGZyb20gJ3Vpa2l0L1RoZW1lUHJvdmlkZXInO1xuaW1wb3J0IExpbmsgZnJvbSAndWlraXQvTGluayc7XG5jb25zdCBBTEVSVF9WQVJJQU5UUyA9IHtcbiAgICBlcnJvcjoge1xuICAgICAgICBjb2xvcjogJ2Vycm9yJyxcbiAgICAgICAgaWNvbjogJ3dhcm5pbmdfdHJhbnNwYXJlbnQnLFxuICAgICAgICBmaWxsOiAnd2hpdGUnLFxuICAgIH0sXG4gICAgd2FybmluZzoge1xuICAgICAgICBjb2xvcjogJ3dhcm5pbmdfMScsXG4gICAgICAgIGljb246ICd3YXJuaW5nX3RyYW5zcGFyZW50JyxcbiAgICAgICAgZmlsbDogJ3ByaW1hcnlfZGFyaycsXG4gICAgfSxcbiAgICBpbmZvOiB7XG4gICAgICAgIGNvbG9yOiAnc2Vjb25kYXJ5JyxcbiAgICAgICAgaWNvbjogJ2luZm9fdHJhbnNwYXJlbnQnLFxuICAgICAgICBmaWxsOiAnd2hpdGUnLFxuICAgIH0sXG59O1xuLyoqXG4gKiBGaW5kIG1hcmtkb3duIHN0eWxlIGxpbmtzIGluIHRoZSBhbGVydCBtZXNzYWdlIGFuZCByZW5kZXIgdGhlbSBhcyBMaW5rXG4gKiBAcGFyYW0gbWVzc2FnZVxuICogQHBhcmFtIGxpbmtDb2xvclxuICogQHJldHVybnNcbiAqL1xuY29uc3QgcGFyc2VNZXNzYWdlID0gKG1lc3NhZ2UsIGxpbmtDb2xvcikgPT4ge1xuICAgIC8vIFNwbGl0IG1lc3NhZ2UgaW50byB0ZXh0IGFuZCBsaW5rc1xuICAgIGNvbnN0IG1lc3NhZ2VQYXJ0cyA9IG1lc3NhZ2Uuc3BsaXQoLyhcXFsuK1xcXVxcKC4qXFwpKS8pO1xuICAgIHJldHVybiBtZXNzYWdlUGFydHMubWFwKChwYXJ0KSA9PiB7XG4gICAgICAgIGNvbnN0IG1hdGNoZXMgPSBwYXJ0Lm1hdGNoKC9cXFsoLiopXFxdXFwoKC4qKVxcKS8pO1xuICAgICAgICAvLyBtYXRjaGVzIHdpbGwgZWl0aGVyIGJlIG51bGwgKG5vdCBhIG1hcmtkb3duIGxpbmspIG9yIGFuIGFycmF5IHdpdGggdGhlIGNvbnRlbnQgbGlrZTpcbiAgICAgICAgLy8gbWF0Y2hlc1swXTogcHJvdmlkZWQgdGV4dFxuICAgICAgICAvLyBtYXRjaGVzWzFdOiBmaXJzdCBncm91cCBtYXRjaCAoTGluayBEaXNwbGF5IFRleHQpXG4gICAgICAgIC8vIG1hdGNoZXNbMl06IHNlY29uZCBncm91cCBtYXRjaCAoTGluayBocmVmKVxuICAgICAgICAvLyBtYXRjaGVzLi4uIG1vcmUgc3R1ZmYgd2UgZG9udCBjYXJlIGFib3V0XG4gICAgICAgIGlmIChtYXRjaGVzKSB7XG4gICAgICAgICAgICByZXR1cm4gKDxMaW5rIGhyZWY9e21hdGNoZXNbMl19IHN0eWxlPXt7IGNvbG9yOiBsaW5rQ29sb3IgfX0gdGFyZ2V0PVwiX2JsYW5rXCI+XG4gICAgICAgICAge21hdGNoZXNbMV19XG4gICAgICAgIDwvTGluaz4pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIHBhcnQ7XG4gICAgICAgIH1cbiAgICB9KTtcbn07XG5jb25zdCBTeXN0ZW1BbGVydCA9ICh7IGFsZXJ0LCBvbkNsb3NlIH0pID0+IHtcbiAgICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gICAgY29uc3QgaWNvbiA9IEFMRVJUX1ZBUklBTlRTW2FsZXJ0LmxldmVsXS5pY29uO1xuICAgIGNvbnN0IGZpbGwgPSBBTEVSVF9WQVJJQU5UU1thbGVydC5sZXZlbF0uZmlsbDtcbiAgICByZXR1cm4gKDxkaXYgY3NzPXtjc3MgYFxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke3RoZW1lLmNvbG9yc1tBTEVSVF9WQVJJQU5UU1thbGVydC5sZXZlbF0uY29sb3JdfTtcbiAgICAgICAgcGFkZGluZzogMTJweDtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgICAgIGB9PlxuICAgICAgPGRpdiBjc3M9e2NzcyBgXG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYH0+XG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgPEljb24gbmFtZT17aWNvbn0gZmlsbD17ZmlsbH0gd2lkdGg9XCIzMHB4XCIgaGVpZ2h0PVwiMzBweFwiIGNzcz17Y3NzIGBcbiAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAxNXB4O1xuICAgICAgICAgICAgYH0vPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdj5cbiAgICAgICAgICA8VHlwb2dyYXBoeSBjc3M9e2NzcyBgXG4gICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICAgICAgICAgICAgY29sb3I6ICR7dGhlbWUuY29sb3JzW0FMRVJUX1ZBUklBTlRTW2FsZXJ0LmxldmVsXS5maWxsXX07XG4gICAgICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgICAgIGB9PlxuICAgICAgICAgICAge2FsZXJ0LnRpdGxlfVxuICAgICAgICAgIDwvVHlwb2dyYXBoeT5cbiAgICAgICAgICB7YWxlcnQubWVzc2FnZSAmJiAoPFR5cG9ncmFwaHkgY3NzPXtjc3MgYFxuICAgICAgICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgICAgICAgICBjb2xvcjogJHt0aGVtZS5jb2xvcnNbQUxFUlRfVkFSSUFOVFNbYWxlcnQubGV2ZWxdLmZpbGxdfTtcbiAgICAgICAgICAgICAgICBmb250LXdlaWdodDogMzAwO1xuICAgICAgICAgICAgICBgfT5cbiAgICAgICAgICAgICAge3BhcnNlTWVzc2FnZShhbGVydC5tZXNzYWdlLCB0aGVtZS5jb2xvcnNbQUxFUlRfVkFSSUFOVFNbYWxlcnQubGV2ZWxdLmZpbGxdKX1cbiAgICAgICAgICAgIDwvVHlwb2dyYXBoeT4pfVxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuXG4gICAgICA8ZGl2PlxuICAgICAgICB7YWxlcnQuZGlzbWlzc2FibGUgPyAoPEljb24gbmFtZT1cInRpbWVzXCIgd2lkdGg9XCIxNXB4XCIgaGVpZ2h0PVwiMTVweFwiIGZpbGw9e3RoZW1lLmNvbG9yc1tBTEVSVF9WQVJJQU5UU1thbGVydC5sZXZlbF0uZmlsbF19IG9uQ2xpY2s9e29uQ2xvc2V9IHRpdGxlPVwiQ2xvc2VcIiBjc3M9e2NzcyBgXG4gICAgICAgICAgICAgIHBhZGRpbmctbGVmdDogNXB4O1xuICAgICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAxOHB4O1xuICAgICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgICAgICBgfS8+KSA6IG51bGx9XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj4pO1xufTtcbmV4cG9ydCBkZWZhdWx0IFN5c3RlbUFsZXJ0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanN4Lm1hcCJdfQ== */'),
      ),
    },
    (0, _core.jsx)(
      'div',
      {
        css: _ref,
      },
      (0, _core.jsx)(
        'div',
        null,
        (0, _core.jsx)(_Icon['default'], {
          name: icon,
          fill: fill,
          width: '30px',
          height: '30px',
          css: _ref2,
        }),
      ),
      (0, _core.jsx)(
        'div',
        null,
        (0, _core.jsx)(
          _Typography['default'],
          {
            css: /*#__PURE__*/ (0, _core.css)(
              'font-size:16px;font-weight:500;color:',
              theme.colors[ALERT_VARIANTS[alert.level].fill],
              ';margin:0;;label:Uikit-SystemAlert;' +
                (process.env.NODE_ENV === 'production'
                  ? ''
                  : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFxRStCIiwiZmlsZSI6ImluZGV4LmpzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9jb3JlJztcbmltcG9ydCBUeXBvZ3JhcGh5IGZyb20gJ3Vpa2l0L1R5cG9ncmFwaHknO1xuaW1wb3J0IEljb24gZnJvbSAndWlraXQvSWNvbic7XG5pbXBvcnQgeyB1c2VUaGVtZSB9IGZyb20gJ3Vpa2l0L1RoZW1lUHJvdmlkZXInO1xuaW1wb3J0IExpbmsgZnJvbSAndWlraXQvTGluayc7XG5jb25zdCBBTEVSVF9WQVJJQU5UUyA9IHtcbiAgICBlcnJvcjoge1xuICAgICAgICBjb2xvcjogJ2Vycm9yJyxcbiAgICAgICAgaWNvbjogJ3dhcm5pbmdfdHJhbnNwYXJlbnQnLFxuICAgICAgICBmaWxsOiAnd2hpdGUnLFxuICAgIH0sXG4gICAgd2FybmluZzoge1xuICAgICAgICBjb2xvcjogJ3dhcm5pbmdfMScsXG4gICAgICAgIGljb246ICd3YXJuaW5nX3RyYW5zcGFyZW50JyxcbiAgICAgICAgZmlsbDogJ3ByaW1hcnlfZGFyaycsXG4gICAgfSxcbiAgICBpbmZvOiB7XG4gICAgICAgIGNvbG9yOiAnc2Vjb25kYXJ5JyxcbiAgICAgICAgaWNvbjogJ2luZm9fdHJhbnNwYXJlbnQnLFxuICAgICAgICBmaWxsOiAnd2hpdGUnLFxuICAgIH0sXG59O1xuLyoqXG4gKiBGaW5kIG1hcmtkb3duIHN0eWxlIGxpbmtzIGluIHRoZSBhbGVydCBtZXNzYWdlIGFuZCByZW5kZXIgdGhlbSBhcyBMaW5rXG4gKiBAcGFyYW0gbWVzc2FnZVxuICogQHBhcmFtIGxpbmtDb2xvclxuICogQHJldHVybnNcbiAqL1xuY29uc3QgcGFyc2VNZXNzYWdlID0gKG1lc3NhZ2UsIGxpbmtDb2xvcikgPT4ge1xuICAgIC8vIFNwbGl0IG1lc3NhZ2UgaW50byB0ZXh0IGFuZCBsaW5rc1xuICAgIGNvbnN0IG1lc3NhZ2VQYXJ0cyA9IG1lc3NhZ2Uuc3BsaXQoLyhcXFsuK1xcXVxcKC4qXFwpKS8pO1xuICAgIHJldHVybiBtZXNzYWdlUGFydHMubWFwKChwYXJ0KSA9PiB7XG4gICAgICAgIGNvbnN0IG1hdGNoZXMgPSBwYXJ0Lm1hdGNoKC9cXFsoLiopXFxdXFwoKC4qKVxcKS8pO1xuICAgICAgICAvLyBtYXRjaGVzIHdpbGwgZWl0aGVyIGJlIG51bGwgKG5vdCBhIG1hcmtkb3duIGxpbmspIG9yIGFuIGFycmF5IHdpdGggdGhlIGNvbnRlbnQgbGlrZTpcbiAgICAgICAgLy8gbWF0Y2hlc1swXTogcHJvdmlkZWQgdGV4dFxuICAgICAgICAvLyBtYXRjaGVzWzFdOiBmaXJzdCBncm91cCBtYXRjaCAoTGluayBEaXNwbGF5IFRleHQpXG4gICAgICAgIC8vIG1hdGNoZXNbMl06IHNlY29uZCBncm91cCBtYXRjaCAoTGluayBocmVmKVxuICAgICAgICAvLyBtYXRjaGVzLi4uIG1vcmUgc3R1ZmYgd2UgZG9udCBjYXJlIGFib3V0XG4gICAgICAgIGlmIChtYXRjaGVzKSB7XG4gICAgICAgICAgICByZXR1cm4gKDxMaW5rIGhyZWY9e21hdGNoZXNbMl19IHN0eWxlPXt7IGNvbG9yOiBsaW5rQ29sb3IgfX0gdGFyZ2V0PVwiX2JsYW5rXCI+XG4gICAgICAgICAge21hdGNoZXNbMV19XG4gICAgICAgIDwvTGluaz4pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIHBhcnQ7XG4gICAgICAgIH1cbiAgICB9KTtcbn07XG5jb25zdCBTeXN0ZW1BbGVydCA9ICh7IGFsZXJ0LCBvbkNsb3NlIH0pID0+IHtcbiAgICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gICAgY29uc3QgaWNvbiA9IEFMRVJUX1ZBUklBTlRTW2FsZXJ0LmxldmVsXS5pY29uO1xuICAgIGNvbnN0IGZpbGwgPSBBTEVSVF9WQVJJQU5UU1thbGVydC5sZXZlbF0uZmlsbDtcbiAgICByZXR1cm4gKDxkaXYgY3NzPXtjc3MgYFxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke3RoZW1lLmNvbG9yc1tBTEVSVF9WQVJJQU5UU1thbGVydC5sZXZlbF0uY29sb3JdfTtcbiAgICAgICAgcGFkZGluZzogMTJweDtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgICAgIGB9PlxuICAgICAgPGRpdiBjc3M9e2NzcyBgXG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYH0+XG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgPEljb24gbmFtZT17aWNvbn0gZmlsbD17ZmlsbH0gd2lkdGg9XCIzMHB4XCIgaGVpZ2h0PVwiMzBweFwiIGNzcz17Y3NzIGBcbiAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAxNXB4O1xuICAgICAgICAgICAgYH0vPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdj5cbiAgICAgICAgICA8VHlwb2dyYXBoeSBjc3M9e2NzcyBgXG4gICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICAgICAgICAgICAgY29sb3I6ICR7dGhlbWUuY29sb3JzW0FMRVJUX1ZBUklBTlRTW2FsZXJ0LmxldmVsXS5maWxsXX07XG4gICAgICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgICAgIGB9PlxuICAgICAgICAgICAge2FsZXJ0LnRpdGxlfVxuICAgICAgICAgIDwvVHlwb2dyYXBoeT5cbiAgICAgICAgICB7YWxlcnQubWVzc2FnZSAmJiAoPFR5cG9ncmFwaHkgY3NzPXtjc3MgYFxuICAgICAgICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgICAgICAgICBjb2xvcjogJHt0aGVtZS5jb2xvcnNbQUxFUlRfVkFSSUFOVFNbYWxlcnQubGV2ZWxdLmZpbGxdfTtcbiAgICAgICAgICAgICAgICBmb250LXdlaWdodDogMzAwO1xuICAgICAgICAgICAgICBgfT5cbiAgICAgICAgICAgICAge3BhcnNlTWVzc2FnZShhbGVydC5tZXNzYWdlLCB0aGVtZS5jb2xvcnNbQUxFUlRfVkFSSUFOVFNbYWxlcnQubGV2ZWxdLmZpbGxdKX1cbiAgICAgICAgICAgIDwvVHlwb2dyYXBoeT4pfVxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuXG4gICAgICA8ZGl2PlxuICAgICAgICB7YWxlcnQuZGlzbWlzc2FibGUgPyAoPEljb24gbmFtZT1cInRpbWVzXCIgd2lkdGg9XCIxNXB4XCIgaGVpZ2h0PVwiMTVweFwiIGZpbGw9e3RoZW1lLmNvbG9yc1tBTEVSVF9WQVJJQU5UU1thbGVydC5sZXZlbF0uZmlsbF19IG9uQ2xpY2s9e29uQ2xvc2V9IHRpdGxlPVwiQ2xvc2VcIiBjc3M9e2NzcyBgXG4gICAgICAgICAgICAgIHBhZGRpbmctbGVmdDogNXB4O1xuICAgICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAxOHB4O1xuICAgICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgICAgICBgfS8+KSA6IG51bGx9XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj4pO1xufTtcbmV4cG9ydCBkZWZhdWx0IFN5c3RlbUFsZXJ0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanN4Lm1hcCJdfQ== */'),
            ),
          },
          alert.title,
        ),
        alert.message &&
          (0, _core.jsx)(
            _Typography['default'],
            {
              css: /*#__PURE__*/ (0, _core.css)(
                'margin:0;color:',
                theme.colors[ALERT_VARIANTS[alert.level].fill],
                ';font-weight:300;;label:Uikit-SystemAlert;' +
                  (process.env.NODE_ENV === 'production'
                    ? ''
                    : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE2RWtEIiwiZmlsZSI6ImluZGV4LmpzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9jb3JlJztcbmltcG9ydCBUeXBvZ3JhcGh5IGZyb20gJ3Vpa2l0L1R5cG9ncmFwaHknO1xuaW1wb3J0IEljb24gZnJvbSAndWlraXQvSWNvbic7XG5pbXBvcnQgeyB1c2VUaGVtZSB9IGZyb20gJ3Vpa2l0L1RoZW1lUHJvdmlkZXInO1xuaW1wb3J0IExpbmsgZnJvbSAndWlraXQvTGluayc7XG5jb25zdCBBTEVSVF9WQVJJQU5UUyA9IHtcbiAgICBlcnJvcjoge1xuICAgICAgICBjb2xvcjogJ2Vycm9yJyxcbiAgICAgICAgaWNvbjogJ3dhcm5pbmdfdHJhbnNwYXJlbnQnLFxuICAgICAgICBmaWxsOiAnd2hpdGUnLFxuICAgIH0sXG4gICAgd2FybmluZzoge1xuICAgICAgICBjb2xvcjogJ3dhcm5pbmdfMScsXG4gICAgICAgIGljb246ICd3YXJuaW5nX3RyYW5zcGFyZW50JyxcbiAgICAgICAgZmlsbDogJ3ByaW1hcnlfZGFyaycsXG4gICAgfSxcbiAgICBpbmZvOiB7XG4gICAgICAgIGNvbG9yOiAnc2Vjb25kYXJ5JyxcbiAgICAgICAgaWNvbjogJ2luZm9fdHJhbnNwYXJlbnQnLFxuICAgICAgICBmaWxsOiAnd2hpdGUnLFxuICAgIH0sXG59O1xuLyoqXG4gKiBGaW5kIG1hcmtkb3duIHN0eWxlIGxpbmtzIGluIHRoZSBhbGVydCBtZXNzYWdlIGFuZCByZW5kZXIgdGhlbSBhcyBMaW5rXG4gKiBAcGFyYW0gbWVzc2FnZVxuICogQHBhcmFtIGxpbmtDb2xvclxuICogQHJldHVybnNcbiAqL1xuY29uc3QgcGFyc2VNZXNzYWdlID0gKG1lc3NhZ2UsIGxpbmtDb2xvcikgPT4ge1xuICAgIC8vIFNwbGl0IG1lc3NhZ2UgaW50byB0ZXh0IGFuZCBsaW5rc1xuICAgIGNvbnN0IG1lc3NhZ2VQYXJ0cyA9IG1lc3NhZ2Uuc3BsaXQoLyhcXFsuK1xcXVxcKC4qXFwpKS8pO1xuICAgIHJldHVybiBtZXNzYWdlUGFydHMubWFwKChwYXJ0KSA9PiB7XG4gICAgICAgIGNvbnN0IG1hdGNoZXMgPSBwYXJ0Lm1hdGNoKC9cXFsoLiopXFxdXFwoKC4qKVxcKS8pO1xuICAgICAgICAvLyBtYXRjaGVzIHdpbGwgZWl0aGVyIGJlIG51bGwgKG5vdCBhIG1hcmtkb3duIGxpbmspIG9yIGFuIGFycmF5IHdpdGggdGhlIGNvbnRlbnQgbGlrZTpcbiAgICAgICAgLy8gbWF0Y2hlc1swXTogcHJvdmlkZWQgdGV4dFxuICAgICAgICAvLyBtYXRjaGVzWzFdOiBmaXJzdCBncm91cCBtYXRjaCAoTGluayBEaXNwbGF5IFRleHQpXG4gICAgICAgIC8vIG1hdGNoZXNbMl06IHNlY29uZCBncm91cCBtYXRjaCAoTGluayBocmVmKVxuICAgICAgICAvLyBtYXRjaGVzLi4uIG1vcmUgc3R1ZmYgd2UgZG9udCBjYXJlIGFib3V0XG4gICAgICAgIGlmIChtYXRjaGVzKSB7XG4gICAgICAgICAgICByZXR1cm4gKDxMaW5rIGhyZWY9e21hdGNoZXNbMl19IHN0eWxlPXt7IGNvbG9yOiBsaW5rQ29sb3IgfX0gdGFyZ2V0PVwiX2JsYW5rXCI+XG4gICAgICAgICAge21hdGNoZXNbMV19XG4gICAgICAgIDwvTGluaz4pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIHBhcnQ7XG4gICAgICAgIH1cbiAgICB9KTtcbn07XG5jb25zdCBTeXN0ZW1BbGVydCA9ICh7IGFsZXJ0LCBvbkNsb3NlIH0pID0+IHtcbiAgICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gICAgY29uc3QgaWNvbiA9IEFMRVJUX1ZBUklBTlRTW2FsZXJ0LmxldmVsXS5pY29uO1xuICAgIGNvbnN0IGZpbGwgPSBBTEVSVF9WQVJJQU5UU1thbGVydC5sZXZlbF0uZmlsbDtcbiAgICByZXR1cm4gKDxkaXYgY3NzPXtjc3MgYFxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke3RoZW1lLmNvbG9yc1tBTEVSVF9WQVJJQU5UU1thbGVydC5sZXZlbF0uY29sb3JdfTtcbiAgICAgICAgcGFkZGluZzogMTJweDtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgICAgIGB9PlxuICAgICAgPGRpdiBjc3M9e2NzcyBgXG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYH0+XG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgPEljb24gbmFtZT17aWNvbn0gZmlsbD17ZmlsbH0gd2lkdGg9XCIzMHB4XCIgaGVpZ2h0PVwiMzBweFwiIGNzcz17Y3NzIGBcbiAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAxNXB4O1xuICAgICAgICAgICAgYH0vPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdj5cbiAgICAgICAgICA8VHlwb2dyYXBoeSBjc3M9e2NzcyBgXG4gICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICAgICAgICAgICAgY29sb3I6ICR7dGhlbWUuY29sb3JzW0FMRVJUX1ZBUklBTlRTW2FsZXJ0LmxldmVsXS5maWxsXX07XG4gICAgICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgICAgIGB9PlxuICAgICAgICAgICAge2FsZXJ0LnRpdGxlfVxuICAgICAgICAgIDwvVHlwb2dyYXBoeT5cbiAgICAgICAgICB7YWxlcnQubWVzc2FnZSAmJiAoPFR5cG9ncmFwaHkgY3NzPXtjc3MgYFxuICAgICAgICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgICAgICAgICBjb2xvcjogJHt0aGVtZS5jb2xvcnNbQUxFUlRfVkFSSUFOVFNbYWxlcnQubGV2ZWxdLmZpbGxdfTtcbiAgICAgICAgICAgICAgICBmb250LXdlaWdodDogMzAwO1xuICAgICAgICAgICAgICBgfT5cbiAgICAgICAgICAgICAge3BhcnNlTWVzc2FnZShhbGVydC5tZXNzYWdlLCB0aGVtZS5jb2xvcnNbQUxFUlRfVkFSSUFOVFNbYWxlcnQubGV2ZWxdLmZpbGxdKX1cbiAgICAgICAgICAgIDwvVHlwb2dyYXBoeT4pfVxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuXG4gICAgICA8ZGl2PlxuICAgICAgICB7YWxlcnQuZGlzbWlzc2FibGUgPyAoPEljb24gbmFtZT1cInRpbWVzXCIgd2lkdGg9XCIxNXB4XCIgaGVpZ2h0PVwiMTVweFwiIGZpbGw9e3RoZW1lLmNvbG9yc1tBTEVSVF9WQVJJQU5UU1thbGVydC5sZXZlbF0uZmlsbF19IG9uQ2xpY2s9e29uQ2xvc2V9IHRpdGxlPVwiQ2xvc2VcIiBjc3M9e2NzcyBgXG4gICAgICAgICAgICAgIHBhZGRpbmctbGVmdDogNXB4O1xuICAgICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAxOHB4O1xuICAgICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgICAgICBgfS8+KSA6IG51bGx9XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj4pO1xufTtcbmV4cG9ydCBkZWZhdWx0IFN5c3RlbUFsZXJ0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanN4Lm1hcCJdfQ== */'),
              ),
            },
            parseMessage(alert.message, theme.colors[ALERT_VARIANTS[alert.level].fill]),
          ),
      ),
    ),
    (0, _core.jsx)(
      'div',
      null,
      alert.dismissable
        ? (0, _core.jsx)(_Icon['default'], {
            name: 'times',
            width: '15px',
            height: '15px',
            fill: theme.colors[ALERT_VARIANTS[alert.level].fill],
            onClick: onClose,
            title: 'Close',
            css: _ref3,
          })
        : null,
    ),
  );
};

var _default = SystemAlert;
exports['default'] = _default;
