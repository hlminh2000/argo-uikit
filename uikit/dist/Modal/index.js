'use strict';

var _interopRequireDefault = require('@babel/runtime/helpers/interopRequireDefault');

Object.defineProperty(exports, '__esModule', {
  value: true,
});
exports['default'] = exports.ModalContainer = void 0;

var _core = require('@emotion/core');

var _styledBase = _interopRequireDefault(require('@emotion/styled-base'));

var _react = _interopRequireDefault(require('react'));

var _color = _interopRequireDefault(require('color'));

var _Typography = _interopRequireDefault(require('../Typography'));

var _Button = _interopRequireDefault(require('../Button'));

var _Icon = _interopRequireDefault(require('../Icon'));

var _FocusWrapper = _interopRequireDefault(require('../FocusWrapper'));

var _constants = require('../Button/constants');

var __jsx = _react['default'].createElement;

function _EMOTION_STRINGIFIED_CSS_ERROR__() {
  return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).";
}

var _ref =
  process.env.NODE_ENV === 'production'
    ? {
        name: '1t8hy4h-Uikit-DefaultFooter',
        styles: 'margin-left:10px;;label:Uikit-DefaultFooter;',
      }
    : {
        name: '1t8hy4h-Uikit-DefaultFooter',
        styles: 'margin-left:10px;;label:Uikit-DefaultFooter;',
        map: '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUErQm9EIiwiZmlsZSI6ImluZGV4LmpzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgKGMpIDIwMjAgVGhlIE9udGFyaW8gSW5zdGl0dXRlIGZvciBDYW5jZXIgUmVzZWFyY2guIEFsbCByaWdodHMgcmVzZXJ2ZWRcbiAqXG4gKiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2ZcbiAqIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgdjMuMC4gWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGVcbiAqIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS5cbiAqICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4gKlxuICogVEhJUyBTT0ZUV0FSRSBJUyBQUk9WSURFRCBCWSBUSEUgQ09QWVJJR0hUIEhPTERFUlMgQU5EIENPTlRSSUJVVE9SUyBcIkFTIElTXCIgQU5EIEFOWVxuICogRVhQUkVTUyBPUiBJTVBMSUVEIFdBUlJBTlRJRVMsIElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEIFRPLCBUSEUgSU1QTElFRCBXQVJSQU5USUVTXG4gKiBPRiBNRVJDSEFOVEFCSUxJVFkgQU5EIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFSRSBESVNDTEFJTUVELiBJTiBOTyBFVkVOVFxuICogU0hBTEwgVEhFIENPUFlSSUdIVCBIT0xERVIgT1IgQ09OVFJJQlVUT1JTIEJFIExJQUJMRSBGT1IgQU5ZIERJUkVDVCwgSU5ESVJFQ1QsXG4gKiBJTkNJREVOVEFMLCBTUEVDSUFMLCBFWEVNUExBUlksIE9SIENPTlNFUVVFTlRJQUwgREFNQUdFUyAoSU5DTFVESU5HLCBCVVQgTk9UIExJTUlURURcbiAqIFRPLCBQUk9DVVJFTUVOVCBPRiBTVUJTVElUVVRFIEdPT0RTIE9SIFNFUlZJQ0VTOyBMT1NTIE9GIFVTRSwgREFUQSwgT1IgUFJPRklUUztcbiAqIE9SIEJVU0lORVNTIElOVEVSUlVQVElPTikgSE9XRVZFUiBDQVVTRUQgQU5EIE9OIEFOWSBUSEVPUlkgT0YgTElBQklMSVRZLCBXSEVUSEVSXG4gKiBJTiBDT05UUkFDVCwgU1RSSUNUIExJQUJJTElUWSwgT1IgVE9SVCAoSU5DTFVESU5HIE5FR0xJR0VOQ0UgT1IgT1RIRVJXSVNFKSBBUklTSU5HIElOXG4gKiBBTlkgV0FZIE9VVCBPRiBUSEUgVVNFIE9GIFRISVMgU09GVFdBUkUsIEVWRU4gSUYgQURWSVNFRCBPRiBUSEUgUE9TU0lCSUxJVFkgT0YgU1VDSCBEQU1BR0UuXG4gKi9cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgQ29sb3IgZnJvbSAnY29sb3InO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgVHlwb2dyYXBoeSBmcm9tICcuLi9UeXBvZ3JhcGh5JztcbmltcG9ydCBCdXR0b24gZnJvbSAnLi4vQnV0dG9uJztcbmltcG9ydCBJY29uIGZyb20gJy4uL0ljb24nO1xuaW1wb3J0IEZvY3VzV3JhcHBlciBmcm9tICcuLi9Gb2N1c1dyYXBwZXInO1xuaW1wb3J0IHsgQlVUVE9OX1NJWkVTLCBCVVRUT05fVkFSSUFOVFMgfSBmcm9tICd1aWtpdC9CdXR0b24vY29uc3RhbnRzJztcbmNvbnN0IERlZmF1bHRGb290ZXIgPSAoeyBhY3Rpb25WaXNpYmxlLCBhY3Rpb25CdXR0b25JZCwgYWN0aW9uRGlzYWJsZWQsIG9uQWN0aW9uQ2xpY2ssIGFjdGlvbkJ1dHRvblRleHQsIGJ1dHRvblNpemUsIG9uQ2FuY2VsQ2xpY2ssIGNhbmNlbFRleHQsIH0pID0+ICg8QnV0dG9uQ29udGFpbmVyPlxuICAgIHthY3Rpb25WaXNpYmxlICYmICg8QnV0dG9uIGlkPXthY3Rpb25CdXR0b25JZH0gc2l6ZT17YnV0dG9uU2l6ZSB8fCBCVVRUT05fU0laRVMuTUR9IGRpc2FibGVkPXthY3Rpb25EaXNhYmxlZH0gb25DbGljaz17b25BY3Rpb25DbGlja30+XG4gICAgICAgIHthY3Rpb25CdXR0b25UZXh0fVxuICAgICAgPC9CdXR0b24+KX1cbiAgICA8QnV0dG9uIHZhcmlhbnQ9e0JVVFRPTl9WQVJJQU5UUy5URVhUfSBjc3M9e2NzcyBgXG4gICAgICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xuICAgICAgYH0gc2l6ZT17YnV0dG9uU2l6ZSB8fCBCVVRUT05fU0laRVMuTUR9IG9uQ2xpY2s9e29uQ2FuY2VsQ2xpY2t9PlxuICAgICAge2NhbmNlbFRleHR9XG4gICAgPC9CdXR0b24+XG4gIDwvQnV0dG9uQ29udGFpbmVyPik7XG5leHBvcnQgY29uc3QgTW9kYWxDb250YWluZXIgPSBzdHlsZWQoJ2RpdicpIGBcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICBib3gtc2hhZG93OiAwIDhweCAyMXB4IDAgcmdiYSgwLCAwLCAwLCAwLjEpLCAwIDZweCAxMnB4IDAgcmdiYSgwLCAwLCAwLCAwLjEpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyh7IHRoZW1lIH0pID0+IHRoZW1lLmNvbG9ycy53aGl0ZX07XG4gIG1heC13aWR0aDogNzc2cHg7XG4gIHdpZHRoOiBhdXRvO1xuICBwYWRkaW5nOiAyNHB4O1xuICBwYWRkaW5nLWJvdHRvbTogMHB4O1xuICBtYXgtaGVpZ2h0OiA5NXZoO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogc3BhY2UtYmV0d2VlbjtcbiAgbWFyZ2luOiAwIDFyZW07XG5gO1xuY29uc3QgTW9kYWxUaXRsZSA9IHN0eWxlZCgnZGl2JykgYFxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuYDtcbmNvbnN0IE1vZGFsQm9keSA9IHN0eWxlZCgnZGl2JykgYFxuICBtYXJnaW4tdG9wOiAyNHB4O1xuICBtYXJnaW4tYm90dG9tOiAyNHB4O1xuYDtcbmNvbnN0IE1vZGFsRm9vdGVyID0gc3R5bGVkKCdkaXYnKSBgXG4gIHBhZGRpbmc6IDhweCAwcHg7XG4gIGJvcmRlci10b3A6IHNvbGlkIDFweCAkeyh7IHRoZW1lIH0pID0+IHRoZW1lLmNvbG9ycy5ncmV5XzJ9O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuYDtcbmNvbnN0IEJ1dHRvbkNvbnRhaW5lciA9IHN0eWxlZCgnZGl2JykgYFxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuYDtcbmNvbnN0IE1vZGFsT3ZlcmxheSA9IHN0eWxlZCgnZGl2JykgYFxuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgYmFja2dyb3VuZDogJHsoeyB0aGVtZSB9KSA9PiBDb2xvcih0aGVtZS5jb2xvcnMucHJpbWFyeV9kYXJrKS5hbHBoYSgwLjgpLmhzbCgpLnN0cmluZygpfTtcbmA7XG4vKipcbiAqIENhbiB1c2UgPE1vZGFsLm92ZXJsYXkgLz4gZm9yIHRoZSBvdmVybGF5XG4gKi9cbmNvbnN0IE1vZGFsQ29tcG9uZW50ID0gKHsgdGl0bGUgPSAnQWRkIFVzZXJzJywgdGl0bGVJY29uQ29uZmlnID0ge1xuICAgIG5hbWU6IG51bGwsXG4gICAgZmlsbDogbnVsbCxcbn0sIGJ1dHRvblNpemUgPSBCVVRUT05fU0laRVMuTUQsIGFjdGlvbkJ1dHRvbklkLCBhY3Rpb25CdXR0b25UZXh0ID0gJ0FwcGx5JywgYWN0aW9uVmlzaWJsZSA9IHRydWUsIGNhbmNlbFRleHQgPSAnQ2FuY2VsJywgb25BY3Rpb25DbGljayA9ICgpID0+IHsgfSwgb25DYW5jZWxDbGljayA9ICgpID0+IHsgfSwgb25DbG9zZUNsaWNrID0gKCkgPT4geyB9LCBhY3Rpb25EaXNhYmxlZCA9IGZhbHNlLCBjaGlsZHJlbiwgQ29udGFpbmVyRWwsIEZvb3RlckVsLCB9KSA9PiB7XG4gICAgY29uc3QgQ29udGFpbmVyID0gQ29udGFpbmVyRWwgPyBDb250YWluZXJFbCA6IE1vZGFsQ29udGFpbmVyO1xuICAgIGNvbnN0IEZvb3RlciA9IEZvb3RlckVsID8gRm9vdGVyRWwgOiBEZWZhdWx0Rm9vdGVyO1xuICAgIHJldHVybiAoPENvbnRhaW5lcj5cbiAgICAgIDxkaXYgY3NzPXtjc3MgYFxuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgICAgICBgfT5cbiAgICAgICAgPE1vZGFsVGl0bGU+XG4gICAgICAgICAge3RpdGxlSWNvbkNvbmZpZy5uYW1lICYmICg8ZGl2IGNzcz17Y3NzIGBcbiAgICAgICAgICAgICAgICBmbGV4OiAxO1xuICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDEwcHg7XG4gICAgICAgICAgICAgICAgcGFkZGluZy10b3A6IDNweDtcbiAgICAgICAgICAgICAgYH0+XG4gICAgICAgICAgICAgIDxJY29uIG5hbWU9e3RpdGxlSWNvbkNvbmZpZy5uYW1lfSB3aWR0aD1cIjIwcHhcIiBoZWlnaHQ9XCIyMHB4XCIgZmlsbD17dGl0bGVJY29uQ29uZmlnLmZpbGx9Lz5cbiAgICAgICAgICAgIDwvZGl2Pil9XG4gICAgICAgICAgPFR5cG9ncmFwaHkgY3NzPXtjc3MgYFxuICAgICAgICAgICAgICBtYXJnaW46IDBweDtcbiAgICAgICAgICAgIGB9IHZhcmlhbnQ9XCJzdWJ0aXRsZVwiPlxuICAgICAgICAgICAge3RpdGxlfVxuICAgICAgICAgIDwvVHlwb2dyYXBoeT5cbiAgICAgICAgPC9Nb2RhbFRpdGxlPlxuICAgICAgICA8Rm9jdXNXcmFwcGVyIG9uQ2xpY2s9e29uQ2xvc2VDbGlja30+XG4gICAgICAgICAgPEljb24gbmFtZT1cInRpbWVzXCIgZmlsbD1cInByaW1hcnlfMVwiIHdpZHRoPVwiMTNweFwiIGhlaWdodD1cIjEzcHhcIi8+XG4gICAgICAgIDwvRm9jdXNXcmFwcGVyPlxuICAgICAgPC9kaXY+XG5cbiAgICAgIDxkaXYgY3NzPXtjc3MgYFxuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgb3ZlcmZsb3cteTogYXV0bztcbiAgICAgICAgYH0+XG4gICAgICAgIDxkaXYgY3NzPXtjc3MgYFxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgYH0+XG4gICAgICAgICAgPE1vZGFsQm9keT5cbiAgICAgICAgICAgIDxUeXBvZ3JhcGh5IHZhcmlhbnQ9XCJwYXJhZ3JhcGhcIiBjb21wb25lbnQ9XCJkaXZcIj5cbiAgICAgICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICAgICAgPC9UeXBvZ3JhcGh5PlxuICAgICAgICAgIDwvTW9kYWxCb2R5PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICAgPE1vZGFsRm9vdGVyPlxuICAgICAgICA8Rm9vdGVyIGFjdGlvblZpc2libGU9e2FjdGlvblZpc2libGV9IGFjdGlvbkJ1dHRvbklkPXthY3Rpb25CdXR0b25JZH0gYWN0aW9uRGlzYWJsZWQ9e2FjdGlvbkRpc2FibGVkfSBvbkFjdGlvbkNsaWNrPXtvbkFjdGlvbkNsaWNrfSBhY3Rpb25CdXR0b25UZXh0PXthY3Rpb25CdXR0b25UZXh0fSBidXR0b25TaXplPXtidXR0b25TaXplfSBvbkNhbmNlbENsaWNrPXtvbkNhbmNlbENsaWNrfSBjYW5jZWxUZXh0PXtjYW5jZWxUZXh0fS8+XG4gICAgICA8L01vZGFsRm9vdGVyPlxuICAgIDwvQ29udGFpbmVyPik7XG59O1xuY29uc3QgT3ZlcmxheSA9IChwcm9wcykgPT4gPE1vZGFsT3ZlcmxheSB7Li4ucHJvcHN9Lz47XG5jb25zdCBNb2RhbCA9ICgoKSA9PiB7XG4gICAgY29uc3Qgb3V0cHV0ID0gTW9kYWxDb21wb25lbnQ7XG4gICAgb3V0cHV0Lk92ZXJsYXkgPSBPdmVybGF5O1xuICAgIHJldHVybiBvdXRwdXQ7XG59KSgpO1xuZXhwb3J0IGRlZmF1bHQgTW9kYWw7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qc3gubWFwIl19 */',
        toString: _EMOTION_STRINGIFIED_CSS_ERROR__,
      };

var DefaultFooter = function DefaultFooter(_ref7) {
  var actionVisible = _ref7.actionVisible,
    actionButtonId = _ref7.actionButtonId,
    actionDisabled = _ref7.actionDisabled,
    onActionClick = _ref7.onActionClick,
    actionButtonText = _ref7.actionButtonText,
    buttonSize = _ref7.buttonSize,
    onCancelClick = _ref7.onCancelClick,
    cancelText = _ref7.cancelText;
  return (0, _core.jsx)(
    ButtonContainer,
    null,
    actionVisible &&
      (0, _core.jsx)(
        _Button['default'],
        {
          id: actionButtonId,
          size: buttonSize || _constants.BUTTON_SIZES.MD,
          disabled: actionDisabled,
          onClick: onActionClick,
        },
        actionButtonText,
      ),
    (0, _core.jsx)(
      _Button['default'],
      {
        variant: _constants.BUTTON_VARIANTS.TEXT,
        css: _ref,
        size: buttonSize || _constants.BUTTON_SIZES.MD,
        onClick: onCancelClick,
      },
      cancelText,
    ),
  );
};

var ModalContainer = /*#__PURE__*/ (0, _styledBase['default'])('div', {
  target: 'e1p8lmz0',
  label: 'Uikit-ModalContainer',
})(
  'position:relative;border-radius:20px;box-shadow:0 8px 21px 0 rgba(0,0,0,0.1),0 6px 12px 0 rgba(0,0,0,0.1);background-color:',
  function (_ref8) {
    var theme = _ref8.theme;
    return theme.colors.white;
  },
  ';max-width:776px;width:auto;padding:24px;padding-bottom:0px;max-height:95vh;display:flex;flex-direction:column;align-items:space-between;margin:0 1rem;' +
    (process.env.NODE_ENV === 'production'
      ? ''
      : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFxQzRDIiwiZmlsZSI6ImluZGV4LmpzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgKGMpIDIwMjAgVGhlIE9udGFyaW8gSW5zdGl0dXRlIGZvciBDYW5jZXIgUmVzZWFyY2guIEFsbCByaWdodHMgcmVzZXJ2ZWRcbiAqXG4gKiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2ZcbiAqIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgdjMuMC4gWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGVcbiAqIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS5cbiAqICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4gKlxuICogVEhJUyBTT0ZUV0FSRSBJUyBQUk9WSURFRCBCWSBUSEUgQ09QWVJJR0hUIEhPTERFUlMgQU5EIENPTlRSSUJVVE9SUyBcIkFTIElTXCIgQU5EIEFOWVxuICogRVhQUkVTUyBPUiBJTVBMSUVEIFdBUlJBTlRJRVMsIElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEIFRPLCBUSEUgSU1QTElFRCBXQVJSQU5USUVTXG4gKiBPRiBNRVJDSEFOVEFCSUxJVFkgQU5EIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFSRSBESVNDTEFJTUVELiBJTiBOTyBFVkVOVFxuICogU0hBTEwgVEhFIENPUFlSSUdIVCBIT0xERVIgT1IgQ09OVFJJQlVUT1JTIEJFIExJQUJMRSBGT1IgQU5ZIERJUkVDVCwgSU5ESVJFQ1QsXG4gKiBJTkNJREVOVEFMLCBTUEVDSUFMLCBFWEVNUExBUlksIE9SIENPTlNFUVVFTlRJQUwgREFNQUdFUyAoSU5DTFVESU5HLCBCVVQgTk9UIExJTUlURURcbiAqIFRPLCBQUk9DVVJFTUVOVCBPRiBTVUJTVElUVVRFIEdPT0RTIE9SIFNFUlZJQ0VTOyBMT1NTIE9GIFVTRSwgREFUQSwgT1IgUFJPRklUUztcbiAqIE9SIEJVU0lORVNTIElOVEVSUlVQVElPTikgSE9XRVZFUiBDQVVTRUQgQU5EIE9OIEFOWSBUSEVPUlkgT0YgTElBQklMSVRZLCBXSEVUSEVSXG4gKiBJTiBDT05UUkFDVCwgU1RSSUNUIExJQUJJTElUWSwgT1IgVE9SVCAoSU5DTFVESU5HIE5FR0xJR0VOQ0UgT1IgT1RIRVJXSVNFKSBBUklTSU5HIElOXG4gKiBBTlkgV0FZIE9VVCBPRiBUSEUgVVNFIE9GIFRISVMgU09GVFdBUkUsIEVWRU4gSUYgQURWSVNFRCBPRiBUSEUgUE9TU0lCSUxJVFkgT0YgU1VDSCBEQU1BR0UuXG4gKi9cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgQ29sb3IgZnJvbSAnY29sb3InO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgVHlwb2dyYXBoeSBmcm9tICcuLi9UeXBvZ3JhcGh5JztcbmltcG9ydCBCdXR0b24gZnJvbSAnLi4vQnV0dG9uJztcbmltcG9ydCBJY29uIGZyb20gJy4uL0ljb24nO1xuaW1wb3J0IEZvY3VzV3JhcHBlciBmcm9tICcuLi9Gb2N1c1dyYXBwZXInO1xuaW1wb3J0IHsgQlVUVE9OX1NJWkVTLCBCVVRUT05fVkFSSUFOVFMgfSBmcm9tICd1aWtpdC9CdXR0b24vY29uc3RhbnRzJztcbmNvbnN0IERlZmF1bHRGb290ZXIgPSAoeyBhY3Rpb25WaXNpYmxlLCBhY3Rpb25CdXR0b25JZCwgYWN0aW9uRGlzYWJsZWQsIG9uQWN0aW9uQ2xpY2ssIGFjdGlvbkJ1dHRvblRleHQsIGJ1dHRvblNpemUsIG9uQ2FuY2VsQ2xpY2ssIGNhbmNlbFRleHQsIH0pID0+ICg8QnV0dG9uQ29udGFpbmVyPlxuICAgIHthY3Rpb25WaXNpYmxlICYmICg8QnV0dG9uIGlkPXthY3Rpb25CdXR0b25JZH0gc2l6ZT17YnV0dG9uU2l6ZSB8fCBCVVRUT05fU0laRVMuTUR9IGRpc2FibGVkPXthY3Rpb25EaXNhYmxlZH0gb25DbGljaz17b25BY3Rpb25DbGlja30+XG4gICAgICAgIHthY3Rpb25CdXR0b25UZXh0fVxuICAgICAgPC9CdXR0b24+KX1cbiAgICA8QnV0dG9uIHZhcmlhbnQ9e0JVVFRPTl9WQVJJQU5UUy5URVhUfSBjc3M9e2NzcyBgXG4gICAgICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xuICAgICAgYH0gc2l6ZT17YnV0dG9uU2l6ZSB8fCBCVVRUT05fU0laRVMuTUR9IG9uQ2xpY2s9e29uQ2FuY2VsQ2xpY2t9PlxuICAgICAge2NhbmNlbFRleHR9XG4gICAgPC9CdXR0b24+XG4gIDwvQnV0dG9uQ29udGFpbmVyPik7XG5leHBvcnQgY29uc3QgTW9kYWxDb250YWluZXIgPSBzdHlsZWQoJ2RpdicpIGBcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICBib3gtc2hhZG93OiAwIDhweCAyMXB4IDAgcmdiYSgwLCAwLCAwLCAwLjEpLCAwIDZweCAxMnB4IDAgcmdiYSgwLCAwLCAwLCAwLjEpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyh7IHRoZW1lIH0pID0+IHRoZW1lLmNvbG9ycy53aGl0ZX07XG4gIG1heC13aWR0aDogNzc2cHg7XG4gIHdpZHRoOiBhdXRvO1xuICBwYWRkaW5nOiAyNHB4O1xuICBwYWRkaW5nLWJvdHRvbTogMHB4O1xuICBtYXgtaGVpZ2h0OiA5NXZoO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogc3BhY2UtYmV0d2VlbjtcbiAgbWFyZ2luOiAwIDFyZW07XG5gO1xuY29uc3QgTW9kYWxUaXRsZSA9IHN0eWxlZCgnZGl2JykgYFxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuYDtcbmNvbnN0IE1vZGFsQm9keSA9IHN0eWxlZCgnZGl2JykgYFxuICBtYXJnaW4tdG9wOiAyNHB4O1xuICBtYXJnaW4tYm90dG9tOiAyNHB4O1xuYDtcbmNvbnN0IE1vZGFsRm9vdGVyID0gc3R5bGVkKCdkaXYnKSBgXG4gIHBhZGRpbmc6IDhweCAwcHg7XG4gIGJvcmRlci10b3A6IHNvbGlkIDFweCAkeyh7IHRoZW1lIH0pID0+IHRoZW1lLmNvbG9ycy5ncmV5XzJ9O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuYDtcbmNvbnN0IEJ1dHRvbkNvbnRhaW5lciA9IHN0eWxlZCgnZGl2JykgYFxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuYDtcbmNvbnN0IE1vZGFsT3ZlcmxheSA9IHN0eWxlZCgnZGl2JykgYFxuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgYmFja2dyb3VuZDogJHsoeyB0aGVtZSB9KSA9PiBDb2xvcih0aGVtZS5jb2xvcnMucHJpbWFyeV9kYXJrKS5hbHBoYSgwLjgpLmhzbCgpLnN0cmluZygpfTtcbmA7XG4vKipcbiAqIENhbiB1c2UgPE1vZGFsLm92ZXJsYXkgLz4gZm9yIHRoZSBvdmVybGF5XG4gKi9cbmNvbnN0IE1vZGFsQ29tcG9uZW50ID0gKHsgdGl0bGUgPSAnQWRkIFVzZXJzJywgdGl0bGVJY29uQ29uZmlnID0ge1xuICAgIG5hbWU6IG51bGwsXG4gICAgZmlsbDogbnVsbCxcbn0sIGJ1dHRvblNpemUgPSBCVVRUT05fU0laRVMuTUQsIGFjdGlvbkJ1dHRvbklkLCBhY3Rpb25CdXR0b25UZXh0ID0gJ0FwcGx5JywgYWN0aW9uVmlzaWJsZSA9IHRydWUsIGNhbmNlbFRleHQgPSAnQ2FuY2VsJywgb25BY3Rpb25DbGljayA9ICgpID0+IHsgfSwgb25DYW5jZWxDbGljayA9ICgpID0+IHsgfSwgb25DbG9zZUNsaWNrID0gKCkgPT4geyB9LCBhY3Rpb25EaXNhYmxlZCA9IGZhbHNlLCBjaGlsZHJlbiwgQ29udGFpbmVyRWwsIEZvb3RlckVsLCB9KSA9PiB7XG4gICAgY29uc3QgQ29udGFpbmVyID0gQ29udGFpbmVyRWwgPyBDb250YWluZXJFbCA6IE1vZGFsQ29udGFpbmVyO1xuICAgIGNvbnN0IEZvb3RlciA9IEZvb3RlckVsID8gRm9vdGVyRWwgOiBEZWZhdWx0Rm9vdGVyO1xuICAgIHJldHVybiAoPENvbnRhaW5lcj5cbiAgICAgIDxkaXYgY3NzPXtjc3MgYFxuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgICAgICBgfT5cbiAgICAgICAgPE1vZGFsVGl0bGU+XG4gICAgICAgICAge3RpdGxlSWNvbkNvbmZpZy5uYW1lICYmICg8ZGl2IGNzcz17Y3NzIGBcbiAgICAgICAgICAgICAgICBmbGV4OiAxO1xuICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDEwcHg7XG4gICAgICAgICAgICAgICAgcGFkZGluZy10b3A6IDNweDtcbiAgICAgICAgICAgICAgYH0+XG4gICAgICAgICAgICAgIDxJY29uIG5hbWU9e3RpdGxlSWNvbkNvbmZpZy5uYW1lfSB3aWR0aD1cIjIwcHhcIiBoZWlnaHQ9XCIyMHB4XCIgZmlsbD17dGl0bGVJY29uQ29uZmlnLmZpbGx9Lz5cbiAgICAgICAgICAgIDwvZGl2Pil9XG4gICAgICAgICAgPFR5cG9ncmFwaHkgY3NzPXtjc3MgYFxuICAgICAgICAgICAgICBtYXJnaW46IDBweDtcbiAgICAgICAgICAgIGB9IHZhcmlhbnQ9XCJzdWJ0aXRsZVwiPlxuICAgICAgICAgICAge3RpdGxlfVxuICAgICAgICAgIDwvVHlwb2dyYXBoeT5cbiAgICAgICAgPC9Nb2RhbFRpdGxlPlxuICAgICAgICA8Rm9jdXNXcmFwcGVyIG9uQ2xpY2s9e29uQ2xvc2VDbGlja30+XG4gICAgICAgICAgPEljb24gbmFtZT1cInRpbWVzXCIgZmlsbD1cInByaW1hcnlfMVwiIHdpZHRoPVwiMTNweFwiIGhlaWdodD1cIjEzcHhcIi8+XG4gICAgICAgIDwvRm9jdXNXcmFwcGVyPlxuICAgICAgPC9kaXY+XG5cbiAgICAgIDxkaXYgY3NzPXtjc3MgYFxuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgb3ZlcmZsb3cteTogYXV0bztcbiAgICAgICAgYH0+XG4gICAgICAgIDxkaXYgY3NzPXtjc3MgYFxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgYH0+XG4gICAgICAgICAgPE1vZGFsQm9keT5cbiAgICAgICAgICAgIDxUeXBvZ3JhcGh5IHZhcmlhbnQ9XCJwYXJhZ3JhcGhcIiBjb21wb25lbnQ9XCJkaXZcIj5cbiAgICAgICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICAgICAgPC9UeXBvZ3JhcGh5PlxuICAgICAgICAgIDwvTW9kYWxCb2R5PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICAgPE1vZGFsRm9vdGVyPlxuICAgICAgICA8Rm9vdGVyIGFjdGlvblZpc2libGU9e2FjdGlvblZpc2libGV9IGFjdGlvbkJ1dHRvbklkPXthY3Rpb25CdXR0b25JZH0gYWN0aW9uRGlzYWJsZWQ9e2FjdGlvbkRpc2FibGVkfSBvbkFjdGlvbkNsaWNrPXtvbkFjdGlvbkNsaWNrfSBhY3Rpb25CdXR0b25UZXh0PXthY3Rpb25CdXR0b25UZXh0fSBidXR0b25TaXplPXtidXR0b25TaXplfSBvbkNhbmNlbENsaWNrPXtvbkNhbmNlbENsaWNrfSBjYW5jZWxUZXh0PXtjYW5jZWxUZXh0fS8+XG4gICAgICA8L01vZGFsRm9vdGVyPlxuICAgIDwvQ29udGFpbmVyPik7XG59O1xuY29uc3QgT3ZlcmxheSA9IChwcm9wcykgPT4gPE1vZGFsT3ZlcmxheSB7Li4ucHJvcHN9Lz47XG5jb25zdCBNb2RhbCA9ICgoKSA9PiB7XG4gICAgY29uc3Qgb3V0cHV0ID0gTW9kYWxDb21wb25lbnQ7XG4gICAgb3V0cHV0Lk92ZXJsYXkgPSBPdmVybGF5O1xuICAgIHJldHVybiBvdXRwdXQ7XG59KSgpO1xuZXhwb3J0IGRlZmF1bHQgTW9kYWw7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qc3gubWFwIl19 */'),
);
exports.ModalContainer = ModalContainer;
var ModalTitle = /*#__PURE__*/ (0, _styledBase['default'])('div', {
  target: 'e1p8lmz1',
  label: 'Uikit-ModalTitle',
})(
  process.env.NODE_ENV === 'production'
    ? {
        name: 'u4p24i',
        styles: 'display:flex;flex-direction:row;align-items:center;',
      }
    : {
        name: 'u4p24i',
        styles: 'display:flex;flex-direction:row;align-items:center;',
        map: '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFvRGlDIiwiZmlsZSI6ImluZGV4LmpzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgKGMpIDIwMjAgVGhlIE9udGFyaW8gSW5zdGl0dXRlIGZvciBDYW5jZXIgUmVzZWFyY2guIEFsbCByaWdodHMgcmVzZXJ2ZWRcbiAqXG4gKiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2ZcbiAqIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgdjMuMC4gWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGVcbiAqIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS5cbiAqICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4gKlxuICogVEhJUyBTT0ZUV0FSRSBJUyBQUk9WSURFRCBCWSBUSEUgQ09QWVJJR0hUIEhPTERFUlMgQU5EIENPTlRSSUJVVE9SUyBcIkFTIElTXCIgQU5EIEFOWVxuICogRVhQUkVTUyBPUiBJTVBMSUVEIFdBUlJBTlRJRVMsIElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEIFRPLCBUSEUgSU1QTElFRCBXQVJSQU5USUVTXG4gKiBPRiBNRVJDSEFOVEFCSUxJVFkgQU5EIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFSRSBESVNDTEFJTUVELiBJTiBOTyBFVkVOVFxuICogU0hBTEwgVEhFIENPUFlSSUdIVCBIT0xERVIgT1IgQ09OVFJJQlVUT1JTIEJFIExJQUJMRSBGT1IgQU5ZIERJUkVDVCwgSU5ESVJFQ1QsXG4gKiBJTkNJREVOVEFMLCBTUEVDSUFMLCBFWEVNUExBUlksIE9SIENPTlNFUVVFTlRJQUwgREFNQUdFUyAoSU5DTFVESU5HLCBCVVQgTk9UIExJTUlURURcbiAqIFRPLCBQUk9DVVJFTUVOVCBPRiBTVUJTVElUVVRFIEdPT0RTIE9SIFNFUlZJQ0VTOyBMT1NTIE9GIFVTRSwgREFUQSwgT1IgUFJPRklUUztcbiAqIE9SIEJVU0lORVNTIElOVEVSUlVQVElPTikgSE9XRVZFUiBDQVVTRUQgQU5EIE9OIEFOWSBUSEVPUlkgT0YgTElBQklMSVRZLCBXSEVUSEVSXG4gKiBJTiBDT05UUkFDVCwgU1RSSUNUIExJQUJJTElUWSwgT1IgVE9SVCAoSU5DTFVESU5HIE5FR0xJR0VOQ0UgT1IgT1RIRVJXSVNFKSBBUklTSU5HIElOXG4gKiBBTlkgV0FZIE9VVCBPRiBUSEUgVVNFIE9GIFRISVMgU09GVFdBUkUsIEVWRU4gSUYgQURWSVNFRCBPRiBUSEUgUE9TU0lCSUxJVFkgT0YgU1VDSCBEQU1BR0UuXG4gKi9cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgQ29sb3IgZnJvbSAnY29sb3InO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgVHlwb2dyYXBoeSBmcm9tICcuLi9UeXBvZ3JhcGh5JztcbmltcG9ydCBCdXR0b24gZnJvbSAnLi4vQnV0dG9uJztcbmltcG9ydCBJY29uIGZyb20gJy4uL0ljb24nO1xuaW1wb3J0IEZvY3VzV3JhcHBlciBmcm9tICcuLi9Gb2N1c1dyYXBwZXInO1xuaW1wb3J0IHsgQlVUVE9OX1NJWkVTLCBCVVRUT05fVkFSSUFOVFMgfSBmcm9tICd1aWtpdC9CdXR0b24vY29uc3RhbnRzJztcbmNvbnN0IERlZmF1bHRGb290ZXIgPSAoeyBhY3Rpb25WaXNpYmxlLCBhY3Rpb25CdXR0b25JZCwgYWN0aW9uRGlzYWJsZWQsIG9uQWN0aW9uQ2xpY2ssIGFjdGlvbkJ1dHRvblRleHQsIGJ1dHRvblNpemUsIG9uQ2FuY2VsQ2xpY2ssIGNhbmNlbFRleHQsIH0pID0+ICg8QnV0dG9uQ29udGFpbmVyPlxuICAgIHthY3Rpb25WaXNpYmxlICYmICg8QnV0dG9uIGlkPXthY3Rpb25CdXR0b25JZH0gc2l6ZT17YnV0dG9uU2l6ZSB8fCBCVVRUT05fU0laRVMuTUR9IGRpc2FibGVkPXthY3Rpb25EaXNhYmxlZH0gb25DbGljaz17b25BY3Rpb25DbGlja30+XG4gICAgICAgIHthY3Rpb25CdXR0b25UZXh0fVxuICAgICAgPC9CdXR0b24+KX1cbiAgICA8QnV0dG9uIHZhcmlhbnQ9e0JVVFRPTl9WQVJJQU5UUy5URVhUfSBjc3M9e2NzcyBgXG4gICAgICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xuICAgICAgYH0gc2l6ZT17YnV0dG9uU2l6ZSB8fCBCVVRUT05fU0laRVMuTUR9IG9uQ2xpY2s9e29uQ2FuY2VsQ2xpY2t9PlxuICAgICAge2NhbmNlbFRleHR9XG4gICAgPC9CdXR0b24+XG4gIDwvQnV0dG9uQ29udGFpbmVyPik7XG5leHBvcnQgY29uc3QgTW9kYWxDb250YWluZXIgPSBzdHlsZWQoJ2RpdicpIGBcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICBib3gtc2hhZG93OiAwIDhweCAyMXB4IDAgcmdiYSgwLCAwLCAwLCAwLjEpLCAwIDZweCAxMnB4IDAgcmdiYSgwLCAwLCAwLCAwLjEpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyh7IHRoZW1lIH0pID0+IHRoZW1lLmNvbG9ycy53aGl0ZX07XG4gIG1heC13aWR0aDogNzc2cHg7XG4gIHdpZHRoOiBhdXRvO1xuICBwYWRkaW5nOiAyNHB4O1xuICBwYWRkaW5nLWJvdHRvbTogMHB4O1xuICBtYXgtaGVpZ2h0OiA5NXZoO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogc3BhY2UtYmV0d2VlbjtcbiAgbWFyZ2luOiAwIDFyZW07XG5gO1xuY29uc3QgTW9kYWxUaXRsZSA9IHN0eWxlZCgnZGl2JykgYFxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuYDtcbmNvbnN0IE1vZGFsQm9keSA9IHN0eWxlZCgnZGl2JykgYFxuICBtYXJnaW4tdG9wOiAyNHB4O1xuICBtYXJnaW4tYm90dG9tOiAyNHB4O1xuYDtcbmNvbnN0IE1vZGFsRm9vdGVyID0gc3R5bGVkKCdkaXYnKSBgXG4gIHBhZGRpbmc6IDhweCAwcHg7XG4gIGJvcmRlci10b3A6IHNvbGlkIDFweCAkeyh7IHRoZW1lIH0pID0+IHRoZW1lLmNvbG9ycy5ncmV5XzJ9O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuYDtcbmNvbnN0IEJ1dHRvbkNvbnRhaW5lciA9IHN0eWxlZCgnZGl2JykgYFxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuYDtcbmNvbnN0IE1vZGFsT3ZlcmxheSA9IHN0eWxlZCgnZGl2JykgYFxuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgYmFja2dyb3VuZDogJHsoeyB0aGVtZSB9KSA9PiBDb2xvcih0aGVtZS5jb2xvcnMucHJpbWFyeV9kYXJrKS5hbHBoYSgwLjgpLmhzbCgpLnN0cmluZygpfTtcbmA7XG4vKipcbiAqIENhbiB1c2UgPE1vZGFsLm92ZXJsYXkgLz4gZm9yIHRoZSBvdmVybGF5XG4gKi9cbmNvbnN0IE1vZGFsQ29tcG9uZW50ID0gKHsgdGl0bGUgPSAnQWRkIFVzZXJzJywgdGl0bGVJY29uQ29uZmlnID0ge1xuICAgIG5hbWU6IG51bGwsXG4gICAgZmlsbDogbnVsbCxcbn0sIGJ1dHRvblNpemUgPSBCVVRUT05fU0laRVMuTUQsIGFjdGlvbkJ1dHRvbklkLCBhY3Rpb25CdXR0b25UZXh0ID0gJ0FwcGx5JywgYWN0aW9uVmlzaWJsZSA9IHRydWUsIGNhbmNlbFRleHQgPSAnQ2FuY2VsJywgb25BY3Rpb25DbGljayA9ICgpID0+IHsgfSwgb25DYW5jZWxDbGljayA9ICgpID0+IHsgfSwgb25DbG9zZUNsaWNrID0gKCkgPT4geyB9LCBhY3Rpb25EaXNhYmxlZCA9IGZhbHNlLCBjaGlsZHJlbiwgQ29udGFpbmVyRWwsIEZvb3RlckVsLCB9KSA9PiB7XG4gICAgY29uc3QgQ29udGFpbmVyID0gQ29udGFpbmVyRWwgPyBDb250YWluZXJFbCA6IE1vZGFsQ29udGFpbmVyO1xuICAgIGNvbnN0IEZvb3RlciA9IEZvb3RlckVsID8gRm9vdGVyRWwgOiBEZWZhdWx0Rm9vdGVyO1xuICAgIHJldHVybiAoPENvbnRhaW5lcj5cbiAgICAgIDxkaXYgY3NzPXtjc3MgYFxuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgICAgICBgfT5cbiAgICAgICAgPE1vZGFsVGl0bGU+XG4gICAgICAgICAge3RpdGxlSWNvbkNvbmZpZy5uYW1lICYmICg8ZGl2IGNzcz17Y3NzIGBcbiAgICAgICAgICAgICAgICBmbGV4OiAxO1xuICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDEwcHg7XG4gICAgICAgICAgICAgICAgcGFkZGluZy10b3A6IDNweDtcbiAgICAgICAgICAgICAgYH0+XG4gICAgICAgICAgICAgIDxJY29uIG5hbWU9e3RpdGxlSWNvbkNvbmZpZy5uYW1lfSB3aWR0aD1cIjIwcHhcIiBoZWlnaHQ9XCIyMHB4XCIgZmlsbD17dGl0bGVJY29uQ29uZmlnLmZpbGx9Lz5cbiAgICAgICAgICAgIDwvZGl2Pil9XG4gICAgICAgICAgPFR5cG9ncmFwaHkgY3NzPXtjc3MgYFxuICAgICAgICAgICAgICBtYXJnaW46IDBweDtcbiAgICAgICAgICAgIGB9IHZhcmlhbnQ9XCJzdWJ0aXRsZVwiPlxuICAgICAgICAgICAge3RpdGxlfVxuICAgICAgICAgIDwvVHlwb2dyYXBoeT5cbiAgICAgICAgPC9Nb2RhbFRpdGxlPlxuICAgICAgICA8Rm9jdXNXcmFwcGVyIG9uQ2xpY2s9e29uQ2xvc2VDbGlja30+XG4gICAgICAgICAgPEljb24gbmFtZT1cInRpbWVzXCIgZmlsbD1cInByaW1hcnlfMVwiIHdpZHRoPVwiMTNweFwiIGhlaWdodD1cIjEzcHhcIi8+XG4gICAgICAgIDwvRm9jdXNXcmFwcGVyPlxuICAgICAgPC9kaXY+XG5cbiAgICAgIDxkaXYgY3NzPXtjc3MgYFxuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgb3ZlcmZsb3cteTogYXV0bztcbiAgICAgICAgYH0+XG4gICAgICAgIDxkaXYgY3NzPXtjc3MgYFxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgYH0+XG4gICAgICAgICAgPE1vZGFsQm9keT5cbiAgICAgICAgICAgIDxUeXBvZ3JhcGh5IHZhcmlhbnQ9XCJwYXJhZ3JhcGhcIiBjb21wb25lbnQ9XCJkaXZcIj5cbiAgICAgICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICAgICAgPC9UeXBvZ3JhcGh5PlxuICAgICAgICAgIDwvTW9kYWxCb2R5PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICAgPE1vZGFsRm9vdGVyPlxuICAgICAgICA8Rm9vdGVyIGFjdGlvblZpc2libGU9e2FjdGlvblZpc2libGV9IGFjdGlvbkJ1dHRvbklkPXthY3Rpb25CdXR0b25JZH0gYWN0aW9uRGlzYWJsZWQ9e2FjdGlvbkRpc2FibGVkfSBvbkFjdGlvbkNsaWNrPXtvbkFjdGlvbkNsaWNrfSBhY3Rpb25CdXR0b25UZXh0PXthY3Rpb25CdXR0b25UZXh0fSBidXR0b25TaXplPXtidXR0b25TaXplfSBvbkNhbmNlbENsaWNrPXtvbkNhbmNlbENsaWNrfSBjYW5jZWxUZXh0PXtjYW5jZWxUZXh0fS8+XG4gICAgICA8L01vZGFsRm9vdGVyPlxuICAgIDwvQ29udGFpbmVyPik7XG59O1xuY29uc3QgT3ZlcmxheSA9IChwcm9wcykgPT4gPE1vZGFsT3ZlcmxheSB7Li4ucHJvcHN9Lz47XG5jb25zdCBNb2RhbCA9ICgoKSA9PiB7XG4gICAgY29uc3Qgb3V0cHV0ID0gTW9kYWxDb21wb25lbnQ7XG4gICAgb3V0cHV0Lk92ZXJsYXkgPSBPdmVybGF5O1xuICAgIHJldHVybiBvdXRwdXQ7XG59KSgpO1xuZXhwb3J0IGRlZmF1bHQgTW9kYWw7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qc3gubWFwIl19 */',
        toString: _EMOTION_STRINGIFIED_CSS_ERROR__,
      },
);
var ModalBody = /*#__PURE__*/ (0, _styledBase['default'])('div', {
  target: 'e1p8lmz2',
  label: 'Uikit-ModalBody',
})(
  process.env.NODE_ENV === 'production'
    ? {
        name: '5vb4lz',
        styles: 'margin-top:24px;margin-bottom:24px;',
      }
    : {
        name: '5vb4lz',
        styles: 'margin-top:24px;margin-bottom:24px;',
        map: '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF5RGdDIiwiZmlsZSI6ImluZGV4LmpzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgKGMpIDIwMjAgVGhlIE9udGFyaW8gSW5zdGl0dXRlIGZvciBDYW5jZXIgUmVzZWFyY2guIEFsbCByaWdodHMgcmVzZXJ2ZWRcbiAqXG4gKiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2ZcbiAqIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgdjMuMC4gWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGVcbiAqIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS5cbiAqICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4gKlxuICogVEhJUyBTT0ZUV0FSRSBJUyBQUk9WSURFRCBCWSBUSEUgQ09QWVJJR0hUIEhPTERFUlMgQU5EIENPTlRSSUJVVE9SUyBcIkFTIElTXCIgQU5EIEFOWVxuICogRVhQUkVTUyBPUiBJTVBMSUVEIFdBUlJBTlRJRVMsIElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEIFRPLCBUSEUgSU1QTElFRCBXQVJSQU5USUVTXG4gKiBPRiBNRVJDSEFOVEFCSUxJVFkgQU5EIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFSRSBESVNDTEFJTUVELiBJTiBOTyBFVkVOVFxuICogU0hBTEwgVEhFIENPUFlSSUdIVCBIT0xERVIgT1IgQ09OVFJJQlVUT1JTIEJFIExJQUJMRSBGT1IgQU5ZIERJUkVDVCwgSU5ESVJFQ1QsXG4gKiBJTkNJREVOVEFMLCBTUEVDSUFMLCBFWEVNUExBUlksIE9SIENPTlNFUVVFTlRJQUwgREFNQUdFUyAoSU5DTFVESU5HLCBCVVQgTk9UIExJTUlURURcbiAqIFRPLCBQUk9DVVJFTUVOVCBPRiBTVUJTVElUVVRFIEdPT0RTIE9SIFNFUlZJQ0VTOyBMT1NTIE9GIFVTRSwgREFUQSwgT1IgUFJPRklUUztcbiAqIE9SIEJVU0lORVNTIElOVEVSUlVQVElPTikgSE9XRVZFUiBDQVVTRUQgQU5EIE9OIEFOWSBUSEVPUlkgT0YgTElBQklMSVRZLCBXSEVUSEVSXG4gKiBJTiBDT05UUkFDVCwgU1RSSUNUIExJQUJJTElUWSwgT1IgVE9SVCAoSU5DTFVESU5HIE5FR0xJR0VOQ0UgT1IgT1RIRVJXSVNFKSBBUklTSU5HIElOXG4gKiBBTlkgV0FZIE9VVCBPRiBUSEUgVVNFIE9GIFRISVMgU09GVFdBUkUsIEVWRU4gSUYgQURWSVNFRCBPRiBUSEUgUE9TU0lCSUxJVFkgT0YgU1VDSCBEQU1BR0UuXG4gKi9cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgQ29sb3IgZnJvbSAnY29sb3InO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgVHlwb2dyYXBoeSBmcm9tICcuLi9UeXBvZ3JhcGh5JztcbmltcG9ydCBCdXR0b24gZnJvbSAnLi4vQnV0dG9uJztcbmltcG9ydCBJY29uIGZyb20gJy4uL0ljb24nO1xuaW1wb3J0IEZvY3VzV3JhcHBlciBmcm9tICcuLi9Gb2N1c1dyYXBwZXInO1xuaW1wb3J0IHsgQlVUVE9OX1NJWkVTLCBCVVRUT05fVkFSSUFOVFMgfSBmcm9tICd1aWtpdC9CdXR0b24vY29uc3RhbnRzJztcbmNvbnN0IERlZmF1bHRGb290ZXIgPSAoeyBhY3Rpb25WaXNpYmxlLCBhY3Rpb25CdXR0b25JZCwgYWN0aW9uRGlzYWJsZWQsIG9uQWN0aW9uQ2xpY2ssIGFjdGlvbkJ1dHRvblRleHQsIGJ1dHRvblNpemUsIG9uQ2FuY2VsQ2xpY2ssIGNhbmNlbFRleHQsIH0pID0+ICg8QnV0dG9uQ29udGFpbmVyPlxuICAgIHthY3Rpb25WaXNpYmxlICYmICg8QnV0dG9uIGlkPXthY3Rpb25CdXR0b25JZH0gc2l6ZT17YnV0dG9uU2l6ZSB8fCBCVVRUT05fU0laRVMuTUR9IGRpc2FibGVkPXthY3Rpb25EaXNhYmxlZH0gb25DbGljaz17b25BY3Rpb25DbGlja30+XG4gICAgICAgIHthY3Rpb25CdXR0b25UZXh0fVxuICAgICAgPC9CdXR0b24+KX1cbiAgICA8QnV0dG9uIHZhcmlhbnQ9e0JVVFRPTl9WQVJJQU5UUy5URVhUfSBjc3M9e2NzcyBgXG4gICAgICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xuICAgICAgYH0gc2l6ZT17YnV0dG9uU2l6ZSB8fCBCVVRUT05fU0laRVMuTUR9IG9uQ2xpY2s9e29uQ2FuY2VsQ2xpY2t9PlxuICAgICAge2NhbmNlbFRleHR9XG4gICAgPC9CdXR0b24+XG4gIDwvQnV0dG9uQ29udGFpbmVyPik7XG5leHBvcnQgY29uc3QgTW9kYWxDb250YWluZXIgPSBzdHlsZWQoJ2RpdicpIGBcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICBib3gtc2hhZG93OiAwIDhweCAyMXB4IDAgcmdiYSgwLCAwLCAwLCAwLjEpLCAwIDZweCAxMnB4IDAgcmdiYSgwLCAwLCAwLCAwLjEpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyh7IHRoZW1lIH0pID0+IHRoZW1lLmNvbG9ycy53aGl0ZX07XG4gIG1heC13aWR0aDogNzc2cHg7XG4gIHdpZHRoOiBhdXRvO1xuICBwYWRkaW5nOiAyNHB4O1xuICBwYWRkaW5nLWJvdHRvbTogMHB4O1xuICBtYXgtaGVpZ2h0OiA5NXZoO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogc3BhY2UtYmV0d2VlbjtcbiAgbWFyZ2luOiAwIDFyZW07XG5gO1xuY29uc3QgTW9kYWxUaXRsZSA9IHN0eWxlZCgnZGl2JykgYFxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuYDtcbmNvbnN0IE1vZGFsQm9keSA9IHN0eWxlZCgnZGl2JykgYFxuICBtYXJnaW4tdG9wOiAyNHB4O1xuICBtYXJnaW4tYm90dG9tOiAyNHB4O1xuYDtcbmNvbnN0IE1vZGFsRm9vdGVyID0gc3R5bGVkKCdkaXYnKSBgXG4gIHBhZGRpbmc6IDhweCAwcHg7XG4gIGJvcmRlci10b3A6IHNvbGlkIDFweCAkeyh7IHRoZW1lIH0pID0+IHRoZW1lLmNvbG9ycy5ncmV5XzJ9O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuYDtcbmNvbnN0IEJ1dHRvbkNvbnRhaW5lciA9IHN0eWxlZCgnZGl2JykgYFxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuYDtcbmNvbnN0IE1vZGFsT3ZlcmxheSA9IHN0eWxlZCgnZGl2JykgYFxuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgYmFja2dyb3VuZDogJHsoeyB0aGVtZSB9KSA9PiBDb2xvcih0aGVtZS5jb2xvcnMucHJpbWFyeV9kYXJrKS5hbHBoYSgwLjgpLmhzbCgpLnN0cmluZygpfTtcbmA7XG4vKipcbiAqIENhbiB1c2UgPE1vZGFsLm92ZXJsYXkgLz4gZm9yIHRoZSBvdmVybGF5XG4gKi9cbmNvbnN0IE1vZGFsQ29tcG9uZW50ID0gKHsgdGl0bGUgPSAnQWRkIFVzZXJzJywgdGl0bGVJY29uQ29uZmlnID0ge1xuICAgIG5hbWU6IG51bGwsXG4gICAgZmlsbDogbnVsbCxcbn0sIGJ1dHRvblNpemUgPSBCVVRUT05fU0laRVMuTUQsIGFjdGlvbkJ1dHRvbklkLCBhY3Rpb25CdXR0b25UZXh0ID0gJ0FwcGx5JywgYWN0aW9uVmlzaWJsZSA9IHRydWUsIGNhbmNlbFRleHQgPSAnQ2FuY2VsJywgb25BY3Rpb25DbGljayA9ICgpID0+IHsgfSwgb25DYW5jZWxDbGljayA9ICgpID0+IHsgfSwgb25DbG9zZUNsaWNrID0gKCkgPT4geyB9LCBhY3Rpb25EaXNhYmxlZCA9IGZhbHNlLCBjaGlsZHJlbiwgQ29udGFpbmVyRWwsIEZvb3RlckVsLCB9KSA9PiB7XG4gICAgY29uc3QgQ29udGFpbmVyID0gQ29udGFpbmVyRWwgPyBDb250YWluZXJFbCA6IE1vZGFsQ29udGFpbmVyO1xuICAgIGNvbnN0IEZvb3RlciA9IEZvb3RlckVsID8gRm9vdGVyRWwgOiBEZWZhdWx0Rm9vdGVyO1xuICAgIHJldHVybiAoPENvbnRhaW5lcj5cbiAgICAgIDxkaXYgY3NzPXtjc3MgYFxuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgICAgICBgfT5cbiAgICAgICAgPE1vZGFsVGl0bGU+XG4gICAgICAgICAge3RpdGxlSWNvbkNvbmZpZy5uYW1lICYmICg8ZGl2IGNzcz17Y3NzIGBcbiAgICAgICAgICAgICAgICBmbGV4OiAxO1xuICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDEwcHg7XG4gICAgICAgICAgICAgICAgcGFkZGluZy10b3A6IDNweDtcbiAgICAgICAgICAgICAgYH0+XG4gICAgICAgICAgICAgIDxJY29uIG5hbWU9e3RpdGxlSWNvbkNvbmZpZy5uYW1lfSB3aWR0aD1cIjIwcHhcIiBoZWlnaHQ9XCIyMHB4XCIgZmlsbD17dGl0bGVJY29uQ29uZmlnLmZpbGx9Lz5cbiAgICAgICAgICAgIDwvZGl2Pil9XG4gICAgICAgICAgPFR5cG9ncmFwaHkgY3NzPXtjc3MgYFxuICAgICAgICAgICAgICBtYXJnaW46IDBweDtcbiAgICAgICAgICAgIGB9IHZhcmlhbnQ9XCJzdWJ0aXRsZVwiPlxuICAgICAgICAgICAge3RpdGxlfVxuICAgICAgICAgIDwvVHlwb2dyYXBoeT5cbiAgICAgICAgPC9Nb2RhbFRpdGxlPlxuICAgICAgICA8Rm9jdXNXcmFwcGVyIG9uQ2xpY2s9e29uQ2xvc2VDbGlja30+XG4gICAgICAgICAgPEljb24gbmFtZT1cInRpbWVzXCIgZmlsbD1cInByaW1hcnlfMVwiIHdpZHRoPVwiMTNweFwiIGhlaWdodD1cIjEzcHhcIi8+XG4gICAgICAgIDwvRm9jdXNXcmFwcGVyPlxuICAgICAgPC9kaXY+XG5cbiAgICAgIDxkaXYgY3NzPXtjc3MgYFxuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgb3ZlcmZsb3cteTogYXV0bztcbiAgICAgICAgYH0+XG4gICAgICAgIDxkaXYgY3NzPXtjc3MgYFxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgYH0+XG4gICAgICAgICAgPE1vZGFsQm9keT5cbiAgICAgICAgICAgIDxUeXBvZ3JhcGh5IHZhcmlhbnQ9XCJwYXJhZ3JhcGhcIiBjb21wb25lbnQ9XCJkaXZcIj5cbiAgICAgICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICAgICAgPC9UeXBvZ3JhcGh5PlxuICAgICAgICAgIDwvTW9kYWxCb2R5PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICAgPE1vZGFsRm9vdGVyPlxuICAgICAgICA8Rm9vdGVyIGFjdGlvblZpc2libGU9e2FjdGlvblZpc2libGV9IGFjdGlvbkJ1dHRvbklkPXthY3Rpb25CdXR0b25JZH0gYWN0aW9uRGlzYWJsZWQ9e2FjdGlvbkRpc2FibGVkfSBvbkFjdGlvbkNsaWNrPXtvbkFjdGlvbkNsaWNrfSBhY3Rpb25CdXR0b25UZXh0PXthY3Rpb25CdXR0b25UZXh0fSBidXR0b25TaXplPXtidXR0b25TaXplfSBvbkNhbmNlbENsaWNrPXtvbkNhbmNlbENsaWNrfSBjYW5jZWxUZXh0PXtjYW5jZWxUZXh0fS8+XG4gICAgICA8L01vZGFsRm9vdGVyPlxuICAgIDwvQ29udGFpbmVyPik7XG59O1xuY29uc3QgT3ZlcmxheSA9IChwcm9wcykgPT4gPE1vZGFsT3ZlcmxheSB7Li4ucHJvcHN9Lz47XG5jb25zdCBNb2RhbCA9ICgoKSA9PiB7XG4gICAgY29uc3Qgb3V0cHV0ID0gTW9kYWxDb21wb25lbnQ7XG4gICAgb3V0cHV0Lk92ZXJsYXkgPSBPdmVybGF5O1xuICAgIHJldHVybiBvdXRwdXQ7XG59KSgpO1xuZXhwb3J0IGRlZmF1bHQgTW9kYWw7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qc3gubWFwIl19 */',
        toString: _EMOTION_STRINGIFIED_CSS_ERROR__,
      },
);
var ModalFooter = /*#__PURE__*/ (0, _styledBase['default'])('div', {
  target: 'e1p8lmz3',
  label: 'Uikit-ModalFooter',
})(
  'padding:8px 0px;border-top:solid 1px ',
  function (_ref9) {
    var theme = _ref9.theme;
    return theme.colors.grey_2;
  },
  ';display:flex;flex-direction:row;justify-content:flex-end;' +
    (process.env.NODE_ENV === 'production'
      ? ''
      : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE2RGtDIiwiZmlsZSI6ImluZGV4LmpzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgKGMpIDIwMjAgVGhlIE9udGFyaW8gSW5zdGl0dXRlIGZvciBDYW5jZXIgUmVzZWFyY2guIEFsbCByaWdodHMgcmVzZXJ2ZWRcbiAqXG4gKiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2ZcbiAqIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgdjMuMC4gWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGVcbiAqIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS5cbiAqICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4gKlxuICogVEhJUyBTT0ZUV0FSRSBJUyBQUk9WSURFRCBCWSBUSEUgQ09QWVJJR0hUIEhPTERFUlMgQU5EIENPTlRSSUJVVE9SUyBcIkFTIElTXCIgQU5EIEFOWVxuICogRVhQUkVTUyBPUiBJTVBMSUVEIFdBUlJBTlRJRVMsIElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEIFRPLCBUSEUgSU1QTElFRCBXQVJSQU5USUVTXG4gKiBPRiBNRVJDSEFOVEFCSUxJVFkgQU5EIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFSRSBESVNDTEFJTUVELiBJTiBOTyBFVkVOVFxuICogU0hBTEwgVEhFIENPUFlSSUdIVCBIT0xERVIgT1IgQ09OVFJJQlVUT1JTIEJFIExJQUJMRSBGT1IgQU5ZIERJUkVDVCwgSU5ESVJFQ1QsXG4gKiBJTkNJREVOVEFMLCBTUEVDSUFMLCBFWEVNUExBUlksIE9SIENPTlNFUVVFTlRJQUwgREFNQUdFUyAoSU5DTFVESU5HLCBCVVQgTk9UIExJTUlURURcbiAqIFRPLCBQUk9DVVJFTUVOVCBPRiBTVUJTVElUVVRFIEdPT0RTIE9SIFNFUlZJQ0VTOyBMT1NTIE9GIFVTRSwgREFUQSwgT1IgUFJPRklUUztcbiAqIE9SIEJVU0lORVNTIElOVEVSUlVQVElPTikgSE9XRVZFUiBDQVVTRUQgQU5EIE9OIEFOWSBUSEVPUlkgT0YgTElBQklMSVRZLCBXSEVUSEVSXG4gKiBJTiBDT05UUkFDVCwgU1RSSUNUIExJQUJJTElUWSwgT1IgVE9SVCAoSU5DTFVESU5HIE5FR0xJR0VOQ0UgT1IgT1RIRVJXSVNFKSBBUklTSU5HIElOXG4gKiBBTlkgV0FZIE9VVCBPRiBUSEUgVVNFIE9GIFRISVMgU09GVFdBUkUsIEVWRU4gSUYgQURWSVNFRCBPRiBUSEUgUE9TU0lCSUxJVFkgT0YgU1VDSCBEQU1BR0UuXG4gKi9cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgQ29sb3IgZnJvbSAnY29sb3InO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgVHlwb2dyYXBoeSBmcm9tICcuLi9UeXBvZ3JhcGh5JztcbmltcG9ydCBCdXR0b24gZnJvbSAnLi4vQnV0dG9uJztcbmltcG9ydCBJY29uIGZyb20gJy4uL0ljb24nO1xuaW1wb3J0IEZvY3VzV3JhcHBlciBmcm9tICcuLi9Gb2N1c1dyYXBwZXInO1xuaW1wb3J0IHsgQlVUVE9OX1NJWkVTLCBCVVRUT05fVkFSSUFOVFMgfSBmcm9tICd1aWtpdC9CdXR0b24vY29uc3RhbnRzJztcbmNvbnN0IERlZmF1bHRGb290ZXIgPSAoeyBhY3Rpb25WaXNpYmxlLCBhY3Rpb25CdXR0b25JZCwgYWN0aW9uRGlzYWJsZWQsIG9uQWN0aW9uQ2xpY2ssIGFjdGlvbkJ1dHRvblRleHQsIGJ1dHRvblNpemUsIG9uQ2FuY2VsQ2xpY2ssIGNhbmNlbFRleHQsIH0pID0+ICg8QnV0dG9uQ29udGFpbmVyPlxuICAgIHthY3Rpb25WaXNpYmxlICYmICg8QnV0dG9uIGlkPXthY3Rpb25CdXR0b25JZH0gc2l6ZT17YnV0dG9uU2l6ZSB8fCBCVVRUT05fU0laRVMuTUR9IGRpc2FibGVkPXthY3Rpb25EaXNhYmxlZH0gb25DbGljaz17b25BY3Rpb25DbGlja30+XG4gICAgICAgIHthY3Rpb25CdXR0b25UZXh0fVxuICAgICAgPC9CdXR0b24+KX1cbiAgICA8QnV0dG9uIHZhcmlhbnQ9e0JVVFRPTl9WQVJJQU5UUy5URVhUfSBjc3M9e2NzcyBgXG4gICAgICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xuICAgICAgYH0gc2l6ZT17YnV0dG9uU2l6ZSB8fCBCVVRUT05fU0laRVMuTUR9IG9uQ2xpY2s9e29uQ2FuY2VsQ2xpY2t9PlxuICAgICAge2NhbmNlbFRleHR9XG4gICAgPC9CdXR0b24+XG4gIDwvQnV0dG9uQ29udGFpbmVyPik7XG5leHBvcnQgY29uc3QgTW9kYWxDb250YWluZXIgPSBzdHlsZWQoJ2RpdicpIGBcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICBib3gtc2hhZG93OiAwIDhweCAyMXB4IDAgcmdiYSgwLCAwLCAwLCAwLjEpLCAwIDZweCAxMnB4IDAgcmdiYSgwLCAwLCAwLCAwLjEpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyh7IHRoZW1lIH0pID0+IHRoZW1lLmNvbG9ycy53aGl0ZX07XG4gIG1heC13aWR0aDogNzc2cHg7XG4gIHdpZHRoOiBhdXRvO1xuICBwYWRkaW5nOiAyNHB4O1xuICBwYWRkaW5nLWJvdHRvbTogMHB4O1xuICBtYXgtaGVpZ2h0OiA5NXZoO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogc3BhY2UtYmV0d2VlbjtcbiAgbWFyZ2luOiAwIDFyZW07XG5gO1xuY29uc3QgTW9kYWxUaXRsZSA9IHN0eWxlZCgnZGl2JykgYFxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuYDtcbmNvbnN0IE1vZGFsQm9keSA9IHN0eWxlZCgnZGl2JykgYFxuICBtYXJnaW4tdG9wOiAyNHB4O1xuICBtYXJnaW4tYm90dG9tOiAyNHB4O1xuYDtcbmNvbnN0IE1vZGFsRm9vdGVyID0gc3R5bGVkKCdkaXYnKSBgXG4gIHBhZGRpbmc6IDhweCAwcHg7XG4gIGJvcmRlci10b3A6IHNvbGlkIDFweCAkeyh7IHRoZW1lIH0pID0+IHRoZW1lLmNvbG9ycy5ncmV5XzJ9O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuYDtcbmNvbnN0IEJ1dHRvbkNvbnRhaW5lciA9IHN0eWxlZCgnZGl2JykgYFxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuYDtcbmNvbnN0IE1vZGFsT3ZlcmxheSA9IHN0eWxlZCgnZGl2JykgYFxuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgYmFja2dyb3VuZDogJHsoeyB0aGVtZSB9KSA9PiBDb2xvcih0aGVtZS5jb2xvcnMucHJpbWFyeV9kYXJrKS5hbHBoYSgwLjgpLmhzbCgpLnN0cmluZygpfTtcbmA7XG4vKipcbiAqIENhbiB1c2UgPE1vZGFsLm92ZXJsYXkgLz4gZm9yIHRoZSBvdmVybGF5XG4gKi9cbmNvbnN0IE1vZGFsQ29tcG9uZW50ID0gKHsgdGl0bGUgPSAnQWRkIFVzZXJzJywgdGl0bGVJY29uQ29uZmlnID0ge1xuICAgIG5hbWU6IG51bGwsXG4gICAgZmlsbDogbnVsbCxcbn0sIGJ1dHRvblNpemUgPSBCVVRUT05fU0laRVMuTUQsIGFjdGlvbkJ1dHRvbklkLCBhY3Rpb25CdXR0b25UZXh0ID0gJ0FwcGx5JywgYWN0aW9uVmlzaWJsZSA9IHRydWUsIGNhbmNlbFRleHQgPSAnQ2FuY2VsJywgb25BY3Rpb25DbGljayA9ICgpID0+IHsgfSwgb25DYW5jZWxDbGljayA9ICgpID0+IHsgfSwgb25DbG9zZUNsaWNrID0gKCkgPT4geyB9LCBhY3Rpb25EaXNhYmxlZCA9IGZhbHNlLCBjaGlsZHJlbiwgQ29udGFpbmVyRWwsIEZvb3RlckVsLCB9KSA9PiB7XG4gICAgY29uc3QgQ29udGFpbmVyID0gQ29udGFpbmVyRWwgPyBDb250YWluZXJFbCA6IE1vZGFsQ29udGFpbmVyO1xuICAgIGNvbnN0IEZvb3RlciA9IEZvb3RlckVsID8gRm9vdGVyRWwgOiBEZWZhdWx0Rm9vdGVyO1xuICAgIHJldHVybiAoPENvbnRhaW5lcj5cbiAgICAgIDxkaXYgY3NzPXtjc3MgYFxuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgICAgICBgfT5cbiAgICAgICAgPE1vZGFsVGl0bGU+XG4gICAgICAgICAge3RpdGxlSWNvbkNvbmZpZy5uYW1lICYmICg8ZGl2IGNzcz17Y3NzIGBcbiAgICAgICAgICAgICAgICBmbGV4OiAxO1xuICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDEwcHg7XG4gICAgICAgICAgICAgICAgcGFkZGluZy10b3A6IDNweDtcbiAgICAgICAgICAgICAgYH0+XG4gICAgICAgICAgICAgIDxJY29uIG5hbWU9e3RpdGxlSWNvbkNvbmZpZy5uYW1lfSB3aWR0aD1cIjIwcHhcIiBoZWlnaHQ9XCIyMHB4XCIgZmlsbD17dGl0bGVJY29uQ29uZmlnLmZpbGx9Lz5cbiAgICAgICAgICAgIDwvZGl2Pil9XG4gICAgICAgICAgPFR5cG9ncmFwaHkgY3NzPXtjc3MgYFxuICAgICAgICAgICAgICBtYXJnaW46IDBweDtcbiAgICAgICAgICAgIGB9IHZhcmlhbnQ9XCJzdWJ0aXRsZVwiPlxuICAgICAgICAgICAge3RpdGxlfVxuICAgICAgICAgIDwvVHlwb2dyYXBoeT5cbiAgICAgICAgPC9Nb2RhbFRpdGxlPlxuICAgICAgICA8Rm9jdXNXcmFwcGVyIG9uQ2xpY2s9e29uQ2xvc2VDbGlja30+XG4gICAgICAgICAgPEljb24gbmFtZT1cInRpbWVzXCIgZmlsbD1cInByaW1hcnlfMVwiIHdpZHRoPVwiMTNweFwiIGhlaWdodD1cIjEzcHhcIi8+XG4gICAgICAgIDwvRm9jdXNXcmFwcGVyPlxuICAgICAgPC9kaXY+XG5cbiAgICAgIDxkaXYgY3NzPXtjc3MgYFxuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgb3ZlcmZsb3cteTogYXV0bztcbiAgICAgICAgYH0+XG4gICAgICAgIDxkaXYgY3NzPXtjc3MgYFxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgYH0+XG4gICAgICAgICAgPE1vZGFsQm9keT5cbiAgICAgICAgICAgIDxUeXBvZ3JhcGh5IHZhcmlhbnQ9XCJwYXJhZ3JhcGhcIiBjb21wb25lbnQ9XCJkaXZcIj5cbiAgICAgICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICAgICAgPC9UeXBvZ3JhcGh5PlxuICAgICAgICAgIDwvTW9kYWxCb2R5PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICAgPE1vZGFsRm9vdGVyPlxuICAgICAgICA8Rm9vdGVyIGFjdGlvblZpc2libGU9e2FjdGlvblZpc2libGV9IGFjdGlvbkJ1dHRvbklkPXthY3Rpb25CdXR0b25JZH0gYWN0aW9uRGlzYWJsZWQ9e2FjdGlvbkRpc2FibGVkfSBvbkFjdGlvbkNsaWNrPXtvbkFjdGlvbkNsaWNrfSBhY3Rpb25CdXR0b25UZXh0PXthY3Rpb25CdXR0b25UZXh0fSBidXR0b25TaXplPXtidXR0b25TaXplfSBvbkNhbmNlbENsaWNrPXtvbkNhbmNlbENsaWNrfSBjYW5jZWxUZXh0PXtjYW5jZWxUZXh0fS8+XG4gICAgICA8L01vZGFsRm9vdGVyPlxuICAgIDwvQ29udGFpbmVyPik7XG59O1xuY29uc3QgT3ZlcmxheSA9IChwcm9wcykgPT4gPE1vZGFsT3ZlcmxheSB7Li4ucHJvcHN9Lz47XG5jb25zdCBNb2RhbCA9ICgoKSA9PiB7XG4gICAgY29uc3Qgb3V0cHV0ID0gTW9kYWxDb21wb25lbnQ7XG4gICAgb3V0cHV0Lk92ZXJsYXkgPSBPdmVybGF5O1xuICAgIHJldHVybiBvdXRwdXQ7XG59KSgpO1xuZXhwb3J0IGRlZmF1bHQgTW9kYWw7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qc3gubWFwIl19 */'),
);
var ButtonContainer = /*#__PURE__*/ (0, _styledBase['default'])('div', {
  target: 'e1p8lmz4',
  label: 'Uikit-ButtonContainer',
})(
  process.env.NODE_ENV === 'production'
    ? {
        name: '1xhj18k',
        styles: 'display:flex;flex-direction:row;',
      }
    : {
        name: '1xhj18k',
        styles: 'display:flex;flex-direction:row;',
        map: '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFvRXNDIiwiZmlsZSI6ImluZGV4LmpzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgKGMpIDIwMjAgVGhlIE9udGFyaW8gSW5zdGl0dXRlIGZvciBDYW5jZXIgUmVzZWFyY2guIEFsbCByaWdodHMgcmVzZXJ2ZWRcbiAqXG4gKiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2ZcbiAqIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgdjMuMC4gWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGVcbiAqIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS5cbiAqICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4gKlxuICogVEhJUyBTT0ZUV0FSRSBJUyBQUk9WSURFRCBCWSBUSEUgQ09QWVJJR0hUIEhPTERFUlMgQU5EIENPTlRSSUJVVE9SUyBcIkFTIElTXCIgQU5EIEFOWVxuICogRVhQUkVTUyBPUiBJTVBMSUVEIFdBUlJBTlRJRVMsIElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEIFRPLCBUSEUgSU1QTElFRCBXQVJSQU5USUVTXG4gKiBPRiBNRVJDSEFOVEFCSUxJVFkgQU5EIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFSRSBESVNDTEFJTUVELiBJTiBOTyBFVkVOVFxuICogU0hBTEwgVEhFIENPUFlSSUdIVCBIT0xERVIgT1IgQ09OVFJJQlVUT1JTIEJFIExJQUJMRSBGT1IgQU5ZIERJUkVDVCwgSU5ESVJFQ1QsXG4gKiBJTkNJREVOVEFMLCBTUEVDSUFMLCBFWEVNUExBUlksIE9SIENPTlNFUVVFTlRJQUwgREFNQUdFUyAoSU5DTFVESU5HLCBCVVQgTk9UIExJTUlURURcbiAqIFRPLCBQUk9DVVJFTUVOVCBPRiBTVUJTVElUVVRFIEdPT0RTIE9SIFNFUlZJQ0VTOyBMT1NTIE9GIFVTRSwgREFUQSwgT1IgUFJPRklUUztcbiAqIE9SIEJVU0lORVNTIElOVEVSUlVQVElPTikgSE9XRVZFUiBDQVVTRUQgQU5EIE9OIEFOWSBUSEVPUlkgT0YgTElBQklMSVRZLCBXSEVUSEVSXG4gKiBJTiBDT05UUkFDVCwgU1RSSUNUIExJQUJJTElUWSwgT1IgVE9SVCAoSU5DTFVESU5HIE5FR0xJR0VOQ0UgT1IgT1RIRVJXSVNFKSBBUklTSU5HIElOXG4gKiBBTlkgV0FZIE9VVCBPRiBUSEUgVVNFIE9GIFRISVMgU09GVFdBUkUsIEVWRU4gSUYgQURWSVNFRCBPRiBUSEUgUE9TU0lCSUxJVFkgT0YgU1VDSCBEQU1BR0UuXG4gKi9cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgQ29sb3IgZnJvbSAnY29sb3InO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgVHlwb2dyYXBoeSBmcm9tICcuLi9UeXBvZ3JhcGh5JztcbmltcG9ydCBCdXR0b24gZnJvbSAnLi4vQnV0dG9uJztcbmltcG9ydCBJY29uIGZyb20gJy4uL0ljb24nO1xuaW1wb3J0IEZvY3VzV3JhcHBlciBmcm9tICcuLi9Gb2N1c1dyYXBwZXInO1xuaW1wb3J0IHsgQlVUVE9OX1NJWkVTLCBCVVRUT05fVkFSSUFOVFMgfSBmcm9tICd1aWtpdC9CdXR0b24vY29uc3RhbnRzJztcbmNvbnN0IERlZmF1bHRGb290ZXIgPSAoeyBhY3Rpb25WaXNpYmxlLCBhY3Rpb25CdXR0b25JZCwgYWN0aW9uRGlzYWJsZWQsIG9uQWN0aW9uQ2xpY2ssIGFjdGlvbkJ1dHRvblRleHQsIGJ1dHRvblNpemUsIG9uQ2FuY2VsQ2xpY2ssIGNhbmNlbFRleHQsIH0pID0+ICg8QnV0dG9uQ29udGFpbmVyPlxuICAgIHthY3Rpb25WaXNpYmxlICYmICg8QnV0dG9uIGlkPXthY3Rpb25CdXR0b25JZH0gc2l6ZT17YnV0dG9uU2l6ZSB8fCBCVVRUT05fU0laRVMuTUR9IGRpc2FibGVkPXthY3Rpb25EaXNhYmxlZH0gb25DbGljaz17b25BY3Rpb25DbGlja30+XG4gICAgICAgIHthY3Rpb25CdXR0b25UZXh0fVxuICAgICAgPC9CdXR0b24+KX1cbiAgICA8QnV0dG9uIHZhcmlhbnQ9e0JVVFRPTl9WQVJJQU5UUy5URVhUfSBjc3M9e2NzcyBgXG4gICAgICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xuICAgICAgYH0gc2l6ZT17YnV0dG9uU2l6ZSB8fCBCVVRUT05fU0laRVMuTUR9IG9uQ2xpY2s9e29uQ2FuY2VsQ2xpY2t9PlxuICAgICAge2NhbmNlbFRleHR9XG4gICAgPC9CdXR0b24+XG4gIDwvQnV0dG9uQ29udGFpbmVyPik7XG5leHBvcnQgY29uc3QgTW9kYWxDb250YWluZXIgPSBzdHlsZWQoJ2RpdicpIGBcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICBib3gtc2hhZG93OiAwIDhweCAyMXB4IDAgcmdiYSgwLCAwLCAwLCAwLjEpLCAwIDZweCAxMnB4IDAgcmdiYSgwLCAwLCAwLCAwLjEpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyh7IHRoZW1lIH0pID0+IHRoZW1lLmNvbG9ycy53aGl0ZX07XG4gIG1heC13aWR0aDogNzc2cHg7XG4gIHdpZHRoOiBhdXRvO1xuICBwYWRkaW5nOiAyNHB4O1xuICBwYWRkaW5nLWJvdHRvbTogMHB4O1xuICBtYXgtaGVpZ2h0OiA5NXZoO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogc3BhY2UtYmV0d2VlbjtcbiAgbWFyZ2luOiAwIDFyZW07XG5gO1xuY29uc3QgTW9kYWxUaXRsZSA9IHN0eWxlZCgnZGl2JykgYFxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuYDtcbmNvbnN0IE1vZGFsQm9keSA9IHN0eWxlZCgnZGl2JykgYFxuICBtYXJnaW4tdG9wOiAyNHB4O1xuICBtYXJnaW4tYm90dG9tOiAyNHB4O1xuYDtcbmNvbnN0IE1vZGFsRm9vdGVyID0gc3R5bGVkKCdkaXYnKSBgXG4gIHBhZGRpbmc6IDhweCAwcHg7XG4gIGJvcmRlci10b3A6IHNvbGlkIDFweCAkeyh7IHRoZW1lIH0pID0+IHRoZW1lLmNvbG9ycy5ncmV5XzJ9O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuYDtcbmNvbnN0IEJ1dHRvbkNvbnRhaW5lciA9IHN0eWxlZCgnZGl2JykgYFxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuYDtcbmNvbnN0IE1vZGFsT3ZlcmxheSA9IHN0eWxlZCgnZGl2JykgYFxuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgYmFja2dyb3VuZDogJHsoeyB0aGVtZSB9KSA9PiBDb2xvcih0aGVtZS5jb2xvcnMucHJpbWFyeV9kYXJrKS5hbHBoYSgwLjgpLmhzbCgpLnN0cmluZygpfTtcbmA7XG4vKipcbiAqIENhbiB1c2UgPE1vZGFsLm92ZXJsYXkgLz4gZm9yIHRoZSBvdmVybGF5XG4gKi9cbmNvbnN0IE1vZGFsQ29tcG9uZW50ID0gKHsgdGl0bGUgPSAnQWRkIFVzZXJzJywgdGl0bGVJY29uQ29uZmlnID0ge1xuICAgIG5hbWU6IG51bGwsXG4gICAgZmlsbDogbnVsbCxcbn0sIGJ1dHRvblNpemUgPSBCVVRUT05fU0laRVMuTUQsIGFjdGlvbkJ1dHRvbklkLCBhY3Rpb25CdXR0b25UZXh0ID0gJ0FwcGx5JywgYWN0aW9uVmlzaWJsZSA9IHRydWUsIGNhbmNlbFRleHQgPSAnQ2FuY2VsJywgb25BY3Rpb25DbGljayA9ICgpID0+IHsgfSwgb25DYW5jZWxDbGljayA9ICgpID0+IHsgfSwgb25DbG9zZUNsaWNrID0gKCkgPT4geyB9LCBhY3Rpb25EaXNhYmxlZCA9IGZhbHNlLCBjaGlsZHJlbiwgQ29udGFpbmVyRWwsIEZvb3RlckVsLCB9KSA9PiB7XG4gICAgY29uc3QgQ29udGFpbmVyID0gQ29udGFpbmVyRWwgPyBDb250YWluZXJFbCA6IE1vZGFsQ29udGFpbmVyO1xuICAgIGNvbnN0IEZvb3RlciA9IEZvb3RlckVsID8gRm9vdGVyRWwgOiBEZWZhdWx0Rm9vdGVyO1xuICAgIHJldHVybiAoPENvbnRhaW5lcj5cbiAgICAgIDxkaXYgY3NzPXtjc3MgYFxuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgICAgICBgfT5cbiAgICAgICAgPE1vZGFsVGl0bGU+XG4gICAgICAgICAge3RpdGxlSWNvbkNvbmZpZy5uYW1lICYmICg8ZGl2IGNzcz17Y3NzIGBcbiAgICAgICAgICAgICAgICBmbGV4OiAxO1xuICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDEwcHg7XG4gICAgICAgICAgICAgICAgcGFkZGluZy10b3A6IDNweDtcbiAgICAgICAgICAgICAgYH0+XG4gICAgICAgICAgICAgIDxJY29uIG5hbWU9e3RpdGxlSWNvbkNvbmZpZy5uYW1lfSB3aWR0aD1cIjIwcHhcIiBoZWlnaHQ9XCIyMHB4XCIgZmlsbD17dGl0bGVJY29uQ29uZmlnLmZpbGx9Lz5cbiAgICAgICAgICAgIDwvZGl2Pil9XG4gICAgICAgICAgPFR5cG9ncmFwaHkgY3NzPXtjc3MgYFxuICAgICAgICAgICAgICBtYXJnaW46IDBweDtcbiAgICAgICAgICAgIGB9IHZhcmlhbnQ9XCJzdWJ0aXRsZVwiPlxuICAgICAgICAgICAge3RpdGxlfVxuICAgICAgICAgIDwvVHlwb2dyYXBoeT5cbiAgICAgICAgPC9Nb2RhbFRpdGxlPlxuICAgICAgICA8Rm9jdXNXcmFwcGVyIG9uQ2xpY2s9e29uQ2xvc2VDbGlja30+XG4gICAgICAgICAgPEljb24gbmFtZT1cInRpbWVzXCIgZmlsbD1cInByaW1hcnlfMVwiIHdpZHRoPVwiMTNweFwiIGhlaWdodD1cIjEzcHhcIi8+XG4gICAgICAgIDwvRm9jdXNXcmFwcGVyPlxuICAgICAgPC9kaXY+XG5cbiAgICAgIDxkaXYgY3NzPXtjc3MgYFxuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgb3ZlcmZsb3cteTogYXV0bztcbiAgICAgICAgYH0+XG4gICAgICAgIDxkaXYgY3NzPXtjc3MgYFxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgYH0+XG4gICAgICAgICAgPE1vZGFsQm9keT5cbiAgICAgICAgICAgIDxUeXBvZ3JhcGh5IHZhcmlhbnQ9XCJwYXJhZ3JhcGhcIiBjb21wb25lbnQ9XCJkaXZcIj5cbiAgICAgICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICAgICAgPC9UeXBvZ3JhcGh5PlxuICAgICAgICAgIDwvTW9kYWxCb2R5PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICAgPE1vZGFsRm9vdGVyPlxuICAgICAgICA8Rm9vdGVyIGFjdGlvblZpc2libGU9e2FjdGlvblZpc2libGV9IGFjdGlvbkJ1dHRvbklkPXthY3Rpb25CdXR0b25JZH0gYWN0aW9uRGlzYWJsZWQ9e2FjdGlvbkRpc2FibGVkfSBvbkFjdGlvbkNsaWNrPXtvbkFjdGlvbkNsaWNrfSBhY3Rpb25CdXR0b25UZXh0PXthY3Rpb25CdXR0b25UZXh0fSBidXR0b25TaXplPXtidXR0b25TaXplfSBvbkNhbmNlbENsaWNrPXtvbkNhbmNlbENsaWNrfSBjYW5jZWxUZXh0PXtjYW5jZWxUZXh0fS8+XG4gICAgICA8L01vZGFsRm9vdGVyPlxuICAgIDwvQ29udGFpbmVyPik7XG59O1xuY29uc3QgT3ZlcmxheSA9IChwcm9wcykgPT4gPE1vZGFsT3ZlcmxheSB7Li4ucHJvcHN9Lz47XG5jb25zdCBNb2RhbCA9ICgoKSA9PiB7XG4gICAgY29uc3Qgb3V0cHV0ID0gTW9kYWxDb21wb25lbnQ7XG4gICAgb3V0cHV0Lk92ZXJsYXkgPSBPdmVybGF5O1xuICAgIHJldHVybiBvdXRwdXQ7XG59KSgpO1xuZXhwb3J0IGRlZmF1bHQgTW9kYWw7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qc3gubWFwIl19 */',
        toString: _EMOTION_STRINGIFIED_CSS_ERROR__,
      },
);
var ModalOverlay = /*#__PURE__*/ (0, _styledBase['default'])('div', {
  target: 'e1p8lmz5',
  label: 'Uikit-ModalOverlay',
})(
  'width:100%;height:100%;display:flex;justify-content:center;align-items:center;background:',
  function (_ref10) {
    var theme = _ref10.theme;
    return (0, _color['default'])(theme.colors.primary_dark).alpha(0.8).hsl().string();
  },
  ';' +
    (process.env.NODE_ENV === 'production'
      ? ''
      : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF3RW1DIiwiZmlsZSI6ImluZGV4LmpzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgKGMpIDIwMjAgVGhlIE9udGFyaW8gSW5zdGl0dXRlIGZvciBDYW5jZXIgUmVzZWFyY2guIEFsbCByaWdodHMgcmVzZXJ2ZWRcbiAqXG4gKiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2ZcbiAqIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgdjMuMC4gWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGVcbiAqIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS5cbiAqICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4gKlxuICogVEhJUyBTT0ZUV0FSRSBJUyBQUk9WSURFRCBCWSBUSEUgQ09QWVJJR0hUIEhPTERFUlMgQU5EIENPTlRSSUJVVE9SUyBcIkFTIElTXCIgQU5EIEFOWVxuICogRVhQUkVTUyBPUiBJTVBMSUVEIFdBUlJBTlRJRVMsIElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEIFRPLCBUSEUgSU1QTElFRCBXQVJSQU5USUVTXG4gKiBPRiBNRVJDSEFOVEFCSUxJVFkgQU5EIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFSRSBESVNDTEFJTUVELiBJTiBOTyBFVkVOVFxuICogU0hBTEwgVEhFIENPUFlSSUdIVCBIT0xERVIgT1IgQ09OVFJJQlVUT1JTIEJFIExJQUJMRSBGT1IgQU5ZIERJUkVDVCwgSU5ESVJFQ1QsXG4gKiBJTkNJREVOVEFMLCBTUEVDSUFMLCBFWEVNUExBUlksIE9SIENPTlNFUVVFTlRJQUwgREFNQUdFUyAoSU5DTFVESU5HLCBCVVQgTk9UIExJTUlURURcbiAqIFRPLCBQUk9DVVJFTUVOVCBPRiBTVUJTVElUVVRFIEdPT0RTIE9SIFNFUlZJQ0VTOyBMT1NTIE9GIFVTRSwgREFUQSwgT1IgUFJPRklUUztcbiAqIE9SIEJVU0lORVNTIElOVEVSUlVQVElPTikgSE9XRVZFUiBDQVVTRUQgQU5EIE9OIEFOWSBUSEVPUlkgT0YgTElBQklMSVRZLCBXSEVUSEVSXG4gKiBJTiBDT05UUkFDVCwgU1RSSUNUIExJQUJJTElUWSwgT1IgVE9SVCAoSU5DTFVESU5HIE5FR0xJR0VOQ0UgT1IgT1RIRVJXSVNFKSBBUklTSU5HIElOXG4gKiBBTlkgV0FZIE9VVCBPRiBUSEUgVVNFIE9GIFRISVMgU09GVFdBUkUsIEVWRU4gSUYgQURWSVNFRCBPRiBUSEUgUE9TU0lCSUxJVFkgT0YgU1VDSCBEQU1BR0UuXG4gKi9cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgQ29sb3IgZnJvbSAnY29sb3InO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgVHlwb2dyYXBoeSBmcm9tICcuLi9UeXBvZ3JhcGh5JztcbmltcG9ydCBCdXR0b24gZnJvbSAnLi4vQnV0dG9uJztcbmltcG9ydCBJY29uIGZyb20gJy4uL0ljb24nO1xuaW1wb3J0IEZvY3VzV3JhcHBlciBmcm9tICcuLi9Gb2N1c1dyYXBwZXInO1xuaW1wb3J0IHsgQlVUVE9OX1NJWkVTLCBCVVRUT05fVkFSSUFOVFMgfSBmcm9tICd1aWtpdC9CdXR0b24vY29uc3RhbnRzJztcbmNvbnN0IERlZmF1bHRGb290ZXIgPSAoeyBhY3Rpb25WaXNpYmxlLCBhY3Rpb25CdXR0b25JZCwgYWN0aW9uRGlzYWJsZWQsIG9uQWN0aW9uQ2xpY2ssIGFjdGlvbkJ1dHRvblRleHQsIGJ1dHRvblNpemUsIG9uQ2FuY2VsQ2xpY2ssIGNhbmNlbFRleHQsIH0pID0+ICg8QnV0dG9uQ29udGFpbmVyPlxuICAgIHthY3Rpb25WaXNpYmxlICYmICg8QnV0dG9uIGlkPXthY3Rpb25CdXR0b25JZH0gc2l6ZT17YnV0dG9uU2l6ZSB8fCBCVVRUT05fU0laRVMuTUR9IGRpc2FibGVkPXthY3Rpb25EaXNhYmxlZH0gb25DbGljaz17b25BY3Rpb25DbGlja30+XG4gICAgICAgIHthY3Rpb25CdXR0b25UZXh0fVxuICAgICAgPC9CdXR0b24+KX1cbiAgICA8QnV0dG9uIHZhcmlhbnQ9e0JVVFRPTl9WQVJJQU5UUy5URVhUfSBjc3M9e2NzcyBgXG4gICAgICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xuICAgICAgYH0gc2l6ZT17YnV0dG9uU2l6ZSB8fCBCVVRUT05fU0laRVMuTUR9IG9uQ2xpY2s9e29uQ2FuY2VsQ2xpY2t9PlxuICAgICAge2NhbmNlbFRleHR9XG4gICAgPC9CdXR0b24+XG4gIDwvQnV0dG9uQ29udGFpbmVyPik7XG5leHBvcnQgY29uc3QgTW9kYWxDb250YWluZXIgPSBzdHlsZWQoJ2RpdicpIGBcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICBib3gtc2hhZG93OiAwIDhweCAyMXB4IDAgcmdiYSgwLCAwLCAwLCAwLjEpLCAwIDZweCAxMnB4IDAgcmdiYSgwLCAwLCAwLCAwLjEpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyh7IHRoZW1lIH0pID0+IHRoZW1lLmNvbG9ycy53aGl0ZX07XG4gIG1heC13aWR0aDogNzc2cHg7XG4gIHdpZHRoOiBhdXRvO1xuICBwYWRkaW5nOiAyNHB4O1xuICBwYWRkaW5nLWJvdHRvbTogMHB4O1xuICBtYXgtaGVpZ2h0OiA5NXZoO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogc3BhY2UtYmV0d2VlbjtcbiAgbWFyZ2luOiAwIDFyZW07XG5gO1xuY29uc3QgTW9kYWxUaXRsZSA9IHN0eWxlZCgnZGl2JykgYFxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuYDtcbmNvbnN0IE1vZGFsQm9keSA9IHN0eWxlZCgnZGl2JykgYFxuICBtYXJnaW4tdG9wOiAyNHB4O1xuICBtYXJnaW4tYm90dG9tOiAyNHB4O1xuYDtcbmNvbnN0IE1vZGFsRm9vdGVyID0gc3R5bGVkKCdkaXYnKSBgXG4gIHBhZGRpbmc6IDhweCAwcHg7XG4gIGJvcmRlci10b3A6IHNvbGlkIDFweCAkeyh7IHRoZW1lIH0pID0+IHRoZW1lLmNvbG9ycy5ncmV5XzJ9O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuYDtcbmNvbnN0IEJ1dHRvbkNvbnRhaW5lciA9IHN0eWxlZCgnZGl2JykgYFxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuYDtcbmNvbnN0IE1vZGFsT3ZlcmxheSA9IHN0eWxlZCgnZGl2JykgYFxuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgYmFja2dyb3VuZDogJHsoeyB0aGVtZSB9KSA9PiBDb2xvcih0aGVtZS5jb2xvcnMucHJpbWFyeV9kYXJrKS5hbHBoYSgwLjgpLmhzbCgpLnN0cmluZygpfTtcbmA7XG4vKipcbiAqIENhbiB1c2UgPE1vZGFsLm92ZXJsYXkgLz4gZm9yIHRoZSBvdmVybGF5XG4gKi9cbmNvbnN0IE1vZGFsQ29tcG9uZW50ID0gKHsgdGl0bGUgPSAnQWRkIFVzZXJzJywgdGl0bGVJY29uQ29uZmlnID0ge1xuICAgIG5hbWU6IG51bGwsXG4gICAgZmlsbDogbnVsbCxcbn0sIGJ1dHRvblNpemUgPSBCVVRUT05fU0laRVMuTUQsIGFjdGlvbkJ1dHRvbklkLCBhY3Rpb25CdXR0b25UZXh0ID0gJ0FwcGx5JywgYWN0aW9uVmlzaWJsZSA9IHRydWUsIGNhbmNlbFRleHQgPSAnQ2FuY2VsJywgb25BY3Rpb25DbGljayA9ICgpID0+IHsgfSwgb25DYW5jZWxDbGljayA9ICgpID0+IHsgfSwgb25DbG9zZUNsaWNrID0gKCkgPT4geyB9LCBhY3Rpb25EaXNhYmxlZCA9IGZhbHNlLCBjaGlsZHJlbiwgQ29udGFpbmVyRWwsIEZvb3RlckVsLCB9KSA9PiB7XG4gICAgY29uc3QgQ29udGFpbmVyID0gQ29udGFpbmVyRWwgPyBDb250YWluZXJFbCA6IE1vZGFsQ29udGFpbmVyO1xuICAgIGNvbnN0IEZvb3RlciA9IEZvb3RlckVsID8gRm9vdGVyRWwgOiBEZWZhdWx0Rm9vdGVyO1xuICAgIHJldHVybiAoPENvbnRhaW5lcj5cbiAgICAgIDxkaXYgY3NzPXtjc3MgYFxuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgICAgICBgfT5cbiAgICAgICAgPE1vZGFsVGl0bGU+XG4gICAgICAgICAge3RpdGxlSWNvbkNvbmZpZy5uYW1lICYmICg8ZGl2IGNzcz17Y3NzIGBcbiAgICAgICAgICAgICAgICBmbGV4OiAxO1xuICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDEwcHg7XG4gICAgICAgICAgICAgICAgcGFkZGluZy10b3A6IDNweDtcbiAgICAgICAgICAgICAgYH0+XG4gICAgICAgICAgICAgIDxJY29uIG5hbWU9e3RpdGxlSWNvbkNvbmZpZy5uYW1lfSB3aWR0aD1cIjIwcHhcIiBoZWlnaHQ9XCIyMHB4XCIgZmlsbD17dGl0bGVJY29uQ29uZmlnLmZpbGx9Lz5cbiAgICAgICAgICAgIDwvZGl2Pil9XG4gICAgICAgICAgPFR5cG9ncmFwaHkgY3NzPXtjc3MgYFxuICAgICAgICAgICAgICBtYXJnaW46IDBweDtcbiAgICAgICAgICAgIGB9IHZhcmlhbnQ9XCJzdWJ0aXRsZVwiPlxuICAgICAgICAgICAge3RpdGxlfVxuICAgICAgICAgIDwvVHlwb2dyYXBoeT5cbiAgICAgICAgPC9Nb2RhbFRpdGxlPlxuICAgICAgICA8Rm9jdXNXcmFwcGVyIG9uQ2xpY2s9e29uQ2xvc2VDbGlja30+XG4gICAgICAgICAgPEljb24gbmFtZT1cInRpbWVzXCIgZmlsbD1cInByaW1hcnlfMVwiIHdpZHRoPVwiMTNweFwiIGhlaWdodD1cIjEzcHhcIi8+XG4gICAgICAgIDwvRm9jdXNXcmFwcGVyPlxuICAgICAgPC9kaXY+XG5cbiAgICAgIDxkaXYgY3NzPXtjc3MgYFxuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgb3ZlcmZsb3cteTogYXV0bztcbiAgICAgICAgYH0+XG4gICAgICAgIDxkaXYgY3NzPXtjc3MgYFxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgYH0+XG4gICAgICAgICAgPE1vZGFsQm9keT5cbiAgICAgICAgICAgIDxUeXBvZ3JhcGh5IHZhcmlhbnQ9XCJwYXJhZ3JhcGhcIiBjb21wb25lbnQ9XCJkaXZcIj5cbiAgICAgICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICAgICAgPC9UeXBvZ3JhcGh5PlxuICAgICAgICAgIDwvTW9kYWxCb2R5PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICAgPE1vZGFsRm9vdGVyPlxuICAgICAgICA8Rm9vdGVyIGFjdGlvblZpc2libGU9e2FjdGlvblZpc2libGV9IGFjdGlvbkJ1dHRvbklkPXthY3Rpb25CdXR0b25JZH0gYWN0aW9uRGlzYWJsZWQ9e2FjdGlvbkRpc2FibGVkfSBvbkFjdGlvbkNsaWNrPXtvbkFjdGlvbkNsaWNrfSBhY3Rpb25CdXR0b25UZXh0PXthY3Rpb25CdXR0b25UZXh0fSBidXR0b25TaXplPXtidXR0b25TaXplfSBvbkNhbmNlbENsaWNrPXtvbkNhbmNlbENsaWNrfSBjYW5jZWxUZXh0PXtjYW5jZWxUZXh0fS8+XG4gICAgICA8L01vZGFsRm9vdGVyPlxuICAgIDwvQ29udGFpbmVyPik7XG59O1xuY29uc3QgT3ZlcmxheSA9IChwcm9wcykgPT4gPE1vZGFsT3ZlcmxheSB7Li4ucHJvcHN9Lz47XG5jb25zdCBNb2RhbCA9ICgoKSA9PiB7XG4gICAgY29uc3Qgb3V0cHV0ID0gTW9kYWxDb21wb25lbnQ7XG4gICAgb3V0cHV0Lk92ZXJsYXkgPSBPdmVybGF5O1xuICAgIHJldHVybiBvdXRwdXQ7XG59KSgpO1xuZXhwb3J0IGRlZmF1bHQgTW9kYWw7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qc3gubWFwIl19 */'),
);
/**
 * Can use <Modal.overlay /> for the overlay
 */

var _ref2 =
  process.env.NODE_ENV === 'production'
    ? {
        name: 'ug5gs2-Uikit-ModalComponent',
        styles:
          'display:flex;flex-direction:row;justify-content:space-between;align-items:center;margin-bottom:10px;;label:Uikit-ModalComponent;',
      }
    : {
        name: 'ug5gs2-Uikit-ModalComponent',
        styles:
          'display:flex;flex-direction:row;justify-content:space-between;align-items:center;margin-bottom:10px;;label:Uikit-ModalComponent;',
        map: '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEwRm9CIiwiZmlsZSI6ImluZGV4LmpzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgKGMpIDIwMjAgVGhlIE9udGFyaW8gSW5zdGl0dXRlIGZvciBDYW5jZXIgUmVzZWFyY2guIEFsbCByaWdodHMgcmVzZXJ2ZWRcbiAqXG4gKiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2ZcbiAqIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgdjMuMC4gWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGVcbiAqIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS5cbiAqICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4gKlxuICogVEhJUyBTT0ZUV0FSRSBJUyBQUk9WSURFRCBCWSBUSEUgQ09QWVJJR0hUIEhPTERFUlMgQU5EIENPTlRSSUJVVE9SUyBcIkFTIElTXCIgQU5EIEFOWVxuICogRVhQUkVTUyBPUiBJTVBMSUVEIFdBUlJBTlRJRVMsIElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEIFRPLCBUSEUgSU1QTElFRCBXQVJSQU5USUVTXG4gKiBPRiBNRVJDSEFOVEFCSUxJVFkgQU5EIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFSRSBESVNDTEFJTUVELiBJTiBOTyBFVkVOVFxuICogU0hBTEwgVEhFIENPUFlSSUdIVCBIT0xERVIgT1IgQ09OVFJJQlVUT1JTIEJFIExJQUJMRSBGT1IgQU5ZIERJUkVDVCwgSU5ESVJFQ1QsXG4gKiBJTkNJREVOVEFMLCBTUEVDSUFMLCBFWEVNUExBUlksIE9SIENPTlNFUVVFTlRJQUwgREFNQUdFUyAoSU5DTFVESU5HLCBCVVQgTk9UIExJTUlURURcbiAqIFRPLCBQUk9DVVJFTUVOVCBPRiBTVUJTVElUVVRFIEdPT0RTIE9SIFNFUlZJQ0VTOyBMT1NTIE9GIFVTRSwgREFUQSwgT1IgUFJPRklUUztcbiAqIE9SIEJVU0lORVNTIElOVEVSUlVQVElPTikgSE9XRVZFUiBDQVVTRUQgQU5EIE9OIEFOWSBUSEVPUlkgT0YgTElBQklMSVRZLCBXSEVUSEVSXG4gKiBJTiBDT05UUkFDVCwgU1RSSUNUIExJQUJJTElUWSwgT1IgVE9SVCAoSU5DTFVESU5HIE5FR0xJR0VOQ0UgT1IgT1RIRVJXSVNFKSBBUklTSU5HIElOXG4gKiBBTlkgV0FZIE9VVCBPRiBUSEUgVVNFIE9GIFRISVMgU09GVFdBUkUsIEVWRU4gSUYgQURWSVNFRCBPRiBUSEUgUE9TU0lCSUxJVFkgT0YgU1VDSCBEQU1BR0UuXG4gKi9cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgQ29sb3IgZnJvbSAnY29sb3InO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgVHlwb2dyYXBoeSBmcm9tICcuLi9UeXBvZ3JhcGh5JztcbmltcG9ydCBCdXR0b24gZnJvbSAnLi4vQnV0dG9uJztcbmltcG9ydCBJY29uIGZyb20gJy4uL0ljb24nO1xuaW1wb3J0IEZvY3VzV3JhcHBlciBmcm9tICcuLi9Gb2N1c1dyYXBwZXInO1xuaW1wb3J0IHsgQlVUVE9OX1NJWkVTLCBCVVRUT05fVkFSSUFOVFMgfSBmcm9tICd1aWtpdC9CdXR0b24vY29uc3RhbnRzJztcbmNvbnN0IERlZmF1bHRGb290ZXIgPSAoeyBhY3Rpb25WaXNpYmxlLCBhY3Rpb25CdXR0b25JZCwgYWN0aW9uRGlzYWJsZWQsIG9uQWN0aW9uQ2xpY2ssIGFjdGlvbkJ1dHRvblRleHQsIGJ1dHRvblNpemUsIG9uQ2FuY2VsQ2xpY2ssIGNhbmNlbFRleHQsIH0pID0+ICg8QnV0dG9uQ29udGFpbmVyPlxuICAgIHthY3Rpb25WaXNpYmxlICYmICg8QnV0dG9uIGlkPXthY3Rpb25CdXR0b25JZH0gc2l6ZT17YnV0dG9uU2l6ZSB8fCBCVVRUT05fU0laRVMuTUR9IGRpc2FibGVkPXthY3Rpb25EaXNhYmxlZH0gb25DbGljaz17b25BY3Rpb25DbGlja30+XG4gICAgICAgIHthY3Rpb25CdXR0b25UZXh0fVxuICAgICAgPC9CdXR0b24+KX1cbiAgICA8QnV0dG9uIHZhcmlhbnQ9e0JVVFRPTl9WQVJJQU5UUy5URVhUfSBjc3M9e2NzcyBgXG4gICAgICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xuICAgICAgYH0gc2l6ZT17YnV0dG9uU2l6ZSB8fCBCVVRUT05fU0laRVMuTUR9IG9uQ2xpY2s9e29uQ2FuY2VsQ2xpY2t9PlxuICAgICAge2NhbmNlbFRleHR9XG4gICAgPC9CdXR0b24+XG4gIDwvQnV0dG9uQ29udGFpbmVyPik7XG5leHBvcnQgY29uc3QgTW9kYWxDb250YWluZXIgPSBzdHlsZWQoJ2RpdicpIGBcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICBib3gtc2hhZG93OiAwIDhweCAyMXB4IDAgcmdiYSgwLCAwLCAwLCAwLjEpLCAwIDZweCAxMnB4IDAgcmdiYSgwLCAwLCAwLCAwLjEpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyh7IHRoZW1lIH0pID0+IHRoZW1lLmNvbG9ycy53aGl0ZX07XG4gIG1heC13aWR0aDogNzc2cHg7XG4gIHdpZHRoOiBhdXRvO1xuICBwYWRkaW5nOiAyNHB4O1xuICBwYWRkaW5nLWJvdHRvbTogMHB4O1xuICBtYXgtaGVpZ2h0OiA5NXZoO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogc3BhY2UtYmV0d2VlbjtcbiAgbWFyZ2luOiAwIDFyZW07XG5gO1xuY29uc3QgTW9kYWxUaXRsZSA9IHN0eWxlZCgnZGl2JykgYFxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuYDtcbmNvbnN0IE1vZGFsQm9keSA9IHN0eWxlZCgnZGl2JykgYFxuICBtYXJnaW4tdG9wOiAyNHB4O1xuICBtYXJnaW4tYm90dG9tOiAyNHB4O1xuYDtcbmNvbnN0IE1vZGFsRm9vdGVyID0gc3R5bGVkKCdkaXYnKSBgXG4gIHBhZGRpbmc6IDhweCAwcHg7XG4gIGJvcmRlci10b3A6IHNvbGlkIDFweCAkeyh7IHRoZW1lIH0pID0+IHRoZW1lLmNvbG9ycy5ncmV5XzJ9O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuYDtcbmNvbnN0IEJ1dHRvbkNvbnRhaW5lciA9IHN0eWxlZCgnZGl2JykgYFxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuYDtcbmNvbnN0IE1vZGFsT3ZlcmxheSA9IHN0eWxlZCgnZGl2JykgYFxuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgYmFja2dyb3VuZDogJHsoeyB0aGVtZSB9KSA9PiBDb2xvcih0aGVtZS5jb2xvcnMucHJpbWFyeV9kYXJrKS5hbHBoYSgwLjgpLmhzbCgpLnN0cmluZygpfTtcbmA7XG4vKipcbiAqIENhbiB1c2UgPE1vZGFsLm92ZXJsYXkgLz4gZm9yIHRoZSBvdmVybGF5XG4gKi9cbmNvbnN0IE1vZGFsQ29tcG9uZW50ID0gKHsgdGl0bGUgPSAnQWRkIFVzZXJzJywgdGl0bGVJY29uQ29uZmlnID0ge1xuICAgIG5hbWU6IG51bGwsXG4gICAgZmlsbDogbnVsbCxcbn0sIGJ1dHRvblNpemUgPSBCVVRUT05fU0laRVMuTUQsIGFjdGlvbkJ1dHRvbklkLCBhY3Rpb25CdXR0b25UZXh0ID0gJ0FwcGx5JywgYWN0aW9uVmlzaWJsZSA9IHRydWUsIGNhbmNlbFRleHQgPSAnQ2FuY2VsJywgb25BY3Rpb25DbGljayA9ICgpID0+IHsgfSwgb25DYW5jZWxDbGljayA9ICgpID0+IHsgfSwgb25DbG9zZUNsaWNrID0gKCkgPT4geyB9LCBhY3Rpb25EaXNhYmxlZCA9IGZhbHNlLCBjaGlsZHJlbiwgQ29udGFpbmVyRWwsIEZvb3RlckVsLCB9KSA9PiB7XG4gICAgY29uc3QgQ29udGFpbmVyID0gQ29udGFpbmVyRWwgPyBDb250YWluZXJFbCA6IE1vZGFsQ29udGFpbmVyO1xuICAgIGNvbnN0IEZvb3RlciA9IEZvb3RlckVsID8gRm9vdGVyRWwgOiBEZWZhdWx0Rm9vdGVyO1xuICAgIHJldHVybiAoPENvbnRhaW5lcj5cbiAgICAgIDxkaXYgY3NzPXtjc3MgYFxuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgICAgICBgfT5cbiAgICAgICAgPE1vZGFsVGl0bGU+XG4gICAgICAgICAge3RpdGxlSWNvbkNvbmZpZy5uYW1lICYmICg8ZGl2IGNzcz17Y3NzIGBcbiAgICAgICAgICAgICAgICBmbGV4OiAxO1xuICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDEwcHg7XG4gICAgICAgICAgICAgICAgcGFkZGluZy10b3A6IDNweDtcbiAgICAgICAgICAgICAgYH0+XG4gICAgICAgICAgICAgIDxJY29uIG5hbWU9e3RpdGxlSWNvbkNvbmZpZy5uYW1lfSB3aWR0aD1cIjIwcHhcIiBoZWlnaHQ9XCIyMHB4XCIgZmlsbD17dGl0bGVJY29uQ29uZmlnLmZpbGx9Lz5cbiAgICAgICAgICAgIDwvZGl2Pil9XG4gICAgICAgICAgPFR5cG9ncmFwaHkgY3NzPXtjc3MgYFxuICAgICAgICAgICAgICBtYXJnaW46IDBweDtcbiAgICAgICAgICAgIGB9IHZhcmlhbnQ9XCJzdWJ0aXRsZVwiPlxuICAgICAgICAgICAge3RpdGxlfVxuICAgICAgICAgIDwvVHlwb2dyYXBoeT5cbiAgICAgICAgPC9Nb2RhbFRpdGxlPlxuICAgICAgICA8Rm9jdXNXcmFwcGVyIG9uQ2xpY2s9e29uQ2xvc2VDbGlja30+XG4gICAgICAgICAgPEljb24gbmFtZT1cInRpbWVzXCIgZmlsbD1cInByaW1hcnlfMVwiIHdpZHRoPVwiMTNweFwiIGhlaWdodD1cIjEzcHhcIi8+XG4gICAgICAgIDwvRm9jdXNXcmFwcGVyPlxuICAgICAgPC9kaXY+XG5cbiAgICAgIDxkaXYgY3NzPXtjc3MgYFxuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgb3ZlcmZsb3cteTogYXV0bztcbiAgICAgICAgYH0+XG4gICAgICAgIDxkaXYgY3NzPXtjc3MgYFxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgYH0+XG4gICAgICAgICAgPE1vZGFsQm9keT5cbiAgICAgICAgICAgIDxUeXBvZ3JhcGh5IHZhcmlhbnQ9XCJwYXJhZ3JhcGhcIiBjb21wb25lbnQ9XCJkaXZcIj5cbiAgICAgICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICAgICAgPC9UeXBvZ3JhcGh5PlxuICAgICAgICAgIDwvTW9kYWxCb2R5PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICAgPE1vZGFsRm9vdGVyPlxuICAgICAgICA8Rm9vdGVyIGFjdGlvblZpc2libGU9e2FjdGlvblZpc2libGV9IGFjdGlvbkJ1dHRvbklkPXthY3Rpb25CdXR0b25JZH0gYWN0aW9uRGlzYWJsZWQ9e2FjdGlvbkRpc2FibGVkfSBvbkFjdGlvbkNsaWNrPXtvbkFjdGlvbkNsaWNrfSBhY3Rpb25CdXR0b25UZXh0PXthY3Rpb25CdXR0b25UZXh0fSBidXR0b25TaXplPXtidXR0b25TaXplfSBvbkNhbmNlbENsaWNrPXtvbkNhbmNlbENsaWNrfSBjYW5jZWxUZXh0PXtjYW5jZWxUZXh0fS8+XG4gICAgICA8L01vZGFsRm9vdGVyPlxuICAgIDwvQ29udGFpbmVyPik7XG59O1xuY29uc3QgT3ZlcmxheSA9IChwcm9wcykgPT4gPE1vZGFsT3ZlcmxheSB7Li4ucHJvcHN9Lz47XG5jb25zdCBNb2RhbCA9ICgoKSA9PiB7XG4gICAgY29uc3Qgb3V0cHV0ID0gTW9kYWxDb21wb25lbnQ7XG4gICAgb3V0cHV0Lk92ZXJsYXkgPSBPdmVybGF5O1xuICAgIHJldHVybiBvdXRwdXQ7XG59KSgpO1xuZXhwb3J0IGRlZmF1bHQgTW9kYWw7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qc3gubWFwIl19 */',
        toString: _EMOTION_STRINGIFIED_CSS_ERROR__,
      };

var _ref3 =
  process.env.NODE_ENV === 'production'
    ? {
        name: '1vwvjhe-Uikit-ModalComponent',
        styles: 'flex:1;padding-right:10px;padding-top:3px;;label:Uikit-ModalComponent;',
      }
    : {
        name: '1vwvjhe-Uikit-ModalComponent',
        styles: 'flex:1;padding-right:10px;padding-top:3px;;label:Uikit-ModalComponent;',
        map: '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFrR2tEIiwiZmlsZSI6ImluZGV4LmpzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgKGMpIDIwMjAgVGhlIE9udGFyaW8gSW5zdGl0dXRlIGZvciBDYW5jZXIgUmVzZWFyY2guIEFsbCByaWdodHMgcmVzZXJ2ZWRcbiAqXG4gKiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2ZcbiAqIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgdjMuMC4gWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGVcbiAqIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS5cbiAqICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4gKlxuICogVEhJUyBTT0ZUV0FSRSBJUyBQUk9WSURFRCBCWSBUSEUgQ09QWVJJR0hUIEhPTERFUlMgQU5EIENPTlRSSUJVVE9SUyBcIkFTIElTXCIgQU5EIEFOWVxuICogRVhQUkVTUyBPUiBJTVBMSUVEIFdBUlJBTlRJRVMsIElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEIFRPLCBUSEUgSU1QTElFRCBXQVJSQU5USUVTXG4gKiBPRiBNRVJDSEFOVEFCSUxJVFkgQU5EIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFSRSBESVNDTEFJTUVELiBJTiBOTyBFVkVOVFxuICogU0hBTEwgVEhFIENPUFlSSUdIVCBIT0xERVIgT1IgQ09OVFJJQlVUT1JTIEJFIExJQUJMRSBGT1IgQU5ZIERJUkVDVCwgSU5ESVJFQ1QsXG4gKiBJTkNJREVOVEFMLCBTUEVDSUFMLCBFWEVNUExBUlksIE9SIENPTlNFUVVFTlRJQUwgREFNQUdFUyAoSU5DTFVESU5HLCBCVVQgTk9UIExJTUlURURcbiAqIFRPLCBQUk9DVVJFTUVOVCBPRiBTVUJTVElUVVRFIEdPT0RTIE9SIFNFUlZJQ0VTOyBMT1NTIE9GIFVTRSwgREFUQSwgT1IgUFJPRklUUztcbiAqIE9SIEJVU0lORVNTIElOVEVSUlVQVElPTikgSE9XRVZFUiBDQVVTRUQgQU5EIE9OIEFOWSBUSEVPUlkgT0YgTElBQklMSVRZLCBXSEVUSEVSXG4gKiBJTiBDT05UUkFDVCwgU1RSSUNUIExJQUJJTElUWSwgT1IgVE9SVCAoSU5DTFVESU5HIE5FR0xJR0VOQ0UgT1IgT1RIRVJXSVNFKSBBUklTSU5HIElOXG4gKiBBTlkgV0FZIE9VVCBPRiBUSEUgVVNFIE9GIFRISVMgU09GVFdBUkUsIEVWRU4gSUYgQURWSVNFRCBPRiBUSEUgUE9TU0lCSUxJVFkgT0YgU1VDSCBEQU1BR0UuXG4gKi9cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgQ29sb3IgZnJvbSAnY29sb3InO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgVHlwb2dyYXBoeSBmcm9tICcuLi9UeXBvZ3JhcGh5JztcbmltcG9ydCBCdXR0b24gZnJvbSAnLi4vQnV0dG9uJztcbmltcG9ydCBJY29uIGZyb20gJy4uL0ljb24nO1xuaW1wb3J0IEZvY3VzV3JhcHBlciBmcm9tICcuLi9Gb2N1c1dyYXBwZXInO1xuaW1wb3J0IHsgQlVUVE9OX1NJWkVTLCBCVVRUT05fVkFSSUFOVFMgfSBmcm9tICd1aWtpdC9CdXR0b24vY29uc3RhbnRzJztcbmNvbnN0IERlZmF1bHRGb290ZXIgPSAoeyBhY3Rpb25WaXNpYmxlLCBhY3Rpb25CdXR0b25JZCwgYWN0aW9uRGlzYWJsZWQsIG9uQWN0aW9uQ2xpY2ssIGFjdGlvbkJ1dHRvblRleHQsIGJ1dHRvblNpemUsIG9uQ2FuY2VsQ2xpY2ssIGNhbmNlbFRleHQsIH0pID0+ICg8QnV0dG9uQ29udGFpbmVyPlxuICAgIHthY3Rpb25WaXNpYmxlICYmICg8QnV0dG9uIGlkPXthY3Rpb25CdXR0b25JZH0gc2l6ZT17YnV0dG9uU2l6ZSB8fCBCVVRUT05fU0laRVMuTUR9IGRpc2FibGVkPXthY3Rpb25EaXNhYmxlZH0gb25DbGljaz17b25BY3Rpb25DbGlja30+XG4gICAgICAgIHthY3Rpb25CdXR0b25UZXh0fVxuICAgICAgPC9CdXR0b24+KX1cbiAgICA8QnV0dG9uIHZhcmlhbnQ9e0JVVFRPTl9WQVJJQU5UUy5URVhUfSBjc3M9e2NzcyBgXG4gICAgICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xuICAgICAgYH0gc2l6ZT17YnV0dG9uU2l6ZSB8fCBCVVRUT05fU0laRVMuTUR9IG9uQ2xpY2s9e29uQ2FuY2VsQ2xpY2t9PlxuICAgICAge2NhbmNlbFRleHR9XG4gICAgPC9CdXR0b24+XG4gIDwvQnV0dG9uQ29udGFpbmVyPik7XG5leHBvcnQgY29uc3QgTW9kYWxDb250YWluZXIgPSBzdHlsZWQoJ2RpdicpIGBcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICBib3gtc2hhZG93OiAwIDhweCAyMXB4IDAgcmdiYSgwLCAwLCAwLCAwLjEpLCAwIDZweCAxMnB4IDAgcmdiYSgwLCAwLCAwLCAwLjEpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyh7IHRoZW1lIH0pID0+IHRoZW1lLmNvbG9ycy53aGl0ZX07XG4gIG1heC13aWR0aDogNzc2cHg7XG4gIHdpZHRoOiBhdXRvO1xuICBwYWRkaW5nOiAyNHB4O1xuICBwYWRkaW5nLWJvdHRvbTogMHB4O1xuICBtYXgtaGVpZ2h0OiA5NXZoO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogc3BhY2UtYmV0d2VlbjtcbiAgbWFyZ2luOiAwIDFyZW07XG5gO1xuY29uc3QgTW9kYWxUaXRsZSA9IHN0eWxlZCgnZGl2JykgYFxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuYDtcbmNvbnN0IE1vZGFsQm9keSA9IHN0eWxlZCgnZGl2JykgYFxuICBtYXJnaW4tdG9wOiAyNHB4O1xuICBtYXJnaW4tYm90dG9tOiAyNHB4O1xuYDtcbmNvbnN0IE1vZGFsRm9vdGVyID0gc3R5bGVkKCdkaXYnKSBgXG4gIHBhZGRpbmc6IDhweCAwcHg7XG4gIGJvcmRlci10b3A6IHNvbGlkIDFweCAkeyh7IHRoZW1lIH0pID0+IHRoZW1lLmNvbG9ycy5ncmV5XzJ9O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuYDtcbmNvbnN0IEJ1dHRvbkNvbnRhaW5lciA9IHN0eWxlZCgnZGl2JykgYFxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuYDtcbmNvbnN0IE1vZGFsT3ZlcmxheSA9IHN0eWxlZCgnZGl2JykgYFxuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgYmFja2dyb3VuZDogJHsoeyB0aGVtZSB9KSA9PiBDb2xvcih0aGVtZS5jb2xvcnMucHJpbWFyeV9kYXJrKS5hbHBoYSgwLjgpLmhzbCgpLnN0cmluZygpfTtcbmA7XG4vKipcbiAqIENhbiB1c2UgPE1vZGFsLm92ZXJsYXkgLz4gZm9yIHRoZSBvdmVybGF5XG4gKi9cbmNvbnN0IE1vZGFsQ29tcG9uZW50ID0gKHsgdGl0bGUgPSAnQWRkIFVzZXJzJywgdGl0bGVJY29uQ29uZmlnID0ge1xuICAgIG5hbWU6IG51bGwsXG4gICAgZmlsbDogbnVsbCxcbn0sIGJ1dHRvblNpemUgPSBCVVRUT05fU0laRVMuTUQsIGFjdGlvbkJ1dHRvbklkLCBhY3Rpb25CdXR0b25UZXh0ID0gJ0FwcGx5JywgYWN0aW9uVmlzaWJsZSA9IHRydWUsIGNhbmNlbFRleHQgPSAnQ2FuY2VsJywgb25BY3Rpb25DbGljayA9ICgpID0+IHsgfSwgb25DYW5jZWxDbGljayA9ICgpID0+IHsgfSwgb25DbG9zZUNsaWNrID0gKCkgPT4geyB9LCBhY3Rpb25EaXNhYmxlZCA9IGZhbHNlLCBjaGlsZHJlbiwgQ29udGFpbmVyRWwsIEZvb3RlckVsLCB9KSA9PiB7XG4gICAgY29uc3QgQ29udGFpbmVyID0gQ29udGFpbmVyRWwgPyBDb250YWluZXJFbCA6IE1vZGFsQ29udGFpbmVyO1xuICAgIGNvbnN0IEZvb3RlciA9IEZvb3RlckVsID8gRm9vdGVyRWwgOiBEZWZhdWx0Rm9vdGVyO1xuICAgIHJldHVybiAoPENvbnRhaW5lcj5cbiAgICAgIDxkaXYgY3NzPXtjc3MgYFxuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgICAgICBgfT5cbiAgICAgICAgPE1vZGFsVGl0bGU+XG4gICAgICAgICAge3RpdGxlSWNvbkNvbmZpZy5uYW1lICYmICg8ZGl2IGNzcz17Y3NzIGBcbiAgICAgICAgICAgICAgICBmbGV4OiAxO1xuICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDEwcHg7XG4gICAgICAgICAgICAgICAgcGFkZGluZy10b3A6IDNweDtcbiAgICAgICAgICAgICAgYH0+XG4gICAgICAgICAgICAgIDxJY29uIG5hbWU9e3RpdGxlSWNvbkNvbmZpZy5uYW1lfSB3aWR0aD1cIjIwcHhcIiBoZWlnaHQ9XCIyMHB4XCIgZmlsbD17dGl0bGVJY29uQ29uZmlnLmZpbGx9Lz5cbiAgICAgICAgICAgIDwvZGl2Pil9XG4gICAgICAgICAgPFR5cG9ncmFwaHkgY3NzPXtjc3MgYFxuICAgICAgICAgICAgICBtYXJnaW46IDBweDtcbiAgICAgICAgICAgIGB9IHZhcmlhbnQ9XCJzdWJ0aXRsZVwiPlxuICAgICAgICAgICAge3RpdGxlfVxuICAgICAgICAgIDwvVHlwb2dyYXBoeT5cbiAgICAgICAgPC9Nb2RhbFRpdGxlPlxuICAgICAgICA8Rm9jdXNXcmFwcGVyIG9uQ2xpY2s9e29uQ2xvc2VDbGlja30+XG4gICAgICAgICAgPEljb24gbmFtZT1cInRpbWVzXCIgZmlsbD1cInByaW1hcnlfMVwiIHdpZHRoPVwiMTNweFwiIGhlaWdodD1cIjEzcHhcIi8+XG4gICAgICAgIDwvRm9jdXNXcmFwcGVyPlxuICAgICAgPC9kaXY+XG5cbiAgICAgIDxkaXYgY3NzPXtjc3MgYFxuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgb3ZlcmZsb3cteTogYXV0bztcbiAgICAgICAgYH0+XG4gICAgICAgIDxkaXYgY3NzPXtjc3MgYFxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgYH0+XG4gICAgICAgICAgPE1vZGFsQm9keT5cbiAgICAgICAgICAgIDxUeXBvZ3JhcGh5IHZhcmlhbnQ9XCJwYXJhZ3JhcGhcIiBjb21wb25lbnQ9XCJkaXZcIj5cbiAgICAgICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICAgICAgPC9UeXBvZ3JhcGh5PlxuICAgICAgICAgIDwvTW9kYWxCb2R5PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICAgPE1vZGFsRm9vdGVyPlxuICAgICAgICA8Rm9vdGVyIGFjdGlvblZpc2libGU9e2FjdGlvblZpc2libGV9IGFjdGlvbkJ1dHRvbklkPXthY3Rpb25CdXR0b25JZH0gYWN0aW9uRGlzYWJsZWQ9e2FjdGlvbkRpc2FibGVkfSBvbkFjdGlvbkNsaWNrPXtvbkFjdGlvbkNsaWNrfSBhY3Rpb25CdXR0b25UZXh0PXthY3Rpb25CdXR0b25UZXh0fSBidXR0b25TaXplPXtidXR0b25TaXplfSBvbkNhbmNlbENsaWNrPXtvbkNhbmNlbENsaWNrfSBjYW5jZWxUZXh0PXtjYW5jZWxUZXh0fS8+XG4gICAgICA8L01vZGFsRm9vdGVyPlxuICAgIDwvQ29udGFpbmVyPik7XG59O1xuY29uc3QgT3ZlcmxheSA9IChwcm9wcykgPT4gPE1vZGFsT3ZlcmxheSB7Li4ucHJvcHN9Lz47XG5jb25zdCBNb2RhbCA9ICgoKSA9PiB7XG4gICAgY29uc3Qgb3V0cHV0ID0gTW9kYWxDb21wb25lbnQ7XG4gICAgb3V0cHV0Lk92ZXJsYXkgPSBPdmVybGF5O1xuICAgIHJldHVybiBvdXRwdXQ7XG59KSgpO1xuZXhwb3J0IGRlZmF1bHQgTW9kYWw7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qc3gubWFwIl19 */',
        toString: _EMOTION_STRINGIFIED_CSS_ERROR__,
      };

var _ref4 =
  process.env.NODE_ENV === 'production'
    ? {
        name: '15nrcft-Uikit-ModalComponent',
        styles: 'margin:0px;;label:Uikit-ModalComponent;',
      }
    : {
        name: '15nrcft-Uikit-ModalComponent',
        styles: 'margin:0px;;label:Uikit-ModalComponent;',
        map: '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF5RytCIiwiZmlsZSI6ImluZGV4LmpzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgKGMpIDIwMjAgVGhlIE9udGFyaW8gSW5zdGl0dXRlIGZvciBDYW5jZXIgUmVzZWFyY2guIEFsbCByaWdodHMgcmVzZXJ2ZWRcbiAqXG4gKiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2ZcbiAqIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgdjMuMC4gWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGVcbiAqIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS5cbiAqICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4gKlxuICogVEhJUyBTT0ZUV0FSRSBJUyBQUk9WSURFRCBCWSBUSEUgQ09QWVJJR0hUIEhPTERFUlMgQU5EIENPTlRSSUJVVE9SUyBcIkFTIElTXCIgQU5EIEFOWVxuICogRVhQUkVTUyBPUiBJTVBMSUVEIFdBUlJBTlRJRVMsIElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEIFRPLCBUSEUgSU1QTElFRCBXQVJSQU5USUVTXG4gKiBPRiBNRVJDSEFOVEFCSUxJVFkgQU5EIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFSRSBESVNDTEFJTUVELiBJTiBOTyBFVkVOVFxuICogU0hBTEwgVEhFIENPUFlSSUdIVCBIT0xERVIgT1IgQ09OVFJJQlVUT1JTIEJFIExJQUJMRSBGT1IgQU5ZIERJUkVDVCwgSU5ESVJFQ1QsXG4gKiBJTkNJREVOVEFMLCBTUEVDSUFMLCBFWEVNUExBUlksIE9SIENPTlNFUVVFTlRJQUwgREFNQUdFUyAoSU5DTFVESU5HLCBCVVQgTk9UIExJTUlURURcbiAqIFRPLCBQUk9DVVJFTUVOVCBPRiBTVUJTVElUVVRFIEdPT0RTIE9SIFNFUlZJQ0VTOyBMT1NTIE9GIFVTRSwgREFUQSwgT1IgUFJPRklUUztcbiAqIE9SIEJVU0lORVNTIElOVEVSUlVQVElPTikgSE9XRVZFUiBDQVVTRUQgQU5EIE9OIEFOWSBUSEVPUlkgT0YgTElBQklMSVRZLCBXSEVUSEVSXG4gKiBJTiBDT05UUkFDVCwgU1RSSUNUIExJQUJJTElUWSwgT1IgVE9SVCAoSU5DTFVESU5HIE5FR0xJR0VOQ0UgT1IgT1RIRVJXSVNFKSBBUklTSU5HIElOXG4gKiBBTlkgV0FZIE9VVCBPRiBUSEUgVVNFIE9GIFRISVMgU09GVFdBUkUsIEVWRU4gSUYgQURWSVNFRCBPRiBUSEUgUE9TU0lCSUxJVFkgT0YgU1VDSCBEQU1BR0UuXG4gKi9cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgQ29sb3IgZnJvbSAnY29sb3InO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgVHlwb2dyYXBoeSBmcm9tICcuLi9UeXBvZ3JhcGh5JztcbmltcG9ydCBCdXR0b24gZnJvbSAnLi4vQnV0dG9uJztcbmltcG9ydCBJY29uIGZyb20gJy4uL0ljb24nO1xuaW1wb3J0IEZvY3VzV3JhcHBlciBmcm9tICcuLi9Gb2N1c1dyYXBwZXInO1xuaW1wb3J0IHsgQlVUVE9OX1NJWkVTLCBCVVRUT05fVkFSSUFOVFMgfSBmcm9tICd1aWtpdC9CdXR0b24vY29uc3RhbnRzJztcbmNvbnN0IERlZmF1bHRGb290ZXIgPSAoeyBhY3Rpb25WaXNpYmxlLCBhY3Rpb25CdXR0b25JZCwgYWN0aW9uRGlzYWJsZWQsIG9uQWN0aW9uQ2xpY2ssIGFjdGlvbkJ1dHRvblRleHQsIGJ1dHRvblNpemUsIG9uQ2FuY2VsQ2xpY2ssIGNhbmNlbFRleHQsIH0pID0+ICg8QnV0dG9uQ29udGFpbmVyPlxuICAgIHthY3Rpb25WaXNpYmxlICYmICg8QnV0dG9uIGlkPXthY3Rpb25CdXR0b25JZH0gc2l6ZT17YnV0dG9uU2l6ZSB8fCBCVVRUT05fU0laRVMuTUR9IGRpc2FibGVkPXthY3Rpb25EaXNhYmxlZH0gb25DbGljaz17b25BY3Rpb25DbGlja30+XG4gICAgICAgIHthY3Rpb25CdXR0b25UZXh0fVxuICAgICAgPC9CdXR0b24+KX1cbiAgICA8QnV0dG9uIHZhcmlhbnQ9e0JVVFRPTl9WQVJJQU5UUy5URVhUfSBjc3M9e2NzcyBgXG4gICAgICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xuICAgICAgYH0gc2l6ZT17YnV0dG9uU2l6ZSB8fCBCVVRUT05fU0laRVMuTUR9IG9uQ2xpY2s9e29uQ2FuY2VsQ2xpY2t9PlxuICAgICAge2NhbmNlbFRleHR9XG4gICAgPC9CdXR0b24+XG4gIDwvQnV0dG9uQ29udGFpbmVyPik7XG5leHBvcnQgY29uc3QgTW9kYWxDb250YWluZXIgPSBzdHlsZWQoJ2RpdicpIGBcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICBib3gtc2hhZG93OiAwIDhweCAyMXB4IDAgcmdiYSgwLCAwLCAwLCAwLjEpLCAwIDZweCAxMnB4IDAgcmdiYSgwLCAwLCAwLCAwLjEpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyh7IHRoZW1lIH0pID0+IHRoZW1lLmNvbG9ycy53aGl0ZX07XG4gIG1heC13aWR0aDogNzc2cHg7XG4gIHdpZHRoOiBhdXRvO1xuICBwYWRkaW5nOiAyNHB4O1xuICBwYWRkaW5nLWJvdHRvbTogMHB4O1xuICBtYXgtaGVpZ2h0OiA5NXZoO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogc3BhY2UtYmV0d2VlbjtcbiAgbWFyZ2luOiAwIDFyZW07XG5gO1xuY29uc3QgTW9kYWxUaXRsZSA9IHN0eWxlZCgnZGl2JykgYFxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuYDtcbmNvbnN0IE1vZGFsQm9keSA9IHN0eWxlZCgnZGl2JykgYFxuICBtYXJnaW4tdG9wOiAyNHB4O1xuICBtYXJnaW4tYm90dG9tOiAyNHB4O1xuYDtcbmNvbnN0IE1vZGFsRm9vdGVyID0gc3R5bGVkKCdkaXYnKSBgXG4gIHBhZGRpbmc6IDhweCAwcHg7XG4gIGJvcmRlci10b3A6IHNvbGlkIDFweCAkeyh7IHRoZW1lIH0pID0+IHRoZW1lLmNvbG9ycy5ncmV5XzJ9O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuYDtcbmNvbnN0IEJ1dHRvbkNvbnRhaW5lciA9IHN0eWxlZCgnZGl2JykgYFxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuYDtcbmNvbnN0IE1vZGFsT3ZlcmxheSA9IHN0eWxlZCgnZGl2JykgYFxuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgYmFja2dyb3VuZDogJHsoeyB0aGVtZSB9KSA9PiBDb2xvcih0aGVtZS5jb2xvcnMucHJpbWFyeV9kYXJrKS5hbHBoYSgwLjgpLmhzbCgpLnN0cmluZygpfTtcbmA7XG4vKipcbiAqIENhbiB1c2UgPE1vZGFsLm92ZXJsYXkgLz4gZm9yIHRoZSBvdmVybGF5XG4gKi9cbmNvbnN0IE1vZGFsQ29tcG9uZW50ID0gKHsgdGl0bGUgPSAnQWRkIFVzZXJzJywgdGl0bGVJY29uQ29uZmlnID0ge1xuICAgIG5hbWU6IG51bGwsXG4gICAgZmlsbDogbnVsbCxcbn0sIGJ1dHRvblNpemUgPSBCVVRUT05fU0laRVMuTUQsIGFjdGlvbkJ1dHRvbklkLCBhY3Rpb25CdXR0b25UZXh0ID0gJ0FwcGx5JywgYWN0aW9uVmlzaWJsZSA9IHRydWUsIGNhbmNlbFRleHQgPSAnQ2FuY2VsJywgb25BY3Rpb25DbGljayA9ICgpID0+IHsgfSwgb25DYW5jZWxDbGljayA9ICgpID0+IHsgfSwgb25DbG9zZUNsaWNrID0gKCkgPT4geyB9LCBhY3Rpb25EaXNhYmxlZCA9IGZhbHNlLCBjaGlsZHJlbiwgQ29udGFpbmVyRWwsIEZvb3RlckVsLCB9KSA9PiB7XG4gICAgY29uc3QgQ29udGFpbmVyID0gQ29udGFpbmVyRWwgPyBDb250YWluZXJFbCA6IE1vZGFsQ29udGFpbmVyO1xuICAgIGNvbnN0IEZvb3RlciA9IEZvb3RlckVsID8gRm9vdGVyRWwgOiBEZWZhdWx0Rm9vdGVyO1xuICAgIHJldHVybiAoPENvbnRhaW5lcj5cbiAgICAgIDxkaXYgY3NzPXtjc3MgYFxuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgICAgICBgfT5cbiAgICAgICAgPE1vZGFsVGl0bGU+XG4gICAgICAgICAge3RpdGxlSWNvbkNvbmZpZy5uYW1lICYmICg8ZGl2IGNzcz17Y3NzIGBcbiAgICAgICAgICAgICAgICBmbGV4OiAxO1xuICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDEwcHg7XG4gICAgICAgICAgICAgICAgcGFkZGluZy10b3A6IDNweDtcbiAgICAgICAgICAgICAgYH0+XG4gICAgICAgICAgICAgIDxJY29uIG5hbWU9e3RpdGxlSWNvbkNvbmZpZy5uYW1lfSB3aWR0aD1cIjIwcHhcIiBoZWlnaHQ9XCIyMHB4XCIgZmlsbD17dGl0bGVJY29uQ29uZmlnLmZpbGx9Lz5cbiAgICAgICAgICAgIDwvZGl2Pil9XG4gICAgICAgICAgPFR5cG9ncmFwaHkgY3NzPXtjc3MgYFxuICAgICAgICAgICAgICBtYXJnaW46IDBweDtcbiAgICAgICAgICAgIGB9IHZhcmlhbnQ9XCJzdWJ0aXRsZVwiPlxuICAgICAgICAgICAge3RpdGxlfVxuICAgICAgICAgIDwvVHlwb2dyYXBoeT5cbiAgICAgICAgPC9Nb2RhbFRpdGxlPlxuICAgICAgICA8Rm9jdXNXcmFwcGVyIG9uQ2xpY2s9e29uQ2xvc2VDbGlja30+XG4gICAgICAgICAgPEljb24gbmFtZT1cInRpbWVzXCIgZmlsbD1cInByaW1hcnlfMVwiIHdpZHRoPVwiMTNweFwiIGhlaWdodD1cIjEzcHhcIi8+XG4gICAgICAgIDwvRm9jdXNXcmFwcGVyPlxuICAgICAgPC9kaXY+XG5cbiAgICAgIDxkaXYgY3NzPXtjc3MgYFxuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgb3ZlcmZsb3cteTogYXV0bztcbiAgICAgICAgYH0+XG4gICAgICAgIDxkaXYgY3NzPXtjc3MgYFxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgYH0+XG4gICAgICAgICAgPE1vZGFsQm9keT5cbiAgICAgICAgICAgIDxUeXBvZ3JhcGh5IHZhcmlhbnQ9XCJwYXJhZ3JhcGhcIiBjb21wb25lbnQ9XCJkaXZcIj5cbiAgICAgICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICAgICAgPC9UeXBvZ3JhcGh5PlxuICAgICAgICAgIDwvTW9kYWxCb2R5PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICAgPE1vZGFsRm9vdGVyPlxuICAgICAgICA8Rm9vdGVyIGFjdGlvblZpc2libGU9e2FjdGlvblZpc2libGV9IGFjdGlvbkJ1dHRvbklkPXthY3Rpb25CdXR0b25JZH0gYWN0aW9uRGlzYWJsZWQ9e2FjdGlvbkRpc2FibGVkfSBvbkFjdGlvbkNsaWNrPXtvbkFjdGlvbkNsaWNrfSBhY3Rpb25CdXR0b25UZXh0PXthY3Rpb25CdXR0b25UZXh0fSBidXR0b25TaXplPXtidXR0b25TaXplfSBvbkNhbmNlbENsaWNrPXtvbkNhbmNlbENsaWNrfSBjYW5jZWxUZXh0PXtjYW5jZWxUZXh0fS8+XG4gICAgICA8L01vZGFsRm9vdGVyPlxuICAgIDwvQ29udGFpbmVyPik7XG59O1xuY29uc3QgT3ZlcmxheSA9IChwcm9wcykgPT4gPE1vZGFsT3ZlcmxheSB7Li4ucHJvcHN9Lz47XG5jb25zdCBNb2RhbCA9ICgoKSA9PiB7XG4gICAgY29uc3Qgb3V0cHV0ID0gTW9kYWxDb21wb25lbnQ7XG4gICAgb3V0cHV0Lk92ZXJsYXkgPSBPdmVybGF5O1xuICAgIHJldHVybiBvdXRwdXQ7XG59KSgpO1xuZXhwb3J0IGRlZmF1bHQgTW9kYWw7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qc3gubWFwIl19 */',
        toString: _EMOTION_STRINGIFIED_CSS_ERROR__,
      };

var _ref5 =
  process.env.NODE_ENV === 'production'
    ? {
        name: '13zfcwj-Uikit-ModalComponent',
        styles: 'display:flex;overflow-y:auto;;label:Uikit-ModalComponent;',
      }
    : {
        name: '13zfcwj-Uikit-ModalComponent',
        styles: 'display:flex;overflow-y:auto;;label:Uikit-ModalComponent;',
        map: '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFvSG9CIiwiZmlsZSI6ImluZGV4LmpzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgKGMpIDIwMjAgVGhlIE9udGFyaW8gSW5zdGl0dXRlIGZvciBDYW5jZXIgUmVzZWFyY2guIEFsbCByaWdodHMgcmVzZXJ2ZWRcbiAqXG4gKiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2ZcbiAqIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgdjMuMC4gWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGVcbiAqIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS5cbiAqICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4gKlxuICogVEhJUyBTT0ZUV0FSRSBJUyBQUk9WSURFRCBCWSBUSEUgQ09QWVJJR0hUIEhPTERFUlMgQU5EIENPTlRSSUJVVE9SUyBcIkFTIElTXCIgQU5EIEFOWVxuICogRVhQUkVTUyBPUiBJTVBMSUVEIFdBUlJBTlRJRVMsIElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEIFRPLCBUSEUgSU1QTElFRCBXQVJSQU5USUVTXG4gKiBPRiBNRVJDSEFOVEFCSUxJVFkgQU5EIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFSRSBESVNDTEFJTUVELiBJTiBOTyBFVkVOVFxuICogU0hBTEwgVEhFIENPUFlSSUdIVCBIT0xERVIgT1IgQ09OVFJJQlVUT1JTIEJFIExJQUJMRSBGT1IgQU5ZIERJUkVDVCwgSU5ESVJFQ1QsXG4gKiBJTkNJREVOVEFMLCBTUEVDSUFMLCBFWEVNUExBUlksIE9SIENPTlNFUVVFTlRJQUwgREFNQUdFUyAoSU5DTFVESU5HLCBCVVQgTk9UIExJTUlURURcbiAqIFRPLCBQUk9DVVJFTUVOVCBPRiBTVUJTVElUVVRFIEdPT0RTIE9SIFNFUlZJQ0VTOyBMT1NTIE9GIFVTRSwgREFUQSwgT1IgUFJPRklUUztcbiAqIE9SIEJVU0lORVNTIElOVEVSUlVQVElPTikgSE9XRVZFUiBDQVVTRUQgQU5EIE9OIEFOWSBUSEVPUlkgT0YgTElBQklMSVRZLCBXSEVUSEVSXG4gKiBJTiBDT05UUkFDVCwgU1RSSUNUIExJQUJJTElUWSwgT1IgVE9SVCAoSU5DTFVESU5HIE5FR0xJR0VOQ0UgT1IgT1RIRVJXSVNFKSBBUklTSU5HIElOXG4gKiBBTlkgV0FZIE9VVCBPRiBUSEUgVVNFIE9GIFRISVMgU09GVFdBUkUsIEVWRU4gSUYgQURWSVNFRCBPRiBUSEUgUE9TU0lCSUxJVFkgT0YgU1VDSCBEQU1BR0UuXG4gKi9cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgQ29sb3IgZnJvbSAnY29sb3InO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgVHlwb2dyYXBoeSBmcm9tICcuLi9UeXBvZ3JhcGh5JztcbmltcG9ydCBCdXR0b24gZnJvbSAnLi4vQnV0dG9uJztcbmltcG9ydCBJY29uIGZyb20gJy4uL0ljb24nO1xuaW1wb3J0IEZvY3VzV3JhcHBlciBmcm9tICcuLi9Gb2N1c1dyYXBwZXInO1xuaW1wb3J0IHsgQlVUVE9OX1NJWkVTLCBCVVRUT05fVkFSSUFOVFMgfSBmcm9tICd1aWtpdC9CdXR0b24vY29uc3RhbnRzJztcbmNvbnN0IERlZmF1bHRGb290ZXIgPSAoeyBhY3Rpb25WaXNpYmxlLCBhY3Rpb25CdXR0b25JZCwgYWN0aW9uRGlzYWJsZWQsIG9uQWN0aW9uQ2xpY2ssIGFjdGlvbkJ1dHRvblRleHQsIGJ1dHRvblNpemUsIG9uQ2FuY2VsQ2xpY2ssIGNhbmNlbFRleHQsIH0pID0+ICg8QnV0dG9uQ29udGFpbmVyPlxuICAgIHthY3Rpb25WaXNpYmxlICYmICg8QnV0dG9uIGlkPXthY3Rpb25CdXR0b25JZH0gc2l6ZT17YnV0dG9uU2l6ZSB8fCBCVVRUT05fU0laRVMuTUR9IGRpc2FibGVkPXthY3Rpb25EaXNhYmxlZH0gb25DbGljaz17b25BY3Rpb25DbGlja30+XG4gICAgICAgIHthY3Rpb25CdXR0b25UZXh0fVxuICAgICAgPC9CdXR0b24+KX1cbiAgICA8QnV0dG9uIHZhcmlhbnQ9e0JVVFRPTl9WQVJJQU5UUy5URVhUfSBjc3M9e2NzcyBgXG4gICAgICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xuICAgICAgYH0gc2l6ZT17YnV0dG9uU2l6ZSB8fCBCVVRUT05fU0laRVMuTUR9IG9uQ2xpY2s9e29uQ2FuY2VsQ2xpY2t9PlxuICAgICAge2NhbmNlbFRleHR9XG4gICAgPC9CdXR0b24+XG4gIDwvQnV0dG9uQ29udGFpbmVyPik7XG5leHBvcnQgY29uc3QgTW9kYWxDb250YWluZXIgPSBzdHlsZWQoJ2RpdicpIGBcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICBib3gtc2hhZG93OiAwIDhweCAyMXB4IDAgcmdiYSgwLCAwLCAwLCAwLjEpLCAwIDZweCAxMnB4IDAgcmdiYSgwLCAwLCAwLCAwLjEpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyh7IHRoZW1lIH0pID0+IHRoZW1lLmNvbG9ycy53aGl0ZX07XG4gIG1heC13aWR0aDogNzc2cHg7XG4gIHdpZHRoOiBhdXRvO1xuICBwYWRkaW5nOiAyNHB4O1xuICBwYWRkaW5nLWJvdHRvbTogMHB4O1xuICBtYXgtaGVpZ2h0OiA5NXZoO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogc3BhY2UtYmV0d2VlbjtcbiAgbWFyZ2luOiAwIDFyZW07XG5gO1xuY29uc3QgTW9kYWxUaXRsZSA9IHN0eWxlZCgnZGl2JykgYFxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuYDtcbmNvbnN0IE1vZGFsQm9keSA9IHN0eWxlZCgnZGl2JykgYFxuICBtYXJnaW4tdG9wOiAyNHB4O1xuICBtYXJnaW4tYm90dG9tOiAyNHB4O1xuYDtcbmNvbnN0IE1vZGFsRm9vdGVyID0gc3R5bGVkKCdkaXYnKSBgXG4gIHBhZGRpbmc6IDhweCAwcHg7XG4gIGJvcmRlci10b3A6IHNvbGlkIDFweCAkeyh7IHRoZW1lIH0pID0+IHRoZW1lLmNvbG9ycy5ncmV5XzJ9O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuYDtcbmNvbnN0IEJ1dHRvbkNvbnRhaW5lciA9IHN0eWxlZCgnZGl2JykgYFxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuYDtcbmNvbnN0IE1vZGFsT3ZlcmxheSA9IHN0eWxlZCgnZGl2JykgYFxuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgYmFja2dyb3VuZDogJHsoeyB0aGVtZSB9KSA9PiBDb2xvcih0aGVtZS5jb2xvcnMucHJpbWFyeV9kYXJrKS5hbHBoYSgwLjgpLmhzbCgpLnN0cmluZygpfTtcbmA7XG4vKipcbiAqIENhbiB1c2UgPE1vZGFsLm92ZXJsYXkgLz4gZm9yIHRoZSBvdmVybGF5XG4gKi9cbmNvbnN0IE1vZGFsQ29tcG9uZW50ID0gKHsgdGl0bGUgPSAnQWRkIFVzZXJzJywgdGl0bGVJY29uQ29uZmlnID0ge1xuICAgIG5hbWU6IG51bGwsXG4gICAgZmlsbDogbnVsbCxcbn0sIGJ1dHRvblNpemUgPSBCVVRUT05fU0laRVMuTUQsIGFjdGlvbkJ1dHRvbklkLCBhY3Rpb25CdXR0b25UZXh0ID0gJ0FwcGx5JywgYWN0aW9uVmlzaWJsZSA9IHRydWUsIGNhbmNlbFRleHQgPSAnQ2FuY2VsJywgb25BY3Rpb25DbGljayA9ICgpID0+IHsgfSwgb25DYW5jZWxDbGljayA9ICgpID0+IHsgfSwgb25DbG9zZUNsaWNrID0gKCkgPT4geyB9LCBhY3Rpb25EaXNhYmxlZCA9IGZhbHNlLCBjaGlsZHJlbiwgQ29udGFpbmVyRWwsIEZvb3RlckVsLCB9KSA9PiB7XG4gICAgY29uc3QgQ29udGFpbmVyID0gQ29udGFpbmVyRWwgPyBDb250YWluZXJFbCA6IE1vZGFsQ29udGFpbmVyO1xuICAgIGNvbnN0IEZvb3RlciA9IEZvb3RlckVsID8gRm9vdGVyRWwgOiBEZWZhdWx0Rm9vdGVyO1xuICAgIHJldHVybiAoPENvbnRhaW5lcj5cbiAgICAgIDxkaXYgY3NzPXtjc3MgYFxuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgICAgICBgfT5cbiAgICAgICAgPE1vZGFsVGl0bGU+XG4gICAgICAgICAge3RpdGxlSWNvbkNvbmZpZy5uYW1lICYmICg8ZGl2IGNzcz17Y3NzIGBcbiAgICAgICAgICAgICAgICBmbGV4OiAxO1xuICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDEwcHg7XG4gICAgICAgICAgICAgICAgcGFkZGluZy10b3A6IDNweDtcbiAgICAgICAgICAgICAgYH0+XG4gICAgICAgICAgICAgIDxJY29uIG5hbWU9e3RpdGxlSWNvbkNvbmZpZy5uYW1lfSB3aWR0aD1cIjIwcHhcIiBoZWlnaHQ9XCIyMHB4XCIgZmlsbD17dGl0bGVJY29uQ29uZmlnLmZpbGx9Lz5cbiAgICAgICAgICAgIDwvZGl2Pil9XG4gICAgICAgICAgPFR5cG9ncmFwaHkgY3NzPXtjc3MgYFxuICAgICAgICAgICAgICBtYXJnaW46IDBweDtcbiAgICAgICAgICAgIGB9IHZhcmlhbnQ9XCJzdWJ0aXRsZVwiPlxuICAgICAgICAgICAge3RpdGxlfVxuICAgICAgICAgIDwvVHlwb2dyYXBoeT5cbiAgICAgICAgPC9Nb2RhbFRpdGxlPlxuICAgICAgICA8Rm9jdXNXcmFwcGVyIG9uQ2xpY2s9e29uQ2xvc2VDbGlja30+XG4gICAgICAgICAgPEljb24gbmFtZT1cInRpbWVzXCIgZmlsbD1cInByaW1hcnlfMVwiIHdpZHRoPVwiMTNweFwiIGhlaWdodD1cIjEzcHhcIi8+XG4gICAgICAgIDwvRm9jdXNXcmFwcGVyPlxuICAgICAgPC9kaXY+XG5cbiAgICAgIDxkaXYgY3NzPXtjc3MgYFxuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgb3ZlcmZsb3cteTogYXV0bztcbiAgICAgICAgYH0+XG4gICAgICAgIDxkaXYgY3NzPXtjc3MgYFxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgYH0+XG4gICAgICAgICAgPE1vZGFsQm9keT5cbiAgICAgICAgICAgIDxUeXBvZ3JhcGh5IHZhcmlhbnQ9XCJwYXJhZ3JhcGhcIiBjb21wb25lbnQ9XCJkaXZcIj5cbiAgICAgICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICAgICAgPC9UeXBvZ3JhcGh5PlxuICAgICAgICAgIDwvTW9kYWxCb2R5PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICAgPE1vZGFsRm9vdGVyPlxuICAgICAgICA8Rm9vdGVyIGFjdGlvblZpc2libGU9e2FjdGlvblZpc2libGV9IGFjdGlvbkJ1dHRvbklkPXthY3Rpb25CdXR0b25JZH0gYWN0aW9uRGlzYWJsZWQ9e2FjdGlvbkRpc2FibGVkfSBvbkFjdGlvbkNsaWNrPXtvbkFjdGlvbkNsaWNrfSBhY3Rpb25CdXR0b25UZXh0PXthY3Rpb25CdXR0b25UZXh0fSBidXR0b25TaXplPXtidXR0b25TaXplfSBvbkNhbmNlbENsaWNrPXtvbkNhbmNlbENsaWNrfSBjYW5jZWxUZXh0PXtjYW5jZWxUZXh0fS8+XG4gICAgICA8L01vZGFsRm9vdGVyPlxuICAgIDwvQ29udGFpbmVyPik7XG59O1xuY29uc3QgT3ZlcmxheSA9IChwcm9wcykgPT4gPE1vZGFsT3ZlcmxheSB7Li4ucHJvcHN9Lz47XG5jb25zdCBNb2RhbCA9ICgoKSA9PiB7XG4gICAgY29uc3Qgb3V0cHV0ID0gTW9kYWxDb21wb25lbnQ7XG4gICAgb3V0cHV0Lk92ZXJsYXkgPSBPdmVybGF5O1xuICAgIHJldHVybiBvdXRwdXQ7XG59KSgpO1xuZXhwb3J0IGRlZmF1bHQgTW9kYWw7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qc3gubWFwIl19 */',
        toString: _EMOTION_STRINGIFIED_CSS_ERROR__,
      };

var _ref6 =
  process.env.NODE_ENV === 'production'
    ? {
        name: '17pd1ar-Uikit-ModalComponent',
        styles: 'width:100%;;label:Uikit-ModalComponent;',
      }
    : {
        name: '17pd1ar-Uikit-ModalComponent',
        styles: 'width:100%;;label:Uikit-ModalComponent;',
        map: '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF3SHNCIiwiZmlsZSI6ImluZGV4LmpzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgKGMpIDIwMjAgVGhlIE9udGFyaW8gSW5zdGl0dXRlIGZvciBDYW5jZXIgUmVzZWFyY2guIEFsbCByaWdodHMgcmVzZXJ2ZWRcbiAqXG4gKiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2ZcbiAqIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgdjMuMC4gWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGVcbiAqIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS5cbiAqICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4gKlxuICogVEhJUyBTT0ZUV0FSRSBJUyBQUk9WSURFRCBCWSBUSEUgQ09QWVJJR0hUIEhPTERFUlMgQU5EIENPTlRSSUJVVE9SUyBcIkFTIElTXCIgQU5EIEFOWVxuICogRVhQUkVTUyBPUiBJTVBMSUVEIFdBUlJBTlRJRVMsIElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEIFRPLCBUSEUgSU1QTElFRCBXQVJSQU5USUVTXG4gKiBPRiBNRVJDSEFOVEFCSUxJVFkgQU5EIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFSRSBESVNDTEFJTUVELiBJTiBOTyBFVkVOVFxuICogU0hBTEwgVEhFIENPUFlSSUdIVCBIT0xERVIgT1IgQ09OVFJJQlVUT1JTIEJFIExJQUJMRSBGT1IgQU5ZIERJUkVDVCwgSU5ESVJFQ1QsXG4gKiBJTkNJREVOVEFMLCBTUEVDSUFMLCBFWEVNUExBUlksIE9SIENPTlNFUVVFTlRJQUwgREFNQUdFUyAoSU5DTFVESU5HLCBCVVQgTk9UIExJTUlURURcbiAqIFRPLCBQUk9DVVJFTUVOVCBPRiBTVUJTVElUVVRFIEdPT0RTIE9SIFNFUlZJQ0VTOyBMT1NTIE9GIFVTRSwgREFUQSwgT1IgUFJPRklUUztcbiAqIE9SIEJVU0lORVNTIElOVEVSUlVQVElPTikgSE9XRVZFUiBDQVVTRUQgQU5EIE9OIEFOWSBUSEVPUlkgT0YgTElBQklMSVRZLCBXSEVUSEVSXG4gKiBJTiBDT05UUkFDVCwgU1RSSUNUIExJQUJJTElUWSwgT1IgVE9SVCAoSU5DTFVESU5HIE5FR0xJR0VOQ0UgT1IgT1RIRVJXSVNFKSBBUklTSU5HIElOXG4gKiBBTlkgV0FZIE9VVCBPRiBUSEUgVVNFIE9GIFRISVMgU09GVFdBUkUsIEVWRU4gSUYgQURWSVNFRCBPRiBUSEUgUE9TU0lCSUxJVFkgT0YgU1VDSCBEQU1BR0UuXG4gKi9cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgQ29sb3IgZnJvbSAnY29sb3InO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgVHlwb2dyYXBoeSBmcm9tICcuLi9UeXBvZ3JhcGh5JztcbmltcG9ydCBCdXR0b24gZnJvbSAnLi4vQnV0dG9uJztcbmltcG9ydCBJY29uIGZyb20gJy4uL0ljb24nO1xuaW1wb3J0IEZvY3VzV3JhcHBlciBmcm9tICcuLi9Gb2N1c1dyYXBwZXInO1xuaW1wb3J0IHsgQlVUVE9OX1NJWkVTLCBCVVRUT05fVkFSSUFOVFMgfSBmcm9tICd1aWtpdC9CdXR0b24vY29uc3RhbnRzJztcbmNvbnN0IERlZmF1bHRGb290ZXIgPSAoeyBhY3Rpb25WaXNpYmxlLCBhY3Rpb25CdXR0b25JZCwgYWN0aW9uRGlzYWJsZWQsIG9uQWN0aW9uQ2xpY2ssIGFjdGlvbkJ1dHRvblRleHQsIGJ1dHRvblNpemUsIG9uQ2FuY2VsQ2xpY2ssIGNhbmNlbFRleHQsIH0pID0+ICg8QnV0dG9uQ29udGFpbmVyPlxuICAgIHthY3Rpb25WaXNpYmxlICYmICg8QnV0dG9uIGlkPXthY3Rpb25CdXR0b25JZH0gc2l6ZT17YnV0dG9uU2l6ZSB8fCBCVVRUT05fU0laRVMuTUR9IGRpc2FibGVkPXthY3Rpb25EaXNhYmxlZH0gb25DbGljaz17b25BY3Rpb25DbGlja30+XG4gICAgICAgIHthY3Rpb25CdXR0b25UZXh0fVxuICAgICAgPC9CdXR0b24+KX1cbiAgICA8QnV0dG9uIHZhcmlhbnQ9e0JVVFRPTl9WQVJJQU5UUy5URVhUfSBjc3M9e2NzcyBgXG4gICAgICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xuICAgICAgYH0gc2l6ZT17YnV0dG9uU2l6ZSB8fCBCVVRUT05fU0laRVMuTUR9IG9uQ2xpY2s9e29uQ2FuY2VsQ2xpY2t9PlxuICAgICAge2NhbmNlbFRleHR9XG4gICAgPC9CdXR0b24+XG4gIDwvQnV0dG9uQ29udGFpbmVyPik7XG5leHBvcnQgY29uc3QgTW9kYWxDb250YWluZXIgPSBzdHlsZWQoJ2RpdicpIGBcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICBib3gtc2hhZG93OiAwIDhweCAyMXB4IDAgcmdiYSgwLCAwLCAwLCAwLjEpLCAwIDZweCAxMnB4IDAgcmdiYSgwLCAwLCAwLCAwLjEpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyh7IHRoZW1lIH0pID0+IHRoZW1lLmNvbG9ycy53aGl0ZX07XG4gIG1heC13aWR0aDogNzc2cHg7XG4gIHdpZHRoOiBhdXRvO1xuICBwYWRkaW5nOiAyNHB4O1xuICBwYWRkaW5nLWJvdHRvbTogMHB4O1xuICBtYXgtaGVpZ2h0OiA5NXZoO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogc3BhY2UtYmV0d2VlbjtcbiAgbWFyZ2luOiAwIDFyZW07XG5gO1xuY29uc3QgTW9kYWxUaXRsZSA9IHN0eWxlZCgnZGl2JykgYFxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuYDtcbmNvbnN0IE1vZGFsQm9keSA9IHN0eWxlZCgnZGl2JykgYFxuICBtYXJnaW4tdG9wOiAyNHB4O1xuICBtYXJnaW4tYm90dG9tOiAyNHB4O1xuYDtcbmNvbnN0IE1vZGFsRm9vdGVyID0gc3R5bGVkKCdkaXYnKSBgXG4gIHBhZGRpbmc6IDhweCAwcHg7XG4gIGJvcmRlci10b3A6IHNvbGlkIDFweCAkeyh7IHRoZW1lIH0pID0+IHRoZW1lLmNvbG9ycy5ncmV5XzJ9O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuYDtcbmNvbnN0IEJ1dHRvbkNvbnRhaW5lciA9IHN0eWxlZCgnZGl2JykgYFxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuYDtcbmNvbnN0IE1vZGFsT3ZlcmxheSA9IHN0eWxlZCgnZGl2JykgYFxuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgYmFja2dyb3VuZDogJHsoeyB0aGVtZSB9KSA9PiBDb2xvcih0aGVtZS5jb2xvcnMucHJpbWFyeV9kYXJrKS5hbHBoYSgwLjgpLmhzbCgpLnN0cmluZygpfTtcbmA7XG4vKipcbiAqIENhbiB1c2UgPE1vZGFsLm92ZXJsYXkgLz4gZm9yIHRoZSBvdmVybGF5XG4gKi9cbmNvbnN0IE1vZGFsQ29tcG9uZW50ID0gKHsgdGl0bGUgPSAnQWRkIFVzZXJzJywgdGl0bGVJY29uQ29uZmlnID0ge1xuICAgIG5hbWU6IG51bGwsXG4gICAgZmlsbDogbnVsbCxcbn0sIGJ1dHRvblNpemUgPSBCVVRUT05fU0laRVMuTUQsIGFjdGlvbkJ1dHRvbklkLCBhY3Rpb25CdXR0b25UZXh0ID0gJ0FwcGx5JywgYWN0aW9uVmlzaWJsZSA9IHRydWUsIGNhbmNlbFRleHQgPSAnQ2FuY2VsJywgb25BY3Rpb25DbGljayA9ICgpID0+IHsgfSwgb25DYW5jZWxDbGljayA9ICgpID0+IHsgfSwgb25DbG9zZUNsaWNrID0gKCkgPT4geyB9LCBhY3Rpb25EaXNhYmxlZCA9IGZhbHNlLCBjaGlsZHJlbiwgQ29udGFpbmVyRWwsIEZvb3RlckVsLCB9KSA9PiB7XG4gICAgY29uc3QgQ29udGFpbmVyID0gQ29udGFpbmVyRWwgPyBDb250YWluZXJFbCA6IE1vZGFsQ29udGFpbmVyO1xuICAgIGNvbnN0IEZvb3RlciA9IEZvb3RlckVsID8gRm9vdGVyRWwgOiBEZWZhdWx0Rm9vdGVyO1xuICAgIHJldHVybiAoPENvbnRhaW5lcj5cbiAgICAgIDxkaXYgY3NzPXtjc3MgYFxuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgICAgICBgfT5cbiAgICAgICAgPE1vZGFsVGl0bGU+XG4gICAgICAgICAge3RpdGxlSWNvbkNvbmZpZy5uYW1lICYmICg8ZGl2IGNzcz17Y3NzIGBcbiAgICAgICAgICAgICAgICBmbGV4OiAxO1xuICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDEwcHg7XG4gICAgICAgICAgICAgICAgcGFkZGluZy10b3A6IDNweDtcbiAgICAgICAgICAgICAgYH0+XG4gICAgICAgICAgICAgIDxJY29uIG5hbWU9e3RpdGxlSWNvbkNvbmZpZy5uYW1lfSB3aWR0aD1cIjIwcHhcIiBoZWlnaHQ9XCIyMHB4XCIgZmlsbD17dGl0bGVJY29uQ29uZmlnLmZpbGx9Lz5cbiAgICAgICAgICAgIDwvZGl2Pil9XG4gICAgICAgICAgPFR5cG9ncmFwaHkgY3NzPXtjc3MgYFxuICAgICAgICAgICAgICBtYXJnaW46IDBweDtcbiAgICAgICAgICAgIGB9IHZhcmlhbnQ9XCJzdWJ0aXRsZVwiPlxuICAgICAgICAgICAge3RpdGxlfVxuICAgICAgICAgIDwvVHlwb2dyYXBoeT5cbiAgICAgICAgPC9Nb2RhbFRpdGxlPlxuICAgICAgICA8Rm9jdXNXcmFwcGVyIG9uQ2xpY2s9e29uQ2xvc2VDbGlja30+XG4gICAgICAgICAgPEljb24gbmFtZT1cInRpbWVzXCIgZmlsbD1cInByaW1hcnlfMVwiIHdpZHRoPVwiMTNweFwiIGhlaWdodD1cIjEzcHhcIi8+XG4gICAgICAgIDwvRm9jdXNXcmFwcGVyPlxuICAgICAgPC9kaXY+XG5cbiAgICAgIDxkaXYgY3NzPXtjc3MgYFxuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgb3ZlcmZsb3cteTogYXV0bztcbiAgICAgICAgYH0+XG4gICAgICAgIDxkaXYgY3NzPXtjc3MgYFxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgYH0+XG4gICAgICAgICAgPE1vZGFsQm9keT5cbiAgICAgICAgICAgIDxUeXBvZ3JhcGh5IHZhcmlhbnQ9XCJwYXJhZ3JhcGhcIiBjb21wb25lbnQ9XCJkaXZcIj5cbiAgICAgICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICAgICAgPC9UeXBvZ3JhcGh5PlxuICAgICAgICAgIDwvTW9kYWxCb2R5PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICAgPE1vZGFsRm9vdGVyPlxuICAgICAgICA8Rm9vdGVyIGFjdGlvblZpc2libGU9e2FjdGlvblZpc2libGV9IGFjdGlvbkJ1dHRvbklkPXthY3Rpb25CdXR0b25JZH0gYWN0aW9uRGlzYWJsZWQ9e2FjdGlvbkRpc2FibGVkfSBvbkFjdGlvbkNsaWNrPXtvbkFjdGlvbkNsaWNrfSBhY3Rpb25CdXR0b25UZXh0PXthY3Rpb25CdXR0b25UZXh0fSBidXR0b25TaXplPXtidXR0b25TaXplfSBvbkNhbmNlbENsaWNrPXtvbkNhbmNlbENsaWNrfSBjYW5jZWxUZXh0PXtjYW5jZWxUZXh0fS8+XG4gICAgICA8L01vZGFsRm9vdGVyPlxuICAgIDwvQ29udGFpbmVyPik7XG59O1xuY29uc3QgT3ZlcmxheSA9IChwcm9wcykgPT4gPE1vZGFsT3ZlcmxheSB7Li4ucHJvcHN9Lz47XG5jb25zdCBNb2RhbCA9ICgoKSA9PiB7XG4gICAgY29uc3Qgb3V0cHV0ID0gTW9kYWxDb21wb25lbnQ7XG4gICAgb3V0cHV0Lk92ZXJsYXkgPSBPdmVybGF5O1xuICAgIHJldHVybiBvdXRwdXQ7XG59KSgpO1xuZXhwb3J0IGRlZmF1bHQgTW9kYWw7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qc3gubWFwIl19 */',
        toString: _EMOTION_STRINGIFIED_CSS_ERROR__,
      };

var ModalComponent = function ModalComponent(_ref11) {
  var _ref11$title = _ref11.title,
    title = _ref11$title === void 0 ? 'Add Users' : _ref11$title,
    _ref11$titleIconConfi = _ref11.titleIconConfig,
    titleIconConfig =
      _ref11$titleIconConfi === void 0
        ? {
            name: null,
            fill: null,
          }
        : _ref11$titleIconConfi,
    _ref11$buttonSize = _ref11.buttonSize,
    buttonSize = _ref11$buttonSize === void 0 ? _constants.BUTTON_SIZES.MD : _ref11$buttonSize,
    actionButtonId = _ref11.actionButtonId,
    _ref11$actionButtonTe = _ref11.actionButtonText,
    actionButtonText = _ref11$actionButtonTe === void 0 ? 'Apply' : _ref11$actionButtonTe,
    _ref11$actionVisible = _ref11.actionVisible,
    actionVisible = _ref11$actionVisible === void 0 ? true : _ref11$actionVisible,
    _ref11$cancelText = _ref11.cancelText,
    cancelText = _ref11$cancelText === void 0 ? 'Cancel' : _ref11$cancelText,
    _ref11$onActionClick = _ref11.onActionClick,
    onActionClick = _ref11$onActionClick === void 0 ? function () {} : _ref11$onActionClick,
    _ref11$onCancelClick = _ref11.onCancelClick,
    onCancelClick = _ref11$onCancelClick === void 0 ? function () {} : _ref11$onCancelClick,
    _ref11$onCloseClick = _ref11.onCloseClick,
    onCloseClick = _ref11$onCloseClick === void 0 ? function () {} : _ref11$onCloseClick,
    _ref11$actionDisabled = _ref11.actionDisabled,
    actionDisabled = _ref11$actionDisabled === void 0 ? false : _ref11$actionDisabled,
    children = _ref11.children,
    ContainerEl = _ref11.ContainerEl,
    FooterEl = _ref11.FooterEl;
  var Container = ContainerEl ? ContainerEl : ModalContainer;
  var Footer = FooterEl ? FooterEl : DefaultFooter;
  return (0, _core.jsx)(
    Container,
    null,
    (0, _core.jsx)(
      'div',
      {
        css: _ref2,
      },
      (0, _core.jsx)(
        ModalTitle,
        null,
        titleIconConfig.name &&
          (0, _core.jsx)(
            'div',
            {
              css: _ref3,
            },
            (0, _core.jsx)(_Icon['default'], {
              name: titleIconConfig.name,
              width: '20px',
              height: '20px',
              fill: titleIconConfig.fill,
            }),
          ),
        (0, _core.jsx)(
          _Typography['default'],
          {
            css: _ref4,
            variant: 'subtitle',
          },
          title,
        ),
      ),
      (0, _core.jsx)(
        _FocusWrapper['default'],
        {
          onClick: onCloseClick,
        },
        (0, _core.jsx)(_Icon['default'], {
          name: 'times',
          fill: 'primary_1',
          width: '13px',
          height: '13px',
        }),
      ),
    ),
    (0, _core.jsx)(
      'div',
      {
        css: _ref5,
      },
      (0, _core.jsx)(
        'div',
        {
          css: _ref6,
        },
        (0, _core.jsx)(
          ModalBody,
          null,
          (0, _core.jsx)(
            _Typography['default'],
            {
              variant: 'paragraph',
              component: 'div',
            },
            children,
          ),
        ),
      ),
    ),
    (0, _core.jsx)(
      ModalFooter,
      null,
      (0, _core.jsx)(Footer, {
        actionVisible: actionVisible,
        actionButtonId: actionButtonId,
        actionDisabled: actionDisabled,
        onActionClick: onActionClick,
        actionButtonText: actionButtonText,
        buttonSize: buttonSize,
        onCancelClick: onCancelClick,
        cancelText: cancelText,
      }),
    ),
  );
};

var Overlay = function Overlay(props) {
  return (0, _core.jsx)(ModalOverlay, props);
};

var Modal = (function () {
  var output = ModalComponent;
  output.Overlay = Overlay;
  return output;
})();

var _default = Modal;
exports['default'] = _default;
