'use strict';

var _interopRequireDefault = require('@babel/runtime/helpers/interopRequireDefault');

Object.defineProperty(exports, '__esModule', {
  value: true,
});
exports['default'] = void 0;

var _core = require('@emotion/core');

var _extends2 = _interopRequireDefault(require('@babel/runtime/helpers/extends'));

var _styledBase = _interopRequireDefault(require('@emotion/styled-base'));

var _react = _interopRequireDefault(require('react'));

var _ThemeProvider = require('../ThemeProvider');

var _Typography = _interopRequireDefault(require('../Typography'));

var _Tag = _interopRequireDefault(require('../Tag'));

var _FocusWrapper = _interopRequireDefault(require('../FocusWrapper'));

var _useElementDimension2 = _interopRequireDefault(require('../utils/Hook/useElementDimension'));

var _Tooltip = _interopRequireDefault(require('../Tooltip'));

var __jsx = _react['default'].createElement;

function _EMOTION_STRINGIFIED_CSS_ERROR__() {
  return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).";
}

/*
 * Copyright (c) 2020 The Ontario Institute for Cancer Research. All rights reserved
 *
 * This program and the accompanying materials are made available under the terms of
 * the GNU Affero General Public License v3.0. You should have received a copy of the
 * GNU Affero General Public License along with this program.
 *  If not, see <http://www.gnu.org/licenses/>.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
 * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER
 * IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
var __rest =
  (void 0 && (void 0).__rest) ||
  function (s, e) {
    var t = {};

    for (var p in s) {
      if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    }

    if (s != null && typeof Object.getOwnPropertySymbols === 'function')
      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
          t[p[i]] = s[p[i]];
      }
    return t;
  };

var Triangle = /*#__PURE__*/ (0, _styledBase['default'])('div', {
  target: 'ez21nvn0',
  label: 'Uikit-Triangle',
})(
  "transition:all 0.25s;width:0px;position:absolute;text-align:center;left:100%;top:0;transform:scaleX(0.5);&:after,&:before{transition:all 0.25s;content:'';position:absolute;width:0;height:0;border-style:solid;}&:after{border-color:transparent transparent transparent ",
  function (_ref4) {
    var theme = _ref4.theme,
      tabStyle = _ref4.tabStyle;
    return tabStyle ? tabStyle.background : theme.colors.secondary_4;
  },
  ';border-width:',
  function (_ref5) {
    var contHeight = _ref5.contHeight;
    return contHeight / 2;
  },
  'px;}&:before{top:-1px;left:1px;border-color:transparent transparent transparent ',
  function (_ref6) {
    var theme = _ref6.theme,
      tabStyle = _ref6.tabStyle;
    return tabStyle ? tabStyle.border : theme.colors.secondary_2;
  },
  ';border-width:',
  function (_ref7) {
    var contHeight = _ref7.contHeight;
    return (contHeight + 2) / 2;
  },
  'px;}' +
    (process.env.NODE_ENV === 'production'
      ? ''
      : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */'),
);
var BaseItemContainer = /*#__PURE__*/ (0, _styledBase['default'])(_FocusWrapper['default'], {
  target: 'ez21nvn1',
  label: 'Uikit-BaseItemContainer',
})(
  'width:100%;position:relative;transition:all 0.25s;min-height:40px;padding-left:10px;padding-right:10px;padding-top:8px;padding-bottom:8px;border:solid 1px;border-left:solid 3px;border-right:none;border-color:rgba(0,0,0,0);',
  function (_ref8) {
    var disabled = _ref8.disabled,
      theme = _ref8.theme;
    return disabled
      ? '\n          &:focus {\n            box-shadow: none;\n          }\n\n          &:hover {\n            cursor: default;\n          }\n        '
      : '\n          &:hover {\n            cursor: pointer;\n            background: '.concat(
          theme.colors.grey_3,
          ';\n          }\n        ',
        );
  },
  process.env.NODE_ENV === 'production'
    ? ''
    : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */',
);
var ActiveItemContainer = /*#__PURE__*/ (0, _styledBase['default'])(BaseItemContainer, {
  target: 'ez21nvn2',
  label: 'Uikit-ActiveItemContainer',
})(
  'border-color:',
  function (_ref9) {
    var theme = _ref9.theme;
    return theme.colors.secondary;
  },
  ';border-top-color:',
  function (_ref10) {
    var theme = _ref10.theme;
    return theme.colors.secondary_2;
  },
  ';border-bottom-color:',
  function (_ref11) {
    var theme = _ref11.theme;
    return theme.colors.secondary_2;
  },
  ';border-right:solid 1px ',
  function (_ref12) {
    var theme = _ref12.theme;
    return theme.colors.secondary_2;
  },
  ';background:',
  function (_ref13) {
    var theme = _ref13.theme,
      tabStyle = _ref13.tabStyle;
    return tabStyle ? tabStyle.background : theme.colors.secondary_4;
  },
  ';color:',
  function (_ref14) {
    var theme = _ref14.theme;
    return theme.colors.secondary_dark;
  },
  ';&:hover{background:',
  function (_ref15) {
    var theme = _ref15.theme;
    return theme.colors.secondary_4;
  },
  ';.activeTriangle::after{border-left-color:',
  function (_ref16) {
    var theme = _ref16.theme;
    return theme.colors.secondary_4;
  },
  ';}}' +
    (process.env.NODE_ENV === 'production'
      ? ''
      : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFrR3NEIiwiZmlsZSI6ImluZGV4LmpzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgKGMpIDIwMjAgVGhlIE9udGFyaW8gSW5zdGl0dXRlIGZvciBDYW5jZXIgUmVzZWFyY2guIEFsbCByaWdodHMgcmVzZXJ2ZWRcbiAqXG4gKiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2ZcbiAqIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgdjMuMC4gWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGVcbiAqIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS5cbiAqICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4gKlxuICogVEhJUyBTT0ZUV0FSRSBJUyBQUk9WSURFRCBCWSBUSEUgQ09QWVJJR0hUIEhPTERFUlMgQU5EIENPTlRSSUJVVE9SUyBcIkFTIElTXCIgQU5EIEFOWVxuICogRVhQUkVTUyBPUiBJTVBMSUVEIFdBUlJBTlRJRVMsIElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEIFRPLCBUSEUgSU1QTElFRCBXQVJSQU5USUVTXG4gKiBPRiBNRVJDSEFOVEFCSUxJVFkgQU5EIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFSRSBESVNDTEFJTUVELiBJTiBOTyBFVkVOVFxuICogU0hBTEwgVEhFIENPUFlSSUdIVCBIT0xERVIgT1IgQ09OVFJJQlVUT1JTIEJFIExJQUJMRSBGT1IgQU5ZIERJUkVDVCwgSU5ESVJFQ1QsXG4gKiBJTkNJREVOVEFMLCBTUEVDSUFMLCBFWEVNUExBUlksIE9SIENPTlNFUVVFTlRJQUwgREFNQUdFUyAoSU5DTFVESU5HLCBCVVQgTk9UIExJTUlURURcbiAqIFRPLCBQUk9DVVJFTUVOVCBPRiBTVUJTVElUVVRFIEdPT0RTIE9SIFNFUlZJQ0VTOyBMT1NTIE9GIFVTRSwgREFUQSwgT1IgUFJPRklUUztcbiAqIE9SIEJVU0lORVNTIElOVEVSUlVQVElPTikgSE9XRVZFUiBDQVVTRUQgQU5EIE9OIEFOWSBUSEVPUlkgT0YgTElBQklMSVRZLCBXSEVUSEVSXG4gKiBJTiBDT05UUkFDVCwgU1RSSUNUIExJQUJJTElUWSwgT1IgVE9SVCAoSU5DTFVESU5HIE5FR0xJR0VOQ0UgT1IgT1RIRVJXSVNFKSBBUklTSU5HIElOXG4gKiBBTlkgV0FZIE9VVCBPRiBUSEUgVVNFIE9GIFRISVMgU09GVFdBUkUsIEVWRU4gSUYgQURWSVNFRCBPRiBUSEUgUE9TU0lCSUxJVFkgT0YgU1VDSCBEQU1BR0UuXG4gKi9cbnZhciBfX3Jlc3QgPSAodGhpcyAmJiB0aGlzLl9fcmVzdCkgfHwgZnVuY3Rpb24gKHMsIGUpIHtcbiAgICB2YXIgdCA9IHt9O1xuICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSAmJiBlLmluZGV4T2YocCkgPCAwKVxuICAgICAgICB0W3BdID0gc1twXTtcbiAgICBpZiAocyAhPSBudWxsICYmIHR5cGVvZiBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzID09PSBcImZ1bmN0aW9uXCIpXG4gICAgICAgIGZvciAodmFyIGkgPSAwLCBwID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhzKTsgaSA8IHAubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGlmIChlLmluZGV4T2YocFtpXSkgPCAwICYmIE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChzLCBwW2ldKSlcbiAgICAgICAgICAgICAgICB0W3BbaV1dID0gc1twW2ldXTtcbiAgICAgICAgfVxuICAgIHJldHVybiB0O1xufTtcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9jb3JlJztcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IHVzZVRoZW1lIH0gZnJvbSAnLi4vVGhlbWVQcm92aWRlcic7XG5pbXBvcnQgVHlwb2dyYXBoeSBmcm9tICd1aWtpdC9UeXBvZ3JhcGh5JztcbmltcG9ydCBUYWcgZnJvbSAndWlraXQvVGFnJztcbmltcG9ydCBGb2N1c1dyYXBwZXIgZnJvbSAndWlraXQvRm9jdXNXcmFwcGVyJztcbmltcG9ydCB1c2VFbGVtZW50RGltZW5zaW9uIGZyb20gJ3Vpa2l0L3V0aWxzL0hvb2svdXNlRWxlbWVudERpbWVuc2lvbic7XG5pbXBvcnQgVG9vbHRpcCBmcm9tICd1aWtpdC9Ub29sdGlwJztcbmNvbnN0IFRyaWFuZ2xlID0gc3R5bGVkKCdkaXYnKSBgXG4gIHRyYW5zaXRpb246IGFsbCAwLjI1cztcbiAgd2lkdGg6IDBweDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGxlZnQ6IDEwMCU7XG4gIHRvcDogMDtcbiAgdHJhbnNmb3JtOiBzY2FsZVgoMC41KTtcbiAgJjphZnRlcixcbiAgJjpiZWZvcmUge1xuICAgIHRyYW5zaXRpb246IGFsbCAwLjI1cztcbiAgICBjb250ZW50OiAnJztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6IDA7XG4gICAgaGVpZ2h0OiAwO1xuICAgIGJvcmRlci1zdHlsZTogc29saWQ7XG4gIH1cbiAgJjphZnRlciB7XG4gICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCB0cmFuc3BhcmVudFxuICAgICAgJHsoeyB0aGVtZSwgdGFiU3R5bGUgfSkgPT4gKHRhYlN0eWxlID8gdGFiU3R5bGUuYmFja2dyb3VuZCA6IHRoZW1lLmNvbG9ycy5zZWNvbmRhcnlfNCl9O1xuICAgIGJvcmRlci13aWR0aDogJHsoeyBjb250SGVpZ2h0IH0pID0+IGNvbnRIZWlnaHQgLyAyfXB4O1xuICB9XG4gICY6YmVmb3JlIHtcbiAgICB0b3A6IC0xcHg7XG4gICAgbGVmdDogMXB4O1xuICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnRcbiAgICAgICR7KHsgdGhlbWUsIHRhYlN0eWxlIH0pID0+ICh0YWJTdHlsZSA/IHRhYlN0eWxlLmJvcmRlciA6IHRoZW1lLmNvbG9ycy5zZWNvbmRhcnlfMil9O1xuICAgIGJvcmRlci13aWR0aDogJHsoeyBjb250SGVpZ2h0IH0pID0+IChjb250SGVpZ2h0ICsgMikgLyAyfXB4OyAvKiArMiBmb3IgYm9yZGVyIGFyb3VuZCBidXR0b24gKi9cbiAgfVxuYDtcbmNvbnN0IEJhc2VJdGVtQ29udGFpbmVyID0gc3R5bGVkKEZvY3VzV3JhcHBlcikgYFxuICB3aWR0aDogMTAwJTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0cmFuc2l0aW9uOiBhbGwgMC4yNXM7XG4gIG1pbi1oZWlnaHQ6IDQwcHg7XG4gIHBhZGRpbmctbGVmdDogMTBweDtcbiAgcGFkZGluZy1yaWdodDogMTBweDtcbiAgcGFkZGluZy10b3A6IDhweDtcbiAgcGFkZGluZy1ib3R0b206IDhweDtcbiAgYm9yZGVyOiBzb2xpZCAxcHg7XG4gIGJvcmRlci1sZWZ0OiBzb2xpZCAzcHg7XG4gIGJvcmRlci1yaWdodDogbm9uZTtcbiAgYm9yZGVyLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDApO1xuICAkeyh7IGRpc2FibGVkLCB0aGVtZSB9KSA9PiBkaXNhYmxlZFxuICAgID8gYFxuICAgICAgICAgICY6Zm9jdXMge1xuICAgICAgICAgICAgYm94LXNoYWRvdzogbm9uZTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgIGN1cnNvcjogZGVmYXVsdDtcbiAgICAgICAgICB9XG4gICAgICAgIGBcbiAgICA6IGBcbiAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICR7dGhlbWUuY29sb3JzLmdyZXlfM307XG4gICAgICAgICAgfVxuICAgICAgICBgfVxuYDtcbmNvbnN0IEFjdGl2ZUl0ZW1Db250YWluZXIgPSBzdHlsZWQoQmFzZUl0ZW1Db250YWluZXIpIGBcbiAgYm9yZGVyLWNvbG9yOiAkeyh7IHRoZW1lIH0pID0+IHRoZW1lLmNvbG9ycy5zZWNvbmRhcnl9O1xuICBib3JkZXItdG9wLWNvbG9yOiAkeyh7IHRoZW1lIH0pID0+IHRoZW1lLmNvbG9ycy5zZWNvbmRhcnlfMn07XG4gIGJvcmRlci1ib3R0b20tY29sb3I6ICR7KHsgdGhlbWUgfSkgPT4gdGhlbWUuY29sb3JzLnNlY29uZGFyeV8yfTtcbiAgYm9yZGVyLXJpZ2h0OiBzb2xpZCAxcHggJHsoeyB0aGVtZSB9KSA9PiB0aGVtZS5jb2xvcnMuc2Vjb25kYXJ5XzJ9O1xuICBiYWNrZ3JvdW5kOiAkeyh7IHRoZW1lLCB0YWJTdHlsZSB9KSA9PiB0YWJTdHlsZSA/IHRhYlN0eWxlLmJhY2tncm91bmQgOiB0aGVtZS5jb2xvcnMuc2Vjb25kYXJ5XzR9O1xuICBjb2xvcjogJHsoeyB0aGVtZSB9KSA9PiB0aGVtZS5jb2xvcnMuc2Vjb25kYXJ5X2Rhcmt9O1xuXG4gICY6aG92ZXIge1xuICAgIGJhY2tncm91bmQ6ICR7KHsgdGhlbWUgfSkgPT4gdGhlbWUuY29sb3JzLnNlY29uZGFyeV80fTtcblxuICAgIC5hY3RpdmVUcmlhbmdsZTo6YWZ0ZXIge1xuICAgICAgYm9yZGVyLWxlZnQtY29sb3I6ICR7KHsgdGhlbWUgfSkgPT4gdGhlbWUuY29sb3JzLnNlY29uZGFyeV80fTtcbiAgICB9XG4gIH1cbmA7XG5jb25zdCBWZXJ0aWNhbFRhYnNJdGVtID0gKF9hKSA9PiB7XG4gICAgdmFyIHsgYWN0aXZlID0gZmFsc2UsIGNoaWxkcmVuLCBkaXNhYmxlZCA9IGZhbHNlLCBvbkNsaWNrID0gKCkgPT4geyB9LCB0YWJTdHlsZSwgdG9vbHRpcCB9ID0gX2EsIHJlc3QgPSBfX3Jlc3QoX2EsIFtcImFjdGl2ZVwiLCBcImNoaWxkcmVuXCIsIFwiZGlzYWJsZWRcIiwgXCJvbkNsaWNrXCIsIFwidGFiU3R5bGVcIiwgXCJ0b29sdGlwXCJdKTtcbiAgICBjb25zdCBDb250YWluZXJDb21wb25lbnQgPSBhY3RpdmUgPyBBY3RpdmVJdGVtQ29udGFpbmVyIDogQmFzZUl0ZW1Db250YWluZXI7XG4gICAgY29uc3QgY29udGFpbmVyUmVmID0gUmVhY3QudXNlUmVmKG51bGwpO1xuICAgIGNvbnN0IHsgaGVpZ2h0OiBjb250SGVpZ2h0IH0gPSB1c2VFbGVtZW50RGltZW5zaW9uKGNvbnRhaW5lclJlZik7XG4gICAgY29uc3QgY2xpY2tIYW5kbGVyID0gKGV2ZW50KSA9PiBkaXNhYmxlZCB8fCBvbkNsaWNrKGV2ZW50KTtcbiAgICByZXR1cm4gKDxUb29sdGlwIGNzcz17Y3NzIGBcbiAgICAgICAgLy8gdGhlc2UgYXJlIGFwcGxpZWQgdG8gdGhlIGludGVybmFsIGNvbnRhaW5lciBvZiB0aGUgdG9vbHRpcFxuICAgICAgICBtYXgtd2lkdGg6IDIwMHB4O1xuICAgICAgYH0gZGlzYWJsZWQ9eyF0b29sdGlwfSBodG1sPXt0b29sdGlwfSBwb3NpdGlvbj1cInJpZ2h0XCI+XG4gICAgICA8Q29udGFpbmVyQ29tcG9uZW50IHRhYlN0eWxlPXt0YWJTdHlsZX0gZGlzYWJsZWQ9e2Rpc2FibGVkfSBvbkNsaWNrPXtjbGlja0hhbmRsZXJ9IHsuLi5yZXN0fSByZWY9e2NvbnRhaW5lclJlZn0+XG4gICAgICAgIDxUeXBvZ3JhcGh5IHZhcmlhbnQ9XCJkYXRhXCIgYXM9XCJkaXZcIiBjc3M9e2NzcyBgXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICBgfT5cbiAgICAgICAgICA8ZGl2IGNzcz17Y3NzIGBcbiAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgICAgICAgYH0+XG4gICAgICAgICAgICB7Y2hpbGRyZW59XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvVHlwb2dyYXBoeT5cbiAgICAgICAge2FjdGl2ZSAmJiAoPFRyaWFuZ2xlIHRhYlN0eWxlPXt0YWJTdHlsZX0gY29udEhlaWdodD17Y29udEhlaWdodH0gY2xhc3NOYW1lPVwiYWN0aXZlVHJpYW5nbGVcIi8+KX1cbiAgICAgIDwvQ29udGFpbmVyQ29tcG9uZW50PlxuICAgIDwvVG9vbHRpcD4pO1xufTtcblZlcnRpY2FsVGFic0l0ZW0uZGlzcGxheU5hbWUgPSAnVmVydGljYWxUYWJzLkl0ZW0nO1xuY29uc3QgVmVydGljYWxUYWJzID0gKF9hKSA9PiB7XG4gICAgdmFyIHsgY2hpbGRyZW4gfSA9IF9hLCByZXN0ID0gX19yZXN0KF9hLCBbXCJjaGlsZHJlblwiXSk7XG4gICAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICAgIHJldHVybiAoPGRpdiBjc3M9e2NzcyBgXG4gICAgICAgIGJvcmRlci1yaWdodDogc29saWQgMXB4ICR7dGhlbWUuY29sb3JzLmdyZXlfMn07XG4gICAgICBgfSB7Li4ucmVzdH0+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9kaXY+KTtcbn07XG5jb25zdCBUYWJzSXRlbVRhZyA9IHN0eWxlZChUYWcpIGBcbiAgbWluLXdpZHRoOiAzMHB4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuYDtcblRhYnNJdGVtVGFnLmRpc3BsYXlOYW1lID0gJ1ZlcnRpY2FsVGFicy5UYWcnO1xuY29uc3Qgb3V0cHV0ID0gKCgpID0+IHtcbiAgICBjb25zdCBvdXRwdXQgPSBWZXJ0aWNhbFRhYnM7XG4gICAgb3V0cHV0Lkl0ZW0gPSBWZXJ0aWNhbFRhYnNJdGVtO1xuICAgIG91dHB1dC5UYWcgPSBUYWJzSXRlbVRhZztcbiAgICByZXR1cm4gb3V0cHV0O1xufSkoKTtcbmV4cG9ydCBkZWZhdWx0IG91dHB1dDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzeC5tYXAiXX0= */'),
);

var _ref =
  process.env.NODE_ENV === 'production'
    ? {
        name: '1hiifwd-Uikit-VerticalTabsItem',
        styles: 'max-width:200px;;label:Uikit-VerticalTabsItem;',
      }
    : {
        name: '1hiifwd-Uikit-VerticalTabsItem',
        styles: 'max-width:200px;;label:Uikit-VerticalTabsItem;',
        map: '/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */',
        toString: _EMOTION_STRINGIFIED_CSS_ERROR__,
      };

var _ref2 =
  process.env.NODE_ENV === 'production'
    ? {
        name: '1wyn15h-Uikit-VerticalTabsItem',
        styles: 'width:100%;;label:Uikit-VerticalTabsItem;',
      }
    : {
        name: '1wyn15h-Uikit-VerticalTabsItem',
        styles: 'width:100%;;label:Uikit-VerticalTabsItem;',
        map: '/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */',
        toString: _EMOTION_STRINGIFIED_CSS_ERROR__,
      };

var _ref3 =
  process.env.NODE_ENV === 'production'
    ? {
        name: 'b9guo8-Uikit-VerticalTabsItem',
        styles:
          'display:flex;justify-content:space-between;align-items:center;text-align:left;;label:Uikit-VerticalTabsItem;',
      }
    : {
        name: 'b9guo8-Uikit-VerticalTabsItem',
        styles:
          'display:flex;justify-content:space-between;align-items:center;text-align:left;;label:Uikit-VerticalTabsItem;',
        map: '/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */',
        toString: _EMOTION_STRINGIFIED_CSS_ERROR__,
      };

var VerticalTabsItem = function VerticalTabsItem(_a) {
  var _a$active = _a.active,
    active = _a$active === void 0 ? false : _a$active,
    children = _a.children,
    _a$disabled = _a.disabled,
    disabled = _a$disabled === void 0 ? false : _a$disabled,
    _a$onClick = _a.onClick,
    onClick = _a$onClick === void 0 ? function () {} : _a$onClick,
    tabStyle = _a.tabStyle,
    tooltip = _a.tooltip,
    rest = __rest(_a, ['active', 'children', 'disabled', 'onClick', 'tabStyle', 'tooltip']);

  var ContainerComponent = active ? ActiveItemContainer : BaseItemContainer;

  var containerRef = _react['default'].useRef(null);

  var _useElementDimension = (0, _useElementDimension2['default'])(containerRef),
    contHeight = _useElementDimension.height;

  var clickHandler = function clickHandler(event) {
    return disabled || onClick(event);
  };

  return (0, _core.jsx)(
    _Tooltip['default'],
    {
      css: _ref,
      disabled: !tooltip,
      html: tooltip,
      position: 'right',
    },
    (0, _core.jsx)(
      ContainerComponent,
      (0, _extends2['default'])(
        {
          tabStyle: tabStyle,
          disabled: disabled,
          onClick: clickHandler,
        },
        rest,
        {
          ref: containerRef,
        },
      ),
      (0, _core.jsx)(
        _Typography['default'],
        {
          variant: 'data',
          as: 'div',
          css: _ref2,
        },
        (0, _core.jsx)(
          'div',
          {
            css: _ref3,
          },
          children,
        ),
      ),
      active &&
        (0, _core.jsx)(Triangle, {
          tabStyle: tabStyle,
          contHeight: contHeight,
          className: 'activeTriangle',
        }),
    ),
  );
};

VerticalTabsItem.displayName = 'VerticalTabs.Item';

var VerticalTabs = function VerticalTabs(_a) {
  var children = _a.children,
    rest = __rest(_a, ['children']);

  var theme = (0, _ThemeProvider.useTheme)();
  return (0, _core.jsx)(
    'div',
    (0, _extends2['default'])(
      {
        css: /*#__PURE__*/ (0, _core.css)(
          'border-right:solid 1px ',
          theme.colors.grey_2,
          ';;label:Uikit-VerticalTabs;' +
            (process.env.NODE_ENV === 'production'
              ? ''
              : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */'),
        ),
      },
      rest,
    ),
    children,
  );
};

var TabsItemTag = /*#__PURE__*/ (0, _styledBase['default'])(_Tag['default'], {
  target: 'ez21nvn3',
  label: 'Uikit-TabsItemTag',
})(
  process.env.NODE_ENV === 'production'
    ? {
        name: '1lchgxs',
        styles: 'min-width:30px;justify-content:center;text-align:center;',
      }
    : {
        name: '1lchgxs',
        styles: 'min-width:30px;justify-content:center;text-align:center;',
        map: '/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */',
        toString: _EMOTION_STRINGIFIED_CSS_ERROR__,
      },
);
TabsItemTag.displayName = 'VerticalTabs.Tag';

var output = (function () {
  var output = VerticalTabs;
  output.Item = VerticalTabsItem;
  output.Tag = TabsItemTag;
  return output;
})();

var _default = output;
exports['default'] = _default;
