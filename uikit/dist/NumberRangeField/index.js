'use strict';

var _interopRequireDefault = require('@babel/runtime/helpers/interopRequireDefault');

Object.defineProperty(exports, '__esModule', {
  value: true,
});
exports['default'] = void 0;

var _core = require('@emotion/core');

var _slicedToArray2 = _interopRequireDefault(require('@babel/runtime/helpers/slicedToArray'));

var _common = require('./common');

var _react = _interopRequireDefault(require('react'));

var _Input = _interopRequireDefault(require('../form/Input'));

var _Button = _interopRequireDefault(require('../Button'));

var _ThemeProvider = require('../ThemeProvider');

var _Typography = _interopRequireDefault(require('../Typography'));

var __jsx = _react['default'].createElement;

function _EMOTION_STRINGIFIED_CSS_ERROR__() {
  return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).";
}

var _ref =
  process.env.NODE_ENV === 'production'
    ? {
        name: '8zdbaj-Uikit-NumberRangeField',
        styles: 'margin:2px 0px 0px 5px;;label:Uikit-NumberRangeField;',
      }
    : {
        name: '8zdbaj-Uikit-NumberRangeField',
        styles: 'margin:2px 0px 0px 5px;;label:Uikit-NumberRangeField;',
        map: '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFxRXVCIiwiZmlsZSI6ImluZGV4LmpzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgKGMpIDIwMjAgVGhlIE9udGFyaW8gSW5zdGl0dXRlIGZvciBDYW5jZXIgUmVzZWFyY2guIEFsbCByaWdodHMgcmVzZXJ2ZWRcbiAqXG4gKiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2ZcbiAqIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgdjMuMC4gWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGVcbiAqIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS5cbiAqICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4gKlxuICogVEhJUyBTT0ZUV0FSRSBJUyBQUk9WSURFRCBCWSBUSEUgQ09QWVJJR0hUIEhPTERFUlMgQU5EIENPTlRSSUJVVE9SUyBcIkFTIElTXCIgQU5EIEFOWVxuICogRVhQUkVTUyBPUiBJTVBMSUVEIFdBUlJBTlRJRVMsIElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEIFRPLCBUSEUgSU1QTElFRCBXQVJSQU5USUVTXG4gKiBPRiBNRVJDSEFOVEFCSUxJVFkgQU5EIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFSRSBESVNDTEFJTUVELiBJTiBOTyBFVkVOVFxuICogU0hBTEwgVEhFIENPUFlSSUdIVCBIT0xERVIgT1IgQ09OVFJJQlVUT1JTIEJFIExJQUJMRSBGT1IgQU5ZIERJUkVDVCwgSU5ESVJFQ1QsXG4gKiBJTkNJREVOVEFMLCBTUEVDSUFMLCBFWEVNUExBUlksIE9SIENPTlNFUVVFTlRJQUwgREFNQUdFUyAoSU5DTFVESU5HLCBCVVQgTk9UIExJTUlURURcbiAqIFRPLCBQUk9DVVJFTUVOVCBPRiBTVUJTVElUVVRFIEdPT0RTIE9SIFNFUlZJQ0VTOyBMT1NTIE9GIFVTRSwgREFUQSwgT1IgUFJPRklUUztcbiAqIE9SIEJVU0lORVNTIElOVEVSUlVQVElPTikgSE9XRVZFUiBDQVVTRUQgQU5EIE9OIEFOWSBUSEVPUlkgT0YgTElBQklMSVRZLCBXSEVUSEVSXG4gKiBJTiBDT05UUkFDVCwgU1RSSUNUIExJQUJJTElUWSwgT1IgVE9SVCAoSU5DTFVESU5HIE5FR0xJR0VOQ0UgT1IgT1RIRVJXSVNFKSBBUklTSU5HIElOXG4gKiBBTlkgV0FZIE9VVCBPRiBUSEUgVVNFIE9GIFRISVMgU09GVFdBUkUsIEVWRU4gSUYgQURWSVNFRCBPRiBUSEUgUE9TU0lCSUxJVFkgT0YgU1VDSCBEQU1BR0UuXG4gKi9cbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IHsgRmllbGREZXNjcmlwdGlvbkxhYmVsLCBGaWVsZElucHV0V3JhcHBlciB9IGZyb20gJy4vY29tbW9uJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgSW5wdXQgZnJvbSAndWlraXQvZm9ybS9JbnB1dCc7XG5pbXBvcnQgQnV0dG9uIGZyb20gJ3Vpa2l0L0J1dHRvbic7XG5pbXBvcnQgeyB1c2VUaGVtZSB9IGZyb20gJ3Vpa2l0L1RoZW1lUHJvdmlkZXInO1xuaW1wb3J0IFR5cG9ncmFwaHkgZnJvbSAndWlraXQvVHlwb2dyYXBoeSc7XG5jb25zdCBOdW1iZXJSYW5nZUZpZWxkID0gKHsgbWluLCBvbk1pbkNoYW5nZSwgbWF4LCBvbk1heENoYW5nZSwgb25Hb0NsaWNrLCBnb0J1dHRvbkVuYWJsZWQsIHZhbGlkYXRpb24gPSBpID0+IHRydWUsIH0pID0+IHtcbiAgICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gICAgY29uc3QgW21pbkVycm9yU3RhdGUsIHNldE1pbkVycm9yU3RhdGVdID0gUmVhY3QudXNlU3RhdGUoZmFsc2UpO1xuICAgIGNvbnN0IFttYXhFcnJvclN0YXRlLCBzZXRNYXhFcnJvclN0YXRlXSA9IFJlYWN0LnVzZVN0YXRlKGZhbHNlKTtcbiAgICBjb25zdCBlcnJvck1zZyA9ICg8VHlwb2dyYXBoeSB2YXJpYW50PXsnY2FwdGlvbid9IGNvbG9yPXt0aGVtZS5jb2xvcnMuZXJyb3J9PlxuICAgICAgSW52YWxpZFxuICAgIDwvVHlwb2dyYXBoeT4pO1xuICAgIGNvbnN0IGlzSW5wdXRJbnZhbGlkID0gKGlucHV0KSA9PiB7XG4gICAgICAgIGNvbnN0IG51bWJlcklucHV0ID0gTnVtYmVyKGlucHV0KTtcbiAgICAgICAgcmV0dXJuIGlzTmFOKG51bWJlcklucHV0KSB8fCAhdmFsaWRhdGlvbihudW1iZXJJbnB1dCk7XG4gICAgfTtcbiAgICByZXR1cm4gKDxkaXYgY3NzPXtjc3MgYFxuICAgICAgICAke2Nzcyh0aGVtZS50eXBvZ3JhcGh5LmRlZmF1bHQpfVxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBgfT5cbiAgICAgIDxGaWVsZERlc2NyaXB0aW9uTGFiZWw+TWluOjwvRmllbGREZXNjcmlwdGlvbkxhYmVsPlxuICAgICAgPEZpZWxkSW5wdXRXcmFwcGVyPlxuICAgICAgICA8SW5wdXQgZXJyb3I9e21pbkVycm9yU3RhdGV9IGFyaWEtbGFiZWw9XCJtaW5pbXVtX2lucHV0XCIgcGxhY2Vob2xkZXI9XCJlLmcuIDBcIiBzaXplPVwic21cIiB2YWx1ZT17bWlufSBvbkNoYW5nZT17ZSA9PiB7XG4gICAgICAgIG9uTWluQ2hhbmdlKGUudGFyZ2V0LnZhbHVlKTtcbiAgICB9fSBvbkJsdXI9e2UgPT4ge1xuICAgICAgICBzZXRNaW5FcnJvclN0YXRlKGlzSW5wdXRJbnZhbGlkKGUudGFyZ2V0LnZhbHVlKSk7XG4gICAgfX0gZ2V0T3ZlcnJpZGVDc3M9eygpID0+IGNzcyBgXG4gICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDBweDtcbiAgICAgICAgICAgICAgJHtjc3ModGhlbWUudHlwb2dyYXBoeS5kYXRhKX1cbiAgICAgICAgICAgIGB9Lz5cbiAgICAgICAge21pbkVycm9yU3RhdGUgJiYgZXJyb3JNc2d9XG4gICAgICA8L0ZpZWxkSW5wdXRXcmFwcGVyPlxuXG4gICAgICA8RmllbGREZXNjcmlwdGlvbkxhYmVsPk1heDo8L0ZpZWxkRGVzY3JpcHRpb25MYWJlbD5cblxuICAgICAgPEZpZWxkSW5wdXRXcmFwcGVyPlxuICAgICAgICA8SW5wdXQgZXJyb3I9e21heEVycm9yU3RhdGV9IGFyaWEtbGFiZWw9XCJtYXhpbXVtX2lucHV0XCIgcGxhY2Vob2xkZXI9XCJlLmcuIDg1XCIgc2l6ZT1cInNtXCIgdmFsdWU9e21heH0gb25DaGFuZ2U9e2UgPT4ge1xuICAgICAgICBvbk1heENoYW5nZShlLnRhcmdldC52YWx1ZSk7XG4gICAgfX0gb25CbHVyPXtlID0+IHtcbiAgICAgICAgc2V0TWF4RXJyb3JTdGF0ZShpc0lucHV0SW52YWxpZChlLnRhcmdldC52YWx1ZSkpO1xuICAgIH19IGdldE92ZXJyaWRlQ3NzPXsoKSA9PiBjc3MgYFxuICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAwcHggOHB4IDhweCAwcHg7XG4gICAgICAgICAgICAgICR7Y3NzKHRoZW1lLnR5cG9ncmFwaHkuZGF0YSl9XG4gICAgICAgICAgICBgfS8+XG4gICAgICAgIHttYXhFcnJvclN0YXRlICYmIGVycm9yTXNnfVxuICAgICAgPC9GaWVsZElucHV0V3JhcHBlcj5cblxuICAgICAgPEJ1dHRvbiBjc3M9e2NzcyBgXG4gICAgICAgICAgbWFyZ2luOiAycHggMHB4IDBweCA1cHg7XG4gICAgICAgIGB9IHZhcmlhbnQ9XCJzZWNvbmRhcnlcIiBvbkNsaWNrPXtlID0+IG9uR29DbGljaygpfSBkaXNhYmxlZD17IWdvQnV0dG9uRW5hYmxlZH0+XG4gICAgICAgIEdPXG4gICAgICA8L0J1dHRvbj5cbiAgICA8L2Rpdj4pO1xufTtcbmV4cG9ydCBkZWZhdWx0IE51bWJlclJhbmdlRmllbGQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qc3gubWFwIl19 */',
        toString: _EMOTION_STRINGIFIED_CSS_ERROR__,
      };

var NumberRangeField = function NumberRangeField(_ref2) {
  var min = _ref2.min,
    onMinChange = _ref2.onMinChange,
    max = _ref2.max,
    onMaxChange = _ref2.onMaxChange,
    onGoClick = _ref2.onGoClick,
    goButtonEnabled = _ref2.goButtonEnabled,
    _ref2$validation = _ref2.validation,
    validation =
      _ref2$validation === void 0
        ? function (i) {
            return true;
          }
        : _ref2$validation;
  var theme = (0, _ThemeProvider.useTheme)();

  var _React$useState = _react['default'].useState(false),
    _React$useState2 = (0, _slicedToArray2['default'])(_React$useState, 2),
    minErrorState = _React$useState2[0],
    setMinErrorState = _React$useState2[1];

  var _React$useState3 = _react['default'].useState(false),
    _React$useState4 = (0, _slicedToArray2['default'])(_React$useState3, 2),
    maxErrorState = _React$useState4[0],
    setMaxErrorState = _React$useState4[1];

  var errorMsg = (0, _core.jsx)(
    _Typography['default'],
    {
      variant: 'caption',
      color: theme.colors.error,
    },
    'Invalid',
  );

  var isInputInvalid = function isInputInvalid(input) {
    var numberInput = Number(input);
    return isNaN(numberInput) || !validation(numberInput);
  };

  return (0, _core.jsx)(
    'div',
    {
      css: /*#__PURE__*/ (0, _core.css)(
        /*#__PURE__*/ (0, _core.css)(
          theme.typography['default'],
          ';label:Uikit-NumberRangeField;' +
            (process.env.NODE_ENV === 'production'
              ? ''
              : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFxQ1UiLCJmaWxlIjoiaW5kZXguanN4Iiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAoYykgMjAyMCBUaGUgT250YXJpbyBJbnN0aXR1dGUgZm9yIENhbmNlciBSZXNlYXJjaC4gQWxsIHJpZ2h0cyByZXNlcnZlZFxuICpcbiAqIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMgYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZlxuICogdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSB2My4wLiBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZVxuICogR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtLlxuICogIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiAqXG4gKiBUSElTIFNPRlRXQVJFIElTIFBST1ZJREVEIEJZIFRIRSBDT1BZUklHSFQgSE9MREVSUyBBTkQgQ09OVFJJQlVUT1JTIFwiQVMgSVNcIiBBTkQgQU5ZXG4gKiBFWFBSRVNTIE9SIElNUExJRUQgV0FSUkFOVElFUywgSU5DTFVESU5HLCBCVVQgTk9UIExJTUlURUQgVE8sIFRIRSBJTVBMSUVEIFdBUlJBTlRJRVNcbiAqIE9GIE1FUkNIQU5UQUJJTElUWSBBTkQgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQVJFIERJU0NMQUlNRUQuIElOIE5PIEVWRU5UXG4gKiBTSEFMTCBUSEUgQ09QWVJJR0hUIEhPTERFUiBPUiBDT05UUklCVVRPUlMgQkUgTElBQkxFIEZPUiBBTlkgRElSRUNULCBJTkRJUkVDVCxcbiAqIElOQ0lERU5UQUwsIFNQRUNJQUwsIEVYRU1QTEFSWSwgT1IgQ09OU0VRVUVOVElBTCBEQU1BR0VTIChJTkNMVURJTkcsIEJVVCBOT1QgTElNSVRFRFxuICogVE8sIFBST0NVUkVNRU5UIE9GIFNVQlNUSVRVVEUgR09PRFMgT1IgU0VSVklDRVM7IExPU1MgT0YgVVNFLCBEQVRBLCBPUiBQUk9GSVRTO1xuICogT1IgQlVTSU5FU1MgSU5URVJSVVBUSU9OKSBIT1dFVkVSIENBVVNFRCBBTkQgT04gQU5ZIFRIRU9SWSBPRiBMSUFCSUxJVFksIFdIRVRIRVJcbiAqIElOIENPTlRSQUNULCBTVFJJQ1QgTElBQklMSVRZLCBPUiBUT1JUIChJTkNMVURJTkcgTkVHTElHRU5DRSBPUiBPVEhFUldJU0UpIEFSSVNJTkcgSU5cbiAqIEFOWSBXQVkgT1VUIE9GIFRIRSBVU0UgT0YgVEhJUyBTT0ZUV0FSRSwgRVZFTiBJRiBBRFZJU0VEIE9GIFRIRSBQT1NTSUJJTElUWSBPRiBTVUNIIERBTUFHRS5cbiAqL1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgeyBGaWVsZERlc2NyaXB0aW9uTGFiZWwsIEZpZWxkSW5wdXRXcmFwcGVyIH0gZnJvbSAnLi9jb21tb24nO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBJbnB1dCBmcm9tICd1aWtpdC9mb3JtL0lucHV0JztcbmltcG9ydCBCdXR0b24gZnJvbSAndWlraXQvQnV0dG9uJztcbmltcG9ydCB7IHVzZVRoZW1lIH0gZnJvbSAndWlraXQvVGhlbWVQcm92aWRlcic7XG5pbXBvcnQgVHlwb2dyYXBoeSBmcm9tICd1aWtpdC9UeXBvZ3JhcGh5JztcbmNvbnN0IE51bWJlclJhbmdlRmllbGQgPSAoeyBtaW4sIG9uTWluQ2hhbmdlLCBtYXgsIG9uTWF4Q2hhbmdlLCBvbkdvQ2xpY2ssIGdvQnV0dG9uRW5hYmxlZCwgdmFsaWRhdGlvbiA9IGkgPT4gdHJ1ZSwgfSkgPT4ge1xuICAgIGNvbnN0IHRoZW1lID0gdXNlVGhlbWUoKTtcbiAgICBjb25zdCBbbWluRXJyb3JTdGF0ZSwgc2V0TWluRXJyb3JTdGF0ZV0gPSBSZWFjdC51c2VTdGF0ZShmYWxzZSk7XG4gICAgY29uc3QgW21heEVycm9yU3RhdGUsIHNldE1heEVycm9yU3RhdGVdID0gUmVhY3QudXNlU3RhdGUoZmFsc2UpO1xuICAgIGNvbnN0IGVycm9yTXNnID0gKDxUeXBvZ3JhcGh5IHZhcmlhbnQ9eydjYXB0aW9uJ30gY29sb3I9e3RoZW1lLmNvbG9ycy5lcnJvcn0+XG4gICAgICBJbnZhbGlkXG4gICAgPC9UeXBvZ3JhcGh5Pik7XG4gICAgY29uc3QgaXNJbnB1dEludmFsaWQgPSAoaW5wdXQpID0+IHtcbiAgICAgICAgY29uc3QgbnVtYmVySW5wdXQgPSBOdW1iZXIoaW5wdXQpO1xuICAgICAgICByZXR1cm4gaXNOYU4obnVtYmVySW5wdXQpIHx8ICF2YWxpZGF0aW9uKG51bWJlcklucHV0KTtcbiAgICB9O1xuICAgIHJldHVybiAoPGRpdiBjc3M9e2NzcyBgXG4gICAgICAgICR7Y3NzKHRoZW1lLnR5cG9ncmFwaHkuZGVmYXVsdCl9XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgIGB9PlxuICAgICAgPEZpZWxkRGVzY3JpcHRpb25MYWJlbD5NaW46PC9GaWVsZERlc2NyaXB0aW9uTGFiZWw+XG4gICAgICA8RmllbGRJbnB1dFdyYXBwZXI+XG4gICAgICAgIDxJbnB1dCBlcnJvcj17bWluRXJyb3JTdGF0ZX0gYXJpYS1sYWJlbD1cIm1pbmltdW1faW5wdXRcIiBwbGFjZWhvbGRlcj1cImUuZy4gMFwiIHNpemU9XCJzbVwiIHZhbHVlPXttaW59IG9uQ2hhbmdlPXtlID0+IHtcbiAgICAgICAgb25NaW5DaGFuZ2UoZS50YXJnZXQudmFsdWUpO1xuICAgIH19IG9uQmx1cj17ZSA9PiB7XG4gICAgICAgIHNldE1pbkVycm9yU3RhdGUoaXNJbnB1dEludmFsaWQoZS50YXJnZXQudmFsdWUpKTtcbiAgICB9fSBnZXRPdmVycmlkZUNzcz17KCkgPT4gY3NzIGBcbiAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMHB4O1xuICAgICAgICAgICAgICAke2Nzcyh0aGVtZS50eXBvZ3JhcGh5LmRhdGEpfVxuICAgICAgICAgICAgYH0vPlxuICAgICAgICB7bWluRXJyb3JTdGF0ZSAmJiBlcnJvck1zZ31cbiAgICAgIDwvRmllbGRJbnB1dFdyYXBwZXI+XG5cbiAgICAgIDxGaWVsZERlc2NyaXB0aW9uTGFiZWw+TWF4OjwvRmllbGREZXNjcmlwdGlvbkxhYmVsPlxuXG4gICAgICA8RmllbGRJbnB1dFdyYXBwZXI+XG4gICAgICAgIDxJbnB1dCBlcnJvcj17bWF4RXJyb3JTdGF0ZX0gYXJpYS1sYWJlbD1cIm1heGltdW1faW5wdXRcIiBwbGFjZWhvbGRlcj1cImUuZy4gODVcIiBzaXplPVwic21cIiB2YWx1ZT17bWF4fSBvbkNoYW5nZT17ZSA9PiB7XG4gICAgICAgIG9uTWF4Q2hhbmdlKGUudGFyZ2V0LnZhbHVlKTtcbiAgICB9fSBvbkJsdXI9e2UgPT4ge1xuICAgICAgICBzZXRNYXhFcnJvclN0YXRlKGlzSW5wdXRJbnZhbGlkKGUudGFyZ2V0LnZhbHVlKSk7XG4gICAgfX0gZ2V0T3ZlcnJpZGVDc3M9eygpID0+IGNzcyBgXG4gICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDBweCA4cHggOHB4IDBweDtcbiAgICAgICAgICAgICAgJHtjc3ModGhlbWUudHlwb2dyYXBoeS5kYXRhKX1cbiAgICAgICAgICAgIGB9Lz5cbiAgICAgICAge21heEVycm9yU3RhdGUgJiYgZXJyb3JNc2d9XG4gICAgICA8L0ZpZWxkSW5wdXRXcmFwcGVyPlxuXG4gICAgICA8QnV0dG9uIGNzcz17Y3NzIGBcbiAgICAgICAgICBtYXJnaW46IDJweCAwcHggMHB4IDVweDtcbiAgICAgICAgYH0gdmFyaWFudD1cInNlY29uZGFyeVwiIG9uQ2xpY2s9e2UgPT4gb25Hb0NsaWNrKCl9IGRpc2FibGVkPXshZ29CdXR0b25FbmFibGVkfT5cbiAgICAgICAgR09cbiAgICAgIDwvQnV0dG9uPlxuICAgIDwvZGl2Pik7XG59O1xuZXhwb3J0IGRlZmF1bHQgTnVtYmVyUmFuZ2VGaWVsZDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzeC5tYXAiXX0= */'),
        ),
        ' display:flex;align-items:flex-start;width:100%;;label:Uikit-NumberRangeField;' +
          (process.env.NODE_ENV === 'production'
            ? ''
            : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFvQzBCIiwiZmlsZSI6ImluZGV4LmpzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgKGMpIDIwMjAgVGhlIE9udGFyaW8gSW5zdGl0dXRlIGZvciBDYW5jZXIgUmVzZWFyY2guIEFsbCByaWdodHMgcmVzZXJ2ZWRcbiAqXG4gKiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2ZcbiAqIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgdjMuMC4gWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGVcbiAqIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS5cbiAqICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4gKlxuICogVEhJUyBTT0ZUV0FSRSBJUyBQUk9WSURFRCBCWSBUSEUgQ09QWVJJR0hUIEhPTERFUlMgQU5EIENPTlRSSUJVVE9SUyBcIkFTIElTXCIgQU5EIEFOWVxuICogRVhQUkVTUyBPUiBJTVBMSUVEIFdBUlJBTlRJRVMsIElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEIFRPLCBUSEUgSU1QTElFRCBXQVJSQU5USUVTXG4gKiBPRiBNRVJDSEFOVEFCSUxJVFkgQU5EIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFSRSBESVNDTEFJTUVELiBJTiBOTyBFVkVOVFxuICogU0hBTEwgVEhFIENPUFlSSUdIVCBIT0xERVIgT1IgQ09OVFJJQlVUT1JTIEJFIExJQUJMRSBGT1IgQU5ZIERJUkVDVCwgSU5ESVJFQ1QsXG4gKiBJTkNJREVOVEFMLCBTUEVDSUFMLCBFWEVNUExBUlksIE9SIENPTlNFUVVFTlRJQUwgREFNQUdFUyAoSU5DTFVESU5HLCBCVVQgTk9UIExJTUlURURcbiAqIFRPLCBQUk9DVVJFTUVOVCBPRiBTVUJTVElUVVRFIEdPT0RTIE9SIFNFUlZJQ0VTOyBMT1NTIE9GIFVTRSwgREFUQSwgT1IgUFJPRklUUztcbiAqIE9SIEJVU0lORVNTIElOVEVSUlVQVElPTikgSE9XRVZFUiBDQVVTRUQgQU5EIE9OIEFOWSBUSEVPUlkgT0YgTElBQklMSVRZLCBXSEVUSEVSXG4gKiBJTiBDT05UUkFDVCwgU1RSSUNUIExJQUJJTElUWSwgT1IgVE9SVCAoSU5DTFVESU5HIE5FR0xJR0VOQ0UgT1IgT1RIRVJXSVNFKSBBUklTSU5HIElOXG4gKiBBTlkgV0FZIE9VVCBPRiBUSEUgVVNFIE9GIFRISVMgU09GVFdBUkUsIEVWRU4gSUYgQURWSVNFRCBPRiBUSEUgUE9TU0lCSUxJVFkgT0YgU1VDSCBEQU1BR0UuXG4gKi9cbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IHsgRmllbGREZXNjcmlwdGlvbkxhYmVsLCBGaWVsZElucHV0V3JhcHBlciB9IGZyb20gJy4vY29tbW9uJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgSW5wdXQgZnJvbSAndWlraXQvZm9ybS9JbnB1dCc7XG5pbXBvcnQgQnV0dG9uIGZyb20gJ3Vpa2l0L0J1dHRvbic7XG5pbXBvcnQgeyB1c2VUaGVtZSB9IGZyb20gJ3Vpa2l0L1RoZW1lUHJvdmlkZXInO1xuaW1wb3J0IFR5cG9ncmFwaHkgZnJvbSAndWlraXQvVHlwb2dyYXBoeSc7XG5jb25zdCBOdW1iZXJSYW5nZUZpZWxkID0gKHsgbWluLCBvbk1pbkNoYW5nZSwgbWF4LCBvbk1heENoYW5nZSwgb25Hb0NsaWNrLCBnb0J1dHRvbkVuYWJsZWQsIHZhbGlkYXRpb24gPSBpID0+IHRydWUsIH0pID0+IHtcbiAgICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gICAgY29uc3QgW21pbkVycm9yU3RhdGUsIHNldE1pbkVycm9yU3RhdGVdID0gUmVhY3QudXNlU3RhdGUoZmFsc2UpO1xuICAgIGNvbnN0IFttYXhFcnJvclN0YXRlLCBzZXRNYXhFcnJvclN0YXRlXSA9IFJlYWN0LnVzZVN0YXRlKGZhbHNlKTtcbiAgICBjb25zdCBlcnJvck1zZyA9ICg8VHlwb2dyYXBoeSB2YXJpYW50PXsnY2FwdGlvbid9IGNvbG9yPXt0aGVtZS5jb2xvcnMuZXJyb3J9PlxuICAgICAgSW52YWxpZFxuICAgIDwvVHlwb2dyYXBoeT4pO1xuICAgIGNvbnN0IGlzSW5wdXRJbnZhbGlkID0gKGlucHV0KSA9PiB7XG4gICAgICAgIGNvbnN0IG51bWJlcklucHV0ID0gTnVtYmVyKGlucHV0KTtcbiAgICAgICAgcmV0dXJuIGlzTmFOKG51bWJlcklucHV0KSB8fCAhdmFsaWRhdGlvbihudW1iZXJJbnB1dCk7XG4gICAgfTtcbiAgICByZXR1cm4gKDxkaXYgY3NzPXtjc3MgYFxuICAgICAgICAke2Nzcyh0aGVtZS50eXBvZ3JhcGh5LmRlZmF1bHQpfVxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBgfT5cbiAgICAgIDxGaWVsZERlc2NyaXB0aW9uTGFiZWw+TWluOjwvRmllbGREZXNjcmlwdGlvbkxhYmVsPlxuICAgICAgPEZpZWxkSW5wdXRXcmFwcGVyPlxuICAgICAgICA8SW5wdXQgZXJyb3I9e21pbkVycm9yU3RhdGV9IGFyaWEtbGFiZWw9XCJtaW5pbXVtX2lucHV0XCIgcGxhY2Vob2xkZXI9XCJlLmcuIDBcIiBzaXplPVwic21cIiB2YWx1ZT17bWlufSBvbkNoYW5nZT17ZSA9PiB7XG4gICAgICAgIG9uTWluQ2hhbmdlKGUudGFyZ2V0LnZhbHVlKTtcbiAgICB9fSBvbkJsdXI9e2UgPT4ge1xuICAgICAgICBzZXRNaW5FcnJvclN0YXRlKGlzSW5wdXRJbnZhbGlkKGUudGFyZ2V0LnZhbHVlKSk7XG4gICAgfX0gZ2V0T3ZlcnJpZGVDc3M9eygpID0+IGNzcyBgXG4gICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDBweDtcbiAgICAgICAgICAgICAgJHtjc3ModGhlbWUudHlwb2dyYXBoeS5kYXRhKX1cbiAgICAgICAgICAgIGB9Lz5cbiAgICAgICAge21pbkVycm9yU3RhdGUgJiYgZXJyb3JNc2d9XG4gICAgICA8L0ZpZWxkSW5wdXRXcmFwcGVyPlxuXG4gICAgICA8RmllbGREZXNjcmlwdGlvbkxhYmVsPk1heDo8L0ZpZWxkRGVzY3JpcHRpb25MYWJlbD5cblxuICAgICAgPEZpZWxkSW5wdXRXcmFwcGVyPlxuICAgICAgICA8SW5wdXQgZXJyb3I9e21heEVycm9yU3RhdGV9IGFyaWEtbGFiZWw9XCJtYXhpbXVtX2lucHV0XCIgcGxhY2Vob2xkZXI9XCJlLmcuIDg1XCIgc2l6ZT1cInNtXCIgdmFsdWU9e21heH0gb25DaGFuZ2U9e2UgPT4ge1xuICAgICAgICBvbk1heENoYW5nZShlLnRhcmdldC52YWx1ZSk7XG4gICAgfX0gb25CbHVyPXtlID0+IHtcbiAgICAgICAgc2V0TWF4RXJyb3JTdGF0ZShpc0lucHV0SW52YWxpZChlLnRhcmdldC52YWx1ZSkpO1xuICAgIH19IGdldE92ZXJyaWRlQ3NzPXsoKSA9PiBjc3MgYFxuICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAwcHggOHB4IDhweCAwcHg7XG4gICAgICAgICAgICAgICR7Y3NzKHRoZW1lLnR5cG9ncmFwaHkuZGF0YSl9XG4gICAgICAgICAgICBgfS8+XG4gICAgICAgIHttYXhFcnJvclN0YXRlICYmIGVycm9yTXNnfVxuICAgICAgPC9GaWVsZElucHV0V3JhcHBlcj5cblxuICAgICAgPEJ1dHRvbiBjc3M9e2NzcyBgXG4gICAgICAgICAgbWFyZ2luOiAycHggMHB4IDBweCA1cHg7XG4gICAgICAgIGB9IHZhcmlhbnQ9XCJzZWNvbmRhcnlcIiBvbkNsaWNrPXtlID0+IG9uR29DbGljaygpfSBkaXNhYmxlZD17IWdvQnV0dG9uRW5hYmxlZH0+XG4gICAgICAgIEdPXG4gICAgICA8L0J1dHRvbj5cbiAgICA8L2Rpdj4pO1xufTtcbmV4cG9ydCBkZWZhdWx0IE51bWJlclJhbmdlRmllbGQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qc3gubWFwIl19 */'),
      ),
    },
    (0, _core.jsx)(_common.FieldDescriptionLabel, null, 'Min:'),
    (0, _core.jsx)(
      _common.FieldInputWrapper,
      null,
      (0, _core.jsx)(_Input['default'], {
        error: minErrorState,
        'aria-label': 'minimum_input',
        placeholder: 'e.g. 0',
        size: 'sm',
        value: min,
        onChange: function onChange(e) {
          onMinChange(e.target.value);
        },
        onBlur: function onBlur(e) {
          setMinErrorState(isInputInvalid(e.target.value));
        },
        getOverrideCss: function getOverrideCss() {
          return /*#__PURE__*/ (0, _core.css)(
            'border-radius:0px;',
            /*#__PURE__*/ (0, _core.css)(
              theme.typography.data,
              ';label:Uikit-NumberRangeField;' +
                (process.env.NODE_ENV === 'production'
                  ? ''
                  : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFrRGdCIiwiZmlsZSI6ImluZGV4LmpzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgKGMpIDIwMjAgVGhlIE9udGFyaW8gSW5zdGl0dXRlIGZvciBDYW5jZXIgUmVzZWFyY2guIEFsbCByaWdodHMgcmVzZXJ2ZWRcbiAqXG4gKiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2ZcbiAqIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgdjMuMC4gWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGVcbiAqIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS5cbiAqICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4gKlxuICogVEhJUyBTT0ZUV0FSRSBJUyBQUk9WSURFRCBCWSBUSEUgQ09QWVJJR0hUIEhPTERFUlMgQU5EIENPTlRSSUJVVE9SUyBcIkFTIElTXCIgQU5EIEFOWVxuICogRVhQUkVTUyBPUiBJTVBMSUVEIFdBUlJBTlRJRVMsIElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEIFRPLCBUSEUgSU1QTElFRCBXQVJSQU5USUVTXG4gKiBPRiBNRVJDSEFOVEFCSUxJVFkgQU5EIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFSRSBESVNDTEFJTUVELiBJTiBOTyBFVkVOVFxuICogU0hBTEwgVEhFIENPUFlSSUdIVCBIT0xERVIgT1IgQ09OVFJJQlVUT1JTIEJFIExJQUJMRSBGT1IgQU5ZIERJUkVDVCwgSU5ESVJFQ1QsXG4gKiBJTkNJREVOVEFMLCBTUEVDSUFMLCBFWEVNUExBUlksIE9SIENPTlNFUVVFTlRJQUwgREFNQUdFUyAoSU5DTFVESU5HLCBCVVQgTk9UIExJTUlURURcbiAqIFRPLCBQUk9DVVJFTUVOVCBPRiBTVUJTVElUVVRFIEdPT0RTIE9SIFNFUlZJQ0VTOyBMT1NTIE9GIFVTRSwgREFUQSwgT1IgUFJPRklUUztcbiAqIE9SIEJVU0lORVNTIElOVEVSUlVQVElPTikgSE9XRVZFUiBDQVVTRUQgQU5EIE9OIEFOWSBUSEVPUlkgT0YgTElBQklMSVRZLCBXSEVUSEVSXG4gKiBJTiBDT05UUkFDVCwgU1RSSUNUIExJQUJJTElUWSwgT1IgVE9SVCAoSU5DTFVESU5HIE5FR0xJR0VOQ0UgT1IgT1RIRVJXSVNFKSBBUklTSU5HIElOXG4gKiBBTlkgV0FZIE9VVCBPRiBUSEUgVVNFIE9GIFRISVMgU09GVFdBUkUsIEVWRU4gSUYgQURWSVNFRCBPRiBUSEUgUE9TU0lCSUxJVFkgT0YgU1VDSCBEQU1BR0UuXG4gKi9cbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IHsgRmllbGREZXNjcmlwdGlvbkxhYmVsLCBGaWVsZElucHV0V3JhcHBlciB9IGZyb20gJy4vY29tbW9uJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgSW5wdXQgZnJvbSAndWlraXQvZm9ybS9JbnB1dCc7XG5pbXBvcnQgQnV0dG9uIGZyb20gJ3Vpa2l0L0J1dHRvbic7XG5pbXBvcnQgeyB1c2VUaGVtZSB9IGZyb20gJ3Vpa2l0L1RoZW1lUHJvdmlkZXInO1xuaW1wb3J0IFR5cG9ncmFwaHkgZnJvbSAndWlraXQvVHlwb2dyYXBoeSc7XG5jb25zdCBOdW1iZXJSYW5nZUZpZWxkID0gKHsgbWluLCBvbk1pbkNoYW5nZSwgbWF4LCBvbk1heENoYW5nZSwgb25Hb0NsaWNrLCBnb0J1dHRvbkVuYWJsZWQsIHZhbGlkYXRpb24gPSBpID0+IHRydWUsIH0pID0+IHtcbiAgICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gICAgY29uc3QgW21pbkVycm9yU3RhdGUsIHNldE1pbkVycm9yU3RhdGVdID0gUmVhY3QudXNlU3RhdGUoZmFsc2UpO1xuICAgIGNvbnN0IFttYXhFcnJvclN0YXRlLCBzZXRNYXhFcnJvclN0YXRlXSA9IFJlYWN0LnVzZVN0YXRlKGZhbHNlKTtcbiAgICBjb25zdCBlcnJvck1zZyA9ICg8VHlwb2dyYXBoeSB2YXJpYW50PXsnY2FwdGlvbid9IGNvbG9yPXt0aGVtZS5jb2xvcnMuZXJyb3J9PlxuICAgICAgSW52YWxpZFxuICAgIDwvVHlwb2dyYXBoeT4pO1xuICAgIGNvbnN0IGlzSW5wdXRJbnZhbGlkID0gKGlucHV0KSA9PiB7XG4gICAgICAgIGNvbnN0IG51bWJlcklucHV0ID0gTnVtYmVyKGlucHV0KTtcbiAgICAgICAgcmV0dXJuIGlzTmFOKG51bWJlcklucHV0KSB8fCAhdmFsaWRhdGlvbihudW1iZXJJbnB1dCk7XG4gICAgfTtcbiAgICByZXR1cm4gKDxkaXYgY3NzPXtjc3MgYFxuICAgICAgICAke2Nzcyh0aGVtZS50eXBvZ3JhcGh5LmRlZmF1bHQpfVxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBgfT5cbiAgICAgIDxGaWVsZERlc2NyaXB0aW9uTGFiZWw+TWluOjwvRmllbGREZXNjcmlwdGlvbkxhYmVsPlxuICAgICAgPEZpZWxkSW5wdXRXcmFwcGVyPlxuICAgICAgICA8SW5wdXQgZXJyb3I9e21pbkVycm9yU3RhdGV9IGFyaWEtbGFiZWw9XCJtaW5pbXVtX2lucHV0XCIgcGxhY2Vob2xkZXI9XCJlLmcuIDBcIiBzaXplPVwic21cIiB2YWx1ZT17bWlufSBvbkNoYW5nZT17ZSA9PiB7XG4gICAgICAgIG9uTWluQ2hhbmdlKGUudGFyZ2V0LnZhbHVlKTtcbiAgICB9fSBvbkJsdXI9e2UgPT4ge1xuICAgICAgICBzZXRNaW5FcnJvclN0YXRlKGlzSW5wdXRJbnZhbGlkKGUudGFyZ2V0LnZhbHVlKSk7XG4gICAgfX0gZ2V0T3ZlcnJpZGVDc3M9eygpID0+IGNzcyBgXG4gICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDBweDtcbiAgICAgICAgICAgICAgJHtjc3ModGhlbWUudHlwb2dyYXBoeS5kYXRhKX1cbiAgICAgICAgICAgIGB9Lz5cbiAgICAgICAge21pbkVycm9yU3RhdGUgJiYgZXJyb3JNc2d9XG4gICAgICA8L0ZpZWxkSW5wdXRXcmFwcGVyPlxuXG4gICAgICA8RmllbGREZXNjcmlwdGlvbkxhYmVsPk1heDo8L0ZpZWxkRGVzY3JpcHRpb25MYWJlbD5cblxuICAgICAgPEZpZWxkSW5wdXRXcmFwcGVyPlxuICAgICAgICA8SW5wdXQgZXJyb3I9e21heEVycm9yU3RhdGV9IGFyaWEtbGFiZWw9XCJtYXhpbXVtX2lucHV0XCIgcGxhY2Vob2xkZXI9XCJlLmcuIDg1XCIgc2l6ZT1cInNtXCIgdmFsdWU9e21heH0gb25DaGFuZ2U9e2UgPT4ge1xuICAgICAgICBvbk1heENoYW5nZShlLnRhcmdldC52YWx1ZSk7XG4gICAgfX0gb25CbHVyPXtlID0+IHtcbiAgICAgICAgc2V0TWF4RXJyb3JTdGF0ZShpc0lucHV0SW52YWxpZChlLnRhcmdldC52YWx1ZSkpO1xuICAgIH19IGdldE92ZXJyaWRlQ3NzPXsoKSA9PiBjc3MgYFxuICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAwcHggOHB4IDhweCAwcHg7XG4gICAgICAgICAgICAgICR7Y3NzKHRoZW1lLnR5cG9ncmFwaHkuZGF0YSl9XG4gICAgICAgICAgICBgfS8+XG4gICAgICAgIHttYXhFcnJvclN0YXRlICYmIGVycm9yTXNnfVxuICAgICAgPC9GaWVsZElucHV0V3JhcHBlcj5cblxuICAgICAgPEJ1dHRvbiBjc3M9e2NzcyBgXG4gICAgICAgICAgbWFyZ2luOiAycHggMHB4IDBweCA1cHg7XG4gICAgICAgIGB9IHZhcmlhbnQ9XCJzZWNvbmRhcnlcIiBvbkNsaWNrPXtlID0+IG9uR29DbGljaygpfSBkaXNhYmxlZD17IWdvQnV0dG9uRW5hYmxlZH0+XG4gICAgICAgIEdPXG4gICAgICA8L0J1dHRvbj5cbiAgICA8L2Rpdj4pO1xufTtcbmV4cG9ydCBkZWZhdWx0IE51bWJlclJhbmdlRmllbGQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qc3gubWFwIl19 */'),
            ),
            ';label:Uikit-NumberRangeField;' +
              (process.env.NODE_ENV === 'production'
                ? ''
                : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFnRGlDIiwiZmlsZSI6ImluZGV4LmpzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgKGMpIDIwMjAgVGhlIE9udGFyaW8gSW5zdGl0dXRlIGZvciBDYW5jZXIgUmVzZWFyY2guIEFsbCByaWdodHMgcmVzZXJ2ZWRcbiAqXG4gKiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2ZcbiAqIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgdjMuMC4gWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGVcbiAqIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS5cbiAqICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4gKlxuICogVEhJUyBTT0ZUV0FSRSBJUyBQUk9WSURFRCBCWSBUSEUgQ09QWVJJR0hUIEhPTERFUlMgQU5EIENPTlRSSUJVVE9SUyBcIkFTIElTXCIgQU5EIEFOWVxuICogRVhQUkVTUyBPUiBJTVBMSUVEIFdBUlJBTlRJRVMsIElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEIFRPLCBUSEUgSU1QTElFRCBXQVJSQU5USUVTXG4gKiBPRiBNRVJDSEFOVEFCSUxJVFkgQU5EIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFSRSBESVNDTEFJTUVELiBJTiBOTyBFVkVOVFxuICogU0hBTEwgVEhFIENPUFlSSUdIVCBIT0xERVIgT1IgQ09OVFJJQlVUT1JTIEJFIExJQUJMRSBGT1IgQU5ZIERJUkVDVCwgSU5ESVJFQ1QsXG4gKiBJTkNJREVOVEFMLCBTUEVDSUFMLCBFWEVNUExBUlksIE9SIENPTlNFUVVFTlRJQUwgREFNQUdFUyAoSU5DTFVESU5HLCBCVVQgTk9UIExJTUlURURcbiAqIFRPLCBQUk9DVVJFTUVOVCBPRiBTVUJTVElUVVRFIEdPT0RTIE9SIFNFUlZJQ0VTOyBMT1NTIE9GIFVTRSwgREFUQSwgT1IgUFJPRklUUztcbiAqIE9SIEJVU0lORVNTIElOVEVSUlVQVElPTikgSE9XRVZFUiBDQVVTRUQgQU5EIE9OIEFOWSBUSEVPUlkgT0YgTElBQklMSVRZLCBXSEVUSEVSXG4gKiBJTiBDT05UUkFDVCwgU1RSSUNUIExJQUJJTElUWSwgT1IgVE9SVCAoSU5DTFVESU5HIE5FR0xJR0VOQ0UgT1IgT1RIRVJXSVNFKSBBUklTSU5HIElOXG4gKiBBTlkgV0FZIE9VVCBPRiBUSEUgVVNFIE9GIFRISVMgU09GVFdBUkUsIEVWRU4gSUYgQURWSVNFRCBPRiBUSEUgUE9TU0lCSUxJVFkgT0YgU1VDSCBEQU1BR0UuXG4gKi9cbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IHsgRmllbGREZXNjcmlwdGlvbkxhYmVsLCBGaWVsZElucHV0V3JhcHBlciB9IGZyb20gJy4vY29tbW9uJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgSW5wdXQgZnJvbSAndWlraXQvZm9ybS9JbnB1dCc7XG5pbXBvcnQgQnV0dG9uIGZyb20gJ3Vpa2l0L0J1dHRvbic7XG5pbXBvcnQgeyB1c2VUaGVtZSB9IGZyb20gJ3Vpa2l0L1RoZW1lUHJvdmlkZXInO1xuaW1wb3J0IFR5cG9ncmFwaHkgZnJvbSAndWlraXQvVHlwb2dyYXBoeSc7XG5jb25zdCBOdW1iZXJSYW5nZUZpZWxkID0gKHsgbWluLCBvbk1pbkNoYW5nZSwgbWF4LCBvbk1heENoYW5nZSwgb25Hb0NsaWNrLCBnb0J1dHRvbkVuYWJsZWQsIHZhbGlkYXRpb24gPSBpID0+IHRydWUsIH0pID0+IHtcbiAgICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gICAgY29uc3QgW21pbkVycm9yU3RhdGUsIHNldE1pbkVycm9yU3RhdGVdID0gUmVhY3QudXNlU3RhdGUoZmFsc2UpO1xuICAgIGNvbnN0IFttYXhFcnJvclN0YXRlLCBzZXRNYXhFcnJvclN0YXRlXSA9IFJlYWN0LnVzZVN0YXRlKGZhbHNlKTtcbiAgICBjb25zdCBlcnJvck1zZyA9ICg8VHlwb2dyYXBoeSB2YXJpYW50PXsnY2FwdGlvbid9IGNvbG9yPXt0aGVtZS5jb2xvcnMuZXJyb3J9PlxuICAgICAgSW52YWxpZFxuICAgIDwvVHlwb2dyYXBoeT4pO1xuICAgIGNvbnN0IGlzSW5wdXRJbnZhbGlkID0gKGlucHV0KSA9PiB7XG4gICAgICAgIGNvbnN0IG51bWJlcklucHV0ID0gTnVtYmVyKGlucHV0KTtcbiAgICAgICAgcmV0dXJuIGlzTmFOKG51bWJlcklucHV0KSB8fCAhdmFsaWRhdGlvbihudW1iZXJJbnB1dCk7XG4gICAgfTtcbiAgICByZXR1cm4gKDxkaXYgY3NzPXtjc3MgYFxuICAgICAgICAke2Nzcyh0aGVtZS50eXBvZ3JhcGh5LmRlZmF1bHQpfVxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBgfT5cbiAgICAgIDxGaWVsZERlc2NyaXB0aW9uTGFiZWw+TWluOjwvRmllbGREZXNjcmlwdGlvbkxhYmVsPlxuICAgICAgPEZpZWxkSW5wdXRXcmFwcGVyPlxuICAgICAgICA8SW5wdXQgZXJyb3I9e21pbkVycm9yU3RhdGV9IGFyaWEtbGFiZWw9XCJtaW5pbXVtX2lucHV0XCIgcGxhY2Vob2xkZXI9XCJlLmcuIDBcIiBzaXplPVwic21cIiB2YWx1ZT17bWlufSBvbkNoYW5nZT17ZSA9PiB7XG4gICAgICAgIG9uTWluQ2hhbmdlKGUudGFyZ2V0LnZhbHVlKTtcbiAgICB9fSBvbkJsdXI9e2UgPT4ge1xuICAgICAgICBzZXRNaW5FcnJvclN0YXRlKGlzSW5wdXRJbnZhbGlkKGUudGFyZ2V0LnZhbHVlKSk7XG4gICAgfX0gZ2V0T3ZlcnJpZGVDc3M9eygpID0+IGNzcyBgXG4gICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDBweDtcbiAgICAgICAgICAgICAgJHtjc3ModGhlbWUudHlwb2dyYXBoeS5kYXRhKX1cbiAgICAgICAgICAgIGB9Lz5cbiAgICAgICAge21pbkVycm9yU3RhdGUgJiYgZXJyb3JNc2d9XG4gICAgICA8L0ZpZWxkSW5wdXRXcmFwcGVyPlxuXG4gICAgICA8RmllbGREZXNjcmlwdGlvbkxhYmVsPk1heDo8L0ZpZWxkRGVzY3JpcHRpb25MYWJlbD5cblxuICAgICAgPEZpZWxkSW5wdXRXcmFwcGVyPlxuICAgICAgICA8SW5wdXQgZXJyb3I9e21heEVycm9yU3RhdGV9IGFyaWEtbGFiZWw9XCJtYXhpbXVtX2lucHV0XCIgcGxhY2Vob2xkZXI9XCJlLmcuIDg1XCIgc2l6ZT1cInNtXCIgdmFsdWU9e21heH0gb25DaGFuZ2U9e2UgPT4ge1xuICAgICAgICBvbk1heENoYW5nZShlLnRhcmdldC52YWx1ZSk7XG4gICAgfX0gb25CbHVyPXtlID0+IHtcbiAgICAgICAgc2V0TWF4RXJyb3JTdGF0ZShpc0lucHV0SW52YWxpZChlLnRhcmdldC52YWx1ZSkpO1xuICAgIH19IGdldE92ZXJyaWRlQ3NzPXsoKSA9PiBjc3MgYFxuICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAwcHggOHB4IDhweCAwcHg7XG4gICAgICAgICAgICAgICR7Y3NzKHRoZW1lLnR5cG9ncmFwaHkuZGF0YSl9XG4gICAgICAgICAgICBgfS8+XG4gICAgICAgIHttYXhFcnJvclN0YXRlICYmIGVycm9yTXNnfVxuICAgICAgPC9GaWVsZElucHV0V3JhcHBlcj5cblxuICAgICAgPEJ1dHRvbiBjc3M9e2NzcyBgXG4gICAgICAgICAgbWFyZ2luOiAycHggMHB4IDBweCA1cHg7XG4gICAgICAgIGB9IHZhcmlhbnQ9XCJzZWNvbmRhcnlcIiBvbkNsaWNrPXtlID0+IG9uR29DbGljaygpfSBkaXNhYmxlZD17IWdvQnV0dG9uRW5hYmxlZH0+XG4gICAgICAgIEdPXG4gICAgICA8L0J1dHRvbj5cbiAgICA8L2Rpdj4pO1xufTtcbmV4cG9ydCBkZWZhdWx0IE51bWJlclJhbmdlRmllbGQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qc3gubWFwIl19 */'),
          );
        },
      }),
      minErrorState && errorMsg,
    ),
    (0, _core.jsx)(_common.FieldDescriptionLabel, null, 'Max:'),
    (0, _core.jsx)(
      _common.FieldInputWrapper,
      null,
      (0, _core.jsx)(_Input['default'], {
        error: maxErrorState,
        'aria-label': 'maximum_input',
        placeholder: 'e.g. 85',
        size: 'sm',
        value: max,
        onChange: function onChange(e) {
          onMaxChange(e.target.value);
        },
        onBlur: function onBlur(e) {
          setMaxErrorState(isInputInvalid(e.target.value));
        },
        getOverrideCss: function getOverrideCss() {
          return /*#__PURE__*/ (0, _core.css)(
            'border-radius:0px 8px 8px 0px;',
            /*#__PURE__*/ (0, _core.css)(
              theme.typography.data,
              ';label:Uikit-NumberRangeField;' +
                (process.env.NODE_ENV === 'production'
                  ? ''
                  : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFnRWdCIiwiZmlsZSI6ImluZGV4LmpzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgKGMpIDIwMjAgVGhlIE9udGFyaW8gSW5zdGl0dXRlIGZvciBDYW5jZXIgUmVzZWFyY2guIEFsbCByaWdodHMgcmVzZXJ2ZWRcbiAqXG4gKiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2ZcbiAqIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgdjMuMC4gWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGVcbiAqIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS5cbiAqICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4gKlxuICogVEhJUyBTT0ZUV0FSRSBJUyBQUk9WSURFRCBCWSBUSEUgQ09QWVJJR0hUIEhPTERFUlMgQU5EIENPTlRSSUJVVE9SUyBcIkFTIElTXCIgQU5EIEFOWVxuICogRVhQUkVTUyBPUiBJTVBMSUVEIFdBUlJBTlRJRVMsIElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEIFRPLCBUSEUgSU1QTElFRCBXQVJSQU5USUVTXG4gKiBPRiBNRVJDSEFOVEFCSUxJVFkgQU5EIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFSRSBESVNDTEFJTUVELiBJTiBOTyBFVkVOVFxuICogU0hBTEwgVEhFIENPUFlSSUdIVCBIT0xERVIgT1IgQ09OVFJJQlVUT1JTIEJFIExJQUJMRSBGT1IgQU5ZIERJUkVDVCwgSU5ESVJFQ1QsXG4gKiBJTkNJREVOVEFMLCBTUEVDSUFMLCBFWEVNUExBUlksIE9SIENPTlNFUVVFTlRJQUwgREFNQUdFUyAoSU5DTFVESU5HLCBCVVQgTk9UIExJTUlURURcbiAqIFRPLCBQUk9DVVJFTUVOVCBPRiBTVUJTVElUVVRFIEdPT0RTIE9SIFNFUlZJQ0VTOyBMT1NTIE9GIFVTRSwgREFUQSwgT1IgUFJPRklUUztcbiAqIE9SIEJVU0lORVNTIElOVEVSUlVQVElPTikgSE9XRVZFUiBDQVVTRUQgQU5EIE9OIEFOWSBUSEVPUlkgT0YgTElBQklMSVRZLCBXSEVUSEVSXG4gKiBJTiBDT05UUkFDVCwgU1RSSUNUIExJQUJJTElUWSwgT1IgVE9SVCAoSU5DTFVESU5HIE5FR0xJR0VOQ0UgT1IgT1RIRVJXSVNFKSBBUklTSU5HIElOXG4gKiBBTlkgV0FZIE9VVCBPRiBUSEUgVVNFIE9GIFRISVMgU09GVFdBUkUsIEVWRU4gSUYgQURWSVNFRCBPRiBUSEUgUE9TU0lCSUxJVFkgT0YgU1VDSCBEQU1BR0UuXG4gKi9cbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IHsgRmllbGREZXNjcmlwdGlvbkxhYmVsLCBGaWVsZElucHV0V3JhcHBlciB9IGZyb20gJy4vY29tbW9uJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgSW5wdXQgZnJvbSAndWlraXQvZm9ybS9JbnB1dCc7XG5pbXBvcnQgQnV0dG9uIGZyb20gJ3Vpa2l0L0J1dHRvbic7XG5pbXBvcnQgeyB1c2VUaGVtZSB9IGZyb20gJ3Vpa2l0L1RoZW1lUHJvdmlkZXInO1xuaW1wb3J0IFR5cG9ncmFwaHkgZnJvbSAndWlraXQvVHlwb2dyYXBoeSc7XG5jb25zdCBOdW1iZXJSYW5nZUZpZWxkID0gKHsgbWluLCBvbk1pbkNoYW5nZSwgbWF4LCBvbk1heENoYW5nZSwgb25Hb0NsaWNrLCBnb0J1dHRvbkVuYWJsZWQsIHZhbGlkYXRpb24gPSBpID0+IHRydWUsIH0pID0+IHtcbiAgICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gICAgY29uc3QgW21pbkVycm9yU3RhdGUsIHNldE1pbkVycm9yU3RhdGVdID0gUmVhY3QudXNlU3RhdGUoZmFsc2UpO1xuICAgIGNvbnN0IFttYXhFcnJvclN0YXRlLCBzZXRNYXhFcnJvclN0YXRlXSA9IFJlYWN0LnVzZVN0YXRlKGZhbHNlKTtcbiAgICBjb25zdCBlcnJvck1zZyA9ICg8VHlwb2dyYXBoeSB2YXJpYW50PXsnY2FwdGlvbid9IGNvbG9yPXt0aGVtZS5jb2xvcnMuZXJyb3J9PlxuICAgICAgSW52YWxpZFxuICAgIDwvVHlwb2dyYXBoeT4pO1xuICAgIGNvbnN0IGlzSW5wdXRJbnZhbGlkID0gKGlucHV0KSA9PiB7XG4gICAgICAgIGNvbnN0IG51bWJlcklucHV0ID0gTnVtYmVyKGlucHV0KTtcbiAgICAgICAgcmV0dXJuIGlzTmFOKG51bWJlcklucHV0KSB8fCAhdmFsaWRhdGlvbihudW1iZXJJbnB1dCk7XG4gICAgfTtcbiAgICByZXR1cm4gKDxkaXYgY3NzPXtjc3MgYFxuICAgICAgICAke2Nzcyh0aGVtZS50eXBvZ3JhcGh5LmRlZmF1bHQpfVxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBgfT5cbiAgICAgIDxGaWVsZERlc2NyaXB0aW9uTGFiZWw+TWluOjwvRmllbGREZXNjcmlwdGlvbkxhYmVsPlxuICAgICAgPEZpZWxkSW5wdXRXcmFwcGVyPlxuICAgICAgICA8SW5wdXQgZXJyb3I9e21pbkVycm9yU3RhdGV9IGFyaWEtbGFiZWw9XCJtaW5pbXVtX2lucHV0XCIgcGxhY2Vob2xkZXI9XCJlLmcuIDBcIiBzaXplPVwic21cIiB2YWx1ZT17bWlufSBvbkNoYW5nZT17ZSA9PiB7XG4gICAgICAgIG9uTWluQ2hhbmdlKGUudGFyZ2V0LnZhbHVlKTtcbiAgICB9fSBvbkJsdXI9e2UgPT4ge1xuICAgICAgICBzZXRNaW5FcnJvclN0YXRlKGlzSW5wdXRJbnZhbGlkKGUudGFyZ2V0LnZhbHVlKSk7XG4gICAgfX0gZ2V0T3ZlcnJpZGVDc3M9eygpID0+IGNzcyBgXG4gICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDBweDtcbiAgICAgICAgICAgICAgJHtjc3ModGhlbWUudHlwb2dyYXBoeS5kYXRhKX1cbiAgICAgICAgICAgIGB9Lz5cbiAgICAgICAge21pbkVycm9yU3RhdGUgJiYgZXJyb3JNc2d9XG4gICAgICA8L0ZpZWxkSW5wdXRXcmFwcGVyPlxuXG4gICAgICA8RmllbGREZXNjcmlwdGlvbkxhYmVsPk1heDo8L0ZpZWxkRGVzY3JpcHRpb25MYWJlbD5cblxuICAgICAgPEZpZWxkSW5wdXRXcmFwcGVyPlxuICAgICAgICA8SW5wdXQgZXJyb3I9e21heEVycm9yU3RhdGV9IGFyaWEtbGFiZWw9XCJtYXhpbXVtX2lucHV0XCIgcGxhY2Vob2xkZXI9XCJlLmcuIDg1XCIgc2l6ZT1cInNtXCIgdmFsdWU9e21heH0gb25DaGFuZ2U9e2UgPT4ge1xuICAgICAgICBvbk1heENoYW5nZShlLnRhcmdldC52YWx1ZSk7XG4gICAgfX0gb25CbHVyPXtlID0+IHtcbiAgICAgICAgc2V0TWF4RXJyb3JTdGF0ZShpc0lucHV0SW52YWxpZChlLnRhcmdldC52YWx1ZSkpO1xuICAgIH19IGdldE92ZXJyaWRlQ3NzPXsoKSA9PiBjc3MgYFxuICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAwcHggOHB4IDhweCAwcHg7XG4gICAgICAgICAgICAgICR7Y3NzKHRoZW1lLnR5cG9ncmFwaHkuZGF0YSl9XG4gICAgICAgICAgICBgfS8+XG4gICAgICAgIHttYXhFcnJvclN0YXRlICYmIGVycm9yTXNnfVxuICAgICAgPC9GaWVsZElucHV0V3JhcHBlcj5cblxuICAgICAgPEJ1dHRvbiBjc3M9e2NzcyBgXG4gICAgICAgICAgbWFyZ2luOiAycHggMHB4IDBweCA1cHg7XG4gICAgICAgIGB9IHZhcmlhbnQ9XCJzZWNvbmRhcnlcIiBvbkNsaWNrPXtlID0+IG9uR29DbGljaygpfSBkaXNhYmxlZD17IWdvQnV0dG9uRW5hYmxlZH0+XG4gICAgICAgIEdPXG4gICAgICA8L0J1dHRvbj5cbiAgICA8L2Rpdj4pO1xufTtcbmV4cG9ydCBkZWZhdWx0IE51bWJlclJhbmdlRmllbGQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qc3gubWFwIl19 */'),
            ),
            ';label:Uikit-NumberRangeField;' +
              (process.env.NODE_ENV === 'production'
                ? ''
                : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE4RGlDIiwiZmlsZSI6ImluZGV4LmpzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgKGMpIDIwMjAgVGhlIE9udGFyaW8gSW5zdGl0dXRlIGZvciBDYW5jZXIgUmVzZWFyY2guIEFsbCByaWdodHMgcmVzZXJ2ZWRcbiAqXG4gKiBUaGlzIHByb2dyYW0gYW5kIHRoZSBhY2NvbXBhbnlpbmcgbWF0ZXJpYWxzIGFyZSBtYWRlIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2ZcbiAqIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgdjMuMC4gWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGVcbiAqIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS5cbiAqICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4gKlxuICogVEhJUyBTT0ZUV0FSRSBJUyBQUk9WSURFRCBCWSBUSEUgQ09QWVJJR0hUIEhPTERFUlMgQU5EIENPTlRSSUJVVE9SUyBcIkFTIElTXCIgQU5EIEFOWVxuICogRVhQUkVTUyBPUiBJTVBMSUVEIFdBUlJBTlRJRVMsIElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEIFRPLCBUSEUgSU1QTElFRCBXQVJSQU5USUVTXG4gKiBPRiBNRVJDSEFOVEFCSUxJVFkgQU5EIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFSRSBESVNDTEFJTUVELiBJTiBOTyBFVkVOVFxuICogU0hBTEwgVEhFIENPUFlSSUdIVCBIT0xERVIgT1IgQ09OVFJJQlVUT1JTIEJFIExJQUJMRSBGT1IgQU5ZIERJUkVDVCwgSU5ESVJFQ1QsXG4gKiBJTkNJREVOVEFMLCBTUEVDSUFMLCBFWEVNUExBUlksIE9SIENPTlNFUVVFTlRJQUwgREFNQUdFUyAoSU5DTFVESU5HLCBCVVQgTk9UIExJTUlURURcbiAqIFRPLCBQUk9DVVJFTUVOVCBPRiBTVUJTVElUVVRFIEdPT0RTIE9SIFNFUlZJQ0VTOyBMT1NTIE9GIFVTRSwgREFUQSwgT1IgUFJPRklUUztcbiAqIE9SIEJVU0lORVNTIElOVEVSUlVQVElPTikgSE9XRVZFUiBDQVVTRUQgQU5EIE9OIEFOWSBUSEVPUlkgT0YgTElBQklMSVRZLCBXSEVUSEVSXG4gKiBJTiBDT05UUkFDVCwgU1RSSUNUIExJQUJJTElUWSwgT1IgVE9SVCAoSU5DTFVESU5HIE5FR0xJR0VOQ0UgT1IgT1RIRVJXSVNFKSBBUklTSU5HIElOXG4gKiBBTlkgV0FZIE9VVCBPRiBUSEUgVVNFIE9GIFRISVMgU09GVFdBUkUsIEVWRU4gSUYgQURWSVNFRCBPRiBUSEUgUE9TU0lCSUxJVFkgT0YgU1VDSCBEQU1BR0UuXG4gKi9cbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IHsgRmllbGREZXNjcmlwdGlvbkxhYmVsLCBGaWVsZElucHV0V3JhcHBlciB9IGZyb20gJy4vY29tbW9uJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgSW5wdXQgZnJvbSAndWlraXQvZm9ybS9JbnB1dCc7XG5pbXBvcnQgQnV0dG9uIGZyb20gJ3Vpa2l0L0J1dHRvbic7XG5pbXBvcnQgeyB1c2VUaGVtZSB9IGZyb20gJ3Vpa2l0L1RoZW1lUHJvdmlkZXInO1xuaW1wb3J0IFR5cG9ncmFwaHkgZnJvbSAndWlraXQvVHlwb2dyYXBoeSc7XG5jb25zdCBOdW1iZXJSYW5nZUZpZWxkID0gKHsgbWluLCBvbk1pbkNoYW5nZSwgbWF4LCBvbk1heENoYW5nZSwgb25Hb0NsaWNrLCBnb0J1dHRvbkVuYWJsZWQsIHZhbGlkYXRpb24gPSBpID0+IHRydWUsIH0pID0+IHtcbiAgICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gICAgY29uc3QgW21pbkVycm9yU3RhdGUsIHNldE1pbkVycm9yU3RhdGVdID0gUmVhY3QudXNlU3RhdGUoZmFsc2UpO1xuICAgIGNvbnN0IFttYXhFcnJvclN0YXRlLCBzZXRNYXhFcnJvclN0YXRlXSA9IFJlYWN0LnVzZVN0YXRlKGZhbHNlKTtcbiAgICBjb25zdCBlcnJvck1zZyA9ICg8VHlwb2dyYXBoeSB2YXJpYW50PXsnY2FwdGlvbid9IGNvbG9yPXt0aGVtZS5jb2xvcnMuZXJyb3J9PlxuICAgICAgSW52YWxpZFxuICAgIDwvVHlwb2dyYXBoeT4pO1xuICAgIGNvbnN0IGlzSW5wdXRJbnZhbGlkID0gKGlucHV0KSA9PiB7XG4gICAgICAgIGNvbnN0IG51bWJlcklucHV0ID0gTnVtYmVyKGlucHV0KTtcbiAgICAgICAgcmV0dXJuIGlzTmFOKG51bWJlcklucHV0KSB8fCAhdmFsaWRhdGlvbihudW1iZXJJbnB1dCk7XG4gICAgfTtcbiAgICByZXR1cm4gKDxkaXYgY3NzPXtjc3MgYFxuICAgICAgICAke2Nzcyh0aGVtZS50eXBvZ3JhcGh5LmRlZmF1bHQpfVxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBgfT5cbiAgICAgIDxGaWVsZERlc2NyaXB0aW9uTGFiZWw+TWluOjwvRmllbGREZXNjcmlwdGlvbkxhYmVsPlxuICAgICAgPEZpZWxkSW5wdXRXcmFwcGVyPlxuICAgICAgICA8SW5wdXQgZXJyb3I9e21pbkVycm9yU3RhdGV9IGFyaWEtbGFiZWw9XCJtaW5pbXVtX2lucHV0XCIgcGxhY2Vob2xkZXI9XCJlLmcuIDBcIiBzaXplPVwic21cIiB2YWx1ZT17bWlufSBvbkNoYW5nZT17ZSA9PiB7XG4gICAgICAgIG9uTWluQ2hhbmdlKGUudGFyZ2V0LnZhbHVlKTtcbiAgICB9fSBvbkJsdXI9e2UgPT4ge1xuICAgICAgICBzZXRNaW5FcnJvclN0YXRlKGlzSW5wdXRJbnZhbGlkKGUudGFyZ2V0LnZhbHVlKSk7XG4gICAgfX0gZ2V0T3ZlcnJpZGVDc3M9eygpID0+IGNzcyBgXG4gICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDBweDtcbiAgICAgICAgICAgICAgJHtjc3ModGhlbWUudHlwb2dyYXBoeS5kYXRhKX1cbiAgICAgICAgICAgIGB9Lz5cbiAgICAgICAge21pbkVycm9yU3RhdGUgJiYgZXJyb3JNc2d9XG4gICAgICA8L0ZpZWxkSW5wdXRXcmFwcGVyPlxuXG4gICAgICA8RmllbGREZXNjcmlwdGlvbkxhYmVsPk1heDo8L0ZpZWxkRGVzY3JpcHRpb25MYWJlbD5cblxuICAgICAgPEZpZWxkSW5wdXRXcmFwcGVyPlxuICAgICAgICA8SW5wdXQgZXJyb3I9e21heEVycm9yU3RhdGV9IGFyaWEtbGFiZWw9XCJtYXhpbXVtX2lucHV0XCIgcGxhY2Vob2xkZXI9XCJlLmcuIDg1XCIgc2l6ZT1cInNtXCIgdmFsdWU9e21heH0gb25DaGFuZ2U9e2UgPT4ge1xuICAgICAgICBvbk1heENoYW5nZShlLnRhcmdldC52YWx1ZSk7XG4gICAgfX0gb25CbHVyPXtlID0+IHtcbiAgICAgICAgc2V0TWF4RXJyb3JTdGF0ZShpc0lucHV0SW52YWxpZChlLnRhcmdldC52YWx1ZSkpO1xuICAgIH19IGdldE92ZXJyaWRlQ3NzPXsoKSA9PiBjc3MgYFxuICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAwcHggOHB4IDhweCAwcHg7XG4gICAgICAgICAgICAgICR7Y3NzKHRoZW1lLnR5cG9ncmFwaHkuZGF0YSl9XG4gICAgICAgICAgICBgfS8+XG4gICAgICAgIHttYXhFcnJvclN0YXRlICYmIGVycm9yTXNnfVxuICAgICAgPC9GaWVsZElucHV0V3JhcHBlcj5cblxuICAgICAgPEJ1dHRvbiBjc3M9e2NzcyBgXG4gICAgICAgICAgbWFyZ2luOiAycHggMHB4IDBweCA1cHg7XG4gICAgICAgIGB9IHZhcmlhbnQ9XCJzZWNvbmRhcnlcIiBvbkNsaWNrPXtlID0+IG9uR29DbGljaygpfSBkaXNhYmxlZD17IWdvQnV0dG9uRW5hYmxlZH0+XG4gICAgICAgIEdPXG4gICAgICA8L0J1dHRvbj5cbiAgICA8L2Rpdj4pO1xufTtcbmV4cG9ydCBkZWZhdWx0IE51bWJlclJhbmdlRmllbGQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qc3gubWFwIl19 */'),
          );
        },
      }),
      maxErrorState && errorMsg,
    ),
    (0, _core.jsx)(
      _Button['default'],
      {
        css: _ref,
        variant: 'secondary',
        onClick: function onClick(e) {
          return onGoClick();
        },
        disabled: !goButtonEnabled,
      },
      'GO',
    ),
  );
};

var _default = NumberRangeField;
exports['default'] = _default;
